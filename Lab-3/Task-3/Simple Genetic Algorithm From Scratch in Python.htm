<!DOCTYPE html>
<html lang="en-US">
<head><meta charset="UTF-8" /><script type="e6851de2356a2aa710417145-text/javascript">if(navigator.userAgent.match(/MSIE|Internet Explorer/i)||navigator.userAgent.match(/Trident\/7\..*?rv:11/i)){var href=document.location.href;if(!href.match(/[?&]nowprocket/)){if(href.indexOf("?")==-1){if(href.indexOf("#")==-1){document.location.href=href+"?nowprocket=1"}else{document.location.href=href.replace("#","?nowprocket=1#")}}else{if(href.indexOf("#")==-1){document.location.href=href+"&nowprocket=1"}else{document.location.href=href.replace("#","&nowprocket=1#")}}}}</script><script type="e6851de2356a2aa710417145-text/javascript">class RocketLazyLoadScripts{constructor(){this.triggerEvents=["keydown","mousedown","mousemove","touchmove","touchstart","touchend","wheel"],this.userEventHandler=this._triggerListener.bind(this),this.touchStartHandler=this._onTouchStart.bind(this),this.touchMoveHandler=this._onTouchMove.bind(this),this.touchEndHandler=this._onTouchEnd.bind(this),this.clickHandler=this._onClick.bind(this),this.interceptedClicks=[],window.addEventListener("pageshow",(e=>{this.persisted=e.persisted})),window.addEventListener("DOMContentLoaded",(()=>{this._preconnect3rdParties()})),this.delayedScripts={normal:[],async:[],defer:[]},this.allJQueries=[]}_addUserInteractionListener(e){document.hidden?e._triggerListener():(this.triggerEvents.forEach((t=>window.addEventListener(t,e.userEventHandler,{passive:!0}))),window.addEventListener("touchstart",e.touchStartHandler,{passive:!0}),window.addEventListener("mousedown",e.touchStartHandler),document.addEventListener("visibilitychange",e.userEventHandler))}_removeUserInteractionListener(){this.triggerEvents.forEach((e=>window.removeEventListener(e,this.userEventHandler,{passive:!0}))),document.removeEventListener("visibilitychange",this.userEventHandler)}_onTouchStart(e){"HTML"!==e.target.tagName&&(window.addEventListener("touchend",this.touchEndHandler),window.addEventListener("mouseup",this.touchEndHandler),window.addEventListener("touchmove",this.touchMoveHandler,{passive:!0}),window.addEventListener("mousemove",this.touchMoveHandler),e.target.addEventListener("click",this.clickHandler),this._renameDOMAttribute(e.target,"onclick","rocket-onclick"))}_onTouchMove(e){window.removeEventListener("touchend",this.touchEndHandler),window.removeEventListener("mouseup",this.touchEndHandler),window.removeEventListener("touchmove",this.touchMoveHandler,{passive:!0}),window.removeEventListener("mousemove",this.touchMoveHandler),e.target.removeEventListener("click",this.clickHandler),this._renameDOMAttribute(e.target,"rocket-onclick","onclick")}_onTouchEnd(e){window.removeEventListener("touchend",this.touchEndHandler),window.removeEventListener("mouseup",this.touchEndHandler),window.removeEventListener("touchmove",this.touchMoveHandler,{passive:!0}),window.removeEventListener("mousemove",this.touchMoveHandler)}_onClick(e){e.target.removeEventListener("click",this.clickHandler),this._renameDOMAttribute(e.target,"rocket-onclick","onclick"),this.interceptedClicks.push(e),e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation()}_replayClicks(){window.removeEventListener("touchstart",this.touchStartHandler,{passive:!0}),window.removeEventListener("mousedown",this.touchStartHandler),this.interceptedClicks.forEach((e=>{e.target.dispatchEvent(new MouseEvent("click",{view:e.view,bubbles:!0,cancelable:!0}))}))}_renameDOMAttribute(e,t,n){e.hasAttribute&&e.hasAttribute(t)&&(event.target.setAttribute(n,event.target.getAttribute(t)),event.target.removeAttribute(t))}_triggerListener(){this._removeUserInteractionListener(this),"loading"===document.readyState?document.addEventListener("DOMContentLoaded",this._loadEverythingNow.bind(this)):this._loadEverythingNow()}_preconnect3rdParties(){let e=[];document.querySelectorAll("script[type=rocketlazyloadscript]").forEach((t=>{if(t.hasAttribute("src")){const n=new URL(t.src).origin;n!==location.origin&&e.push({src:n,crossOrigin:t.crossOrigin||"module"===t.getAttribute("data-rocket-type")})}})),e=[...new Map(e.map((e=>[JSON.stringify(e),e]))).values()],this._batchInjectResourceHints(e,"preconnect")}async _loadEverythingNow(){this.lastBreath=Date.now(),this._delayEventListeners(),this._delayJQueryReady(this),this._handleDocumentWrite(),this._registerAllDelayedScripts(),this._preloadAllScripts(),await this._loadScriptsFromList(this.delayedScripts.normal),await this._loadScriptsFromList(this.delayedScripts.defer),await this._loadScriptsFromList(this.delayedScripts.async);try{await this._triggerDOMContentLoaded(),await this._triggerWindowLoad()}catch(e){}window.dispatchEvent(new Event("rocket-allScriptsLoaded")),this._replayClicks()}_registerAllDelayedScripts(){document.querySelectorAll("script[type=rocketlazyloadscript]").forEach((e=>{e.hasAttribute("src")?e.hasAttribute("async")&&!1!==e.async?this.delayedScripts.async.push(e):e.hasAttribute("defer")&&!1!==e.defer||"module"===e.getAttribute("data-rocket-type")?this.delayedScripts.defer.push(e):this.delayedScripts.normal.push(e):this.delayedScripts.normal.push(e)}))}async _transformScript(e){return await this._littleBreath(),new Promise((t=>{const n=document.createElement("script");[...e.attributes].forEach((e=>{let t=e.nodeName;"type"!==t&&("data-rocket-type"===t&&(t="type"),n.setAttribute(t,e.nodeValue))})),e.hasAttribute("src")?(n.addEventListener("load",t),n.addEventListener("error",t)):(n.text=e.text,t());try{e.parentNode.replaceChild(n,e)}catch(e){t()}}))}async _loadScriptsFromList(e){const t=e.shift();return t?(await this._transformScript(t),this._loadScriptsFromList(e)):Promise.resolve()}_preloadAllScripts(){this._batchInjectResourceHints([...this.delayedScripts.normal,...this.delayedScripts.defer,...this.delayedScripts.async],"preload")}_batchInjectResourceHints(e,t){var n=document.createDocumentFragment();e.forEach((e=>{if(e.src){const i=document.createElement("link");i.href=e.src,i.rel=t,"preconnect"!==t&&(i.as="script"),e.getAttribute&&"module"===e.getAttribute("data-rocket-type")&&(i.crossOrigin=!0),e.crossOrigin&&(i.crossOrigin=e.crossOrigin),n.appendChild(i)}})),document.head.appendChild(n)}_delayEventListeners(){let e={};function t(t,n){!function(t){function n(n){return e[t].eventsToRewrite.indexOf(n)>=0?"rocket-"+n:n}e[t]||(e[t]={originalFunctions:{add:t.addEventListener,remove:t.removeEventListener},eventsToRewrite:[]},t.addEventListener=function(){arguments[0]=n(arguments[0]),e[t].originalFunctions.add.apply(t,arguments)},t.removeEventListener=function(){arguments[0]=n(arguments[0]),e[t].originalFunctions.remove.apply(t,arguments)})}(t),e[t].eventsToRewrite.push(n)}function n(e,t){let n=e[t];Object.defineProperty(e,t,{get:()=>n||function(){},set(i){e["rocket"+t]=n=i}})}t(document,"DOMContentLoaded"),t(window,"DOMContentLoaded"),t(window,"load"),t(window,"pageshow"),t(document,"readystatechange"),n(document,"onreadystatechange"),n(window,"onload"),n(window,"onpageshow")}_delayJQueryReady(e){let t=window.jQuery;Object.defineProperty(window,"jQuery",{get:()=>t,set(n){if(n&&n.fn&&!e.allJQueries.includes(n)){n.fn.ready=n.fn.init.prototype.ready=function(t){e.domReadyFired?t.bind(document)(n):document.addEventListener("rocket-DOMContentLoaded",(()=>t.bind(document)(n)))};const t=n.fn.on;n.fn.on=n.fn.init.prototype.on=function(){if(this[0]===window){function e(e){return e.split(" ").map((e=>"load"===e||0===e.indexOf("load.")?"rocket-jquery-load":e)).join(" ")}"string"==typeof arguments[0]||arguments[0]instanceof String?arguments[0]=e(arguments[0]):"object"==typeof arguments[0]&&Object.keys(arguments[0]).forEach((t=>{delete Object.assign(arguments[0],{[e(t)]:arguments[0][t]})[t]}))}return t.apply(this,arguments),this},e.allJQueries.push(n)}t=n}})}async _triggerDOMContentLoaded(){this.domReadyFired=!0,await this._littleBreath(),document.dispatchEvent(new Event("rocket-DOMContentLoaded")),await this._littleBreath(),window.dispatchEvent(new Event("rocket-DOMContentLoaded")),await this._littleBreath(),document.dispatchEvent(new Event("rocket-readystatechange")),await this._littleBreath(),document.rocketonreadystatechange&&document.rocketonreadystatechange()}async _triggerWindowLoad(){await this._littleBreath(),window.dispatchEvent(new Event("rocket-load")),await this._littleBreath(),window.rocketonload&&window.rocketonload(),await this._littleBreath(),this.allJQueries.forEach((e=>e(window).trigger("rocket-jquery-load"))),await this._littleBreath();const e=new Event("rocket-pageshow");e.persisted=this.persisted,window.dispatchEvent(e),await this._littleBreath(),window.rocketonpageshow&&window.rocketonpageshow({persisted:this.persisted})}_handleDocumentWrite(){const e=new Map;document.write=document.writeln=function(t){const n=document.currentScript,i=document.createRange(),r=n.parentElement;let o=e.get(n);void 0===o&&(o=n.nextSibling,e.set(n,o));const s=document.createDocumentFragment();i.setStart(s,0),s.appendChild(i.createContextualFragment(t)),r.insertBefore(s,o)}}async _littleBreath(){Date.now()-this.lastBreath>45&&(await this._requestAnimFrame(),this.lastBreath=Date.now())}async _requestAnimFrame(){return document.hidden?new Promise((e=>setTimeout(e))):new Promise((e=>requestAnimationFrame(e)))}static run(){const e=new RocketLazyLoadScripts;e._addUserInteractionListener(e)}}RocketLazyLoadScripts.run();</script>

<title>Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com</title><link rel="stylesheet" href="https://machinelearningmastery.com/wp-content/cache/min/1/03959d94a7ae29bc2b43056fafa78432.css" media="all" data-minify="1" />

<link rel="pingback" href="https://machinelearningmastery.com/xmlrpc.php" />
<script type="rocketlazyloadscript">!function(){"use strict";for(var t=window.location.search.substring(1).split("&"),e=0;e<t.length;e++){var i="adt_ei",a=t[e];if(0===a.indexOf(i)){var r=a.split(i+"=")[1];localStorage.setItem(i,r),t.splice(e,1),history.replaceState(null,"","?"+t.join("&"));break}}}();
</script><meta name='robots' content='index, follow, max-image-preview:large, max-snippet:-1, max-video-preview:-1' />

<script type="rocketlazyloadscript">
MathJax = {
  tex: {
    inlineMath: [['$','$'],['\\(','\\)']], 
    processEscapes: true
  },
  options: {
    ignoreHtmlClass: 'tex2jax_ignore|editor-rich-text'
  }
};

</script>
<style data-no-optimize="1" data-cfasync="false">
	.adthrive-ad {
		margin-top: 10px;
		margin-bottom: 10px;
		text-align: center;
		overflow-x: visible;
		clear: both;
		line-height: 0;
	}
	.adthrive-ad.adthrive-sidebar.adthrive-sidebar-9.adthrive-sticky {
top: 3rem
}

.adthrive-content.adthrive-ad-cls {
min-height: 90px !important;
}</style>
<script data-no-optimize="1" data-cfasync="false">
	window.adthriveCLS = {
		enabledLocations: ['Content', 'Recipe'],
		injectedSlots: [],
		injectedFromPlugin: true,
		branch: '1ef2db3',bucket: 'prod',			};
	window.adthriveCLS.siteAds = {"siteId":"5d4c8ca4693e634b2e5d98cf","siteName":"Machine Learning Mastery","betaTester":false,"targeting":[{"value":"5d4c8ca4693e634b2e5d98cf","key":"siteId"},{"value":"6233884dd842a370880ea737","key":"organizationId"},{"value":"Machine Learning Mastery","key":"siteName"},{"value":"Prime","key":"service"},{"value":"on","key":"bidding"},{"value":["Tech"],"key":"verticals"}],"breakpoints":{"tablet":768,"desktop":1024},"adUnits":[{"sequence":null,"targeting":[{"value":["Sidebar"],"key":"location"}],"devices":["desktop","tablet"],"name":"Sidebar","sticky":false,"location":"Sidebar","dynamic":{"pageSelector":"","spacing":0,"max":1,"lazy":false,"lazyMax":null,"elementSelector":".widget #right-sidebar","skip":0,"classNames":[],"position":"afterbegin","every":1,"enabled":true},"adSizes":[[300,250]],"priority":299,"autosize":false},{"sequence":null,"targeting":[{"value":["Content"],"key":"location"}],"devices":["desktop","tablet"],"name":"Content","sticky":false,"location":"Content","dynamic":{"pageSelector":"body.post-template-default","spacing":1.5,"max":9,"lazy":true,"lazyMax":30,"elementSelector":".entry > h3, .entry > h4, .entry > h2","skip":1,"classNames":[],"position":"beforebegin","every":1,"enabled":true},"adSizes":[[1,1],[1,2],[250,250],[300,250],[300,300],[320,100],[336,280],[468,60],[552,334],[728,90],[728,250],[300,200],[320,300]],"priority":199,"autosize":true},{"sequence":null,"targeting":[{"value":["Content"],"key":"location"}],"devices":["phone"],"name":"Content","sticky":false,"location":"Content","dynamic":{"pageSelector":"body.post-template-default","spacing":1.5,"max":9,"lazy":true,"lazyMax":30,"elementSelector":".entry > h3, .entry > h4, .entry > h2","skip":1,"classNames":[],"position":"beforebegin","every":1,"enabled":true},"adSizes":[[1,1],[1,2],[250,250],[300,50],[300,250],[300,300],[320,50],[320,100],[300,200],[320,300]],"priority":199,"autosize":true},{"sequence":1,"targeting":[{"value":["Below Post"],"key":"location"}],"devices":["desktop","tablet","phone"],"name":"Below_Post_1","sticky":false,"location":"Below Post","dynamic":{"pageSelector":"","spacing":0,"max":0,"lazy":true,"lazyMax":1,"elementSelector":".crp_related  ","skip":0,"classNames":[],"position":"beforebegin","every":1,"enabled":true},"adSizes":[[1,1],[250,250],[300,250],[320,50],[320,100],[336,280],[468,60],[728,90],[728,250],[970,250],[300,50],[300,200],[300,300],[320,300]],"priority":99,"autosize":true}],"adDensityLayout":{"mobile":{"adDensity":0.22,"onePerViewport":false},"pageOverrides":[{"mobile":{"adDensity":0.22,"onePerViewport":false},"pageSelector":"body.post-template-default","desktop":{"adDensity":0.22,"onePerViewport":false}}],"desktop":{"adDensity":0.22,"onePerViewport":false}},"adDensityEnabled":true,"siteExperiments":[],"adTypes":{"nativeMobileRecipe":true,"expandableFooter":false,"nativeDesktopSidebar":true,"nativeDesktopContent":true,"outstreamDesktop":false,"interscroller":false,"miniscroller":true,"nativeDesktopRecipe":true,"outstreamMobile":true,"animatedFooter":true,"nativeMobileContent":true},"adOptions":{"theTradeDesk":true,"verizon":true,"undertone":true,"footerCloseButton":true,"teads":true,"pmp":true,"thirtyThreeAcross":true,"sharethrough":true,"removeVideoTitleWrapper":false,"pubMatic":true,"roundel":true,"infiniteScroll":false,"yahoossp":true,"sonobi":true,"yieldmo":true,"footerSelector":"","amazonUAM":true,"gamMCMEnabled":true,"gamMCMChildNetworkCode":"22523581566","stickyContainerAds":false,"rubiconMediaMath":true,"rubicon":true,"conversant":false,"openx":true,"mobileHeaderHeight":1,"unruly":true,"mediaGrid":true,"bRealTime":true,"gumgum":true,"comscoreFooter":false,"desktopInterstitial":false,"footerCloseButtonDesktop":true,"isAutoOptimized":false,"comscoreTAL":true,"brightroll":true,"targetaff":false,"tripleLiftMobile":true,"advancePlaylistOptions":{"playlistPlayer":{"enabled":true},"relatedPlayer":{"enabled":true,"applyToFirst":true}},"kargo":true,"liveRampATS":true,"footerCloseButtonMobile":true,"allowSmallerAdSizes":true,"comscore":null,"mobileInterstitial":false,"tripleLift":true,"sensitiveCategories":["alc","ast","cbd","conl","cosm","dat","dlu","drg","gamc","gamv","grq","pol","rel","sst","ssr","srh","ske","tob","wtl"],"liveRamp":true,"mobileInterstitialBlockedPageSelectors":"","adthriveEmailIdentity":true,"criteo":true,"nativo":true,"infiniteScrollOptions":{"selector":"","heightThreshold":0},"clsOptimizedAds":true,"colossus":true,"verticals":["Tech"],"inImage":false,"advancePlaylist":true,"delayLoading":true,"tripleLiftDesktop":false,"inImageZone":null,"appNexus":false,"liveRampId":"","infiniteScrollRefresh":false,"indexExchange":true},"videoPlayers":{"contextual":{"autoplayCollapsibleEnabled":false,"overrideEmbedLocation":false,"defaultPlayerType":"static"},"videoEmbed":"div","footerSelector":"","players":[{"devices":["desktop","mobile"],"description":"","id":4062751,"title":"Stationary related player - desktop and mobile","type":"stationaryRelated","enabled":false,"playerId":null},{"pageSelector":"","devices":["desktop"],"description":"","elementSelector":"","skip":0,"id":4062752,"position":"afterend","title":"Sticky related player - desktop","type":"stickyRelated","enabled":false,"playerId":null},{"pageSelector":"","devices":["mobile"],"mobileLocation":"top-right","description":"","elementSelector":"","skip":0,"id":4062753,"position":"afterend","title":"Sticky related player - mobile","type":"stickyRelated","enabled":false,"playerId":null},{"pageSelector":"","devices":["desktop"],"description":"","skip":0,"title":"","type":"stickyPlaylist","enabled":false,"footerSelector":"","elementSelector":"","id":4062754,"position":"afterend","saveVideoCloseState":false,"shuffle":true},{"pageSelector":"","devices":["mobile"],"mobileLocation":"top-right","description":"","skip":0,"title":"","type":"stickyPlaylist","enabled":false,"footerSelector":"","elementSelector":"","id":4062755,"position":"afterend","saveVideoCloseState":false,"shuffle":true},{"pageSelector":"","devices":["desktop"],"description":"","elementSelector":"","skip":0,"id":4062756,"position":"afterend","title":"","type":"sekindo","enabled":false},{"pageSelector":"","devices":["mobile"],"description":"","elementSelector":"","skip":0,"id":4062757,"position":"afterend","title":"","type":"sekindo","enabled":false}],"partners":{"roundel":true,"yahoossp":true,"criteo":true,"unruly":true,"mediaGrid":true,"gumgum":true,"telaria":true,"colossus":true,"pmp":true,"amazonUAM":true,"kargo":true,"thirtyThreeAcross":true,"stickyOutstream":{"allowOnHomepage":false,"mobile":{"enabled":false},"desktop":{"enabled":false},"blockedPageSelectors":"","allowForPageWithStickyPlayer":{"enabled":false}},"sharethrough":true,"rubicon":true,"appNexus":true,"conversant":false,"tripleLift":true,"openx":true,"pubMatic":true,"spotx":true,"indexExchange":true}}};</script>

<script data-no-optimize="1" data-cfasync="false">
(function(w, d) {
	w.adthrive = w.adthrive || {};
	w.adthrive.cmd = w.adthrive.cmd || [];
	w.adthrive.plugin = 'adthrive-ads-2.4.0';
	w.adthrive.host = 'ads.adthrive.com';
	w.adthrive.integration = 'plugin';

	var commitParam = (w.adthriveCLS && w.adthriveCLS.bucket !== 'prod' && w.adthriveCLS.branch) ? '&commit=' + w.adthriveCLS.branch : '';

	var s = d.createElement('script');
	s.async = true;
	s.referrerpolicy='no-referrer-when-downgrade';
	s.src = 'https://' + w.adthrive.host + '/sites/5d4c8ca4693e634b2e5d98cf/ads.min.js?referrer=' + w.encodeURIComponent(w.location.href) + commitParam + '&cb=' + (Math.floor(Math.random() * 100) + 1) + '';
	var n = d.getElementsByTagName('script')[0];
	n.parentNode.insertBefore(s, n);
})(window, document);
</script>

<!--  Mobile viewport scale -->
<meta content="initial-scale=1.0, maximum-scale=1.0, user-scalable=yes" name="viewport"/>

	<!-- This site is optimized with the Yoast SEO plugin v19.10 - https://yoast.com/wordpress/plugins/seo/ -->
	<title>Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com</title>
	<link rel="canonical" href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" />
	<meta property="og:locale" content="en_US" />
	<meta property="og:type" content="article" />
	<meta property="og:title" content="Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com" />
	<meta property="og:description" content="The genetic algorithm is a stochastic global optimization algorithm. It may be one of the most popular and widely known biologically inspired algorithms, along with artificial neural networks. The algorithm is a type of evolutionary algorithm and performs an optimization procedure inspired by the biological theory of evolution by means of natural selection with a [&hellip;]" />
	<meta property="og:url" content="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" />
	<meta property="og:site_name" content="MachineLearningMastery.com" />
	<meta property="article:publisher" content="https://www.facebook.com/MachineLearningMastery/" />
	<meta property="article:author" content="https://www.facebook.com/MachineLearningMastery/" />
	<meta property="article:published_time" content="2021-03-02T18:00:34+00:00" />
	<meta property="article:modified_time" content="2021-10-11T21:20:46+00:00" />
	<meta property="og:image" content="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg" />
	<meta property="og:image:width" content="800" />
	<meta property="og:image:height" content="547" />
	<meta property="og:image:type" content="image/jpeg" />
	<meta name="author" content="Jason Brownlee" />
	<meta name="twitter:label1" content="Written by" />
	<meta name="twitter:data1" content="Jason Brownlee" />
	<meta name="twitter:label2" content="Est. reading time" />
	<meta name="twitter:data2" content="17 minutes" />
	<script type="application/ld+json" class="yoast-schema-graph">{"@context":"https://schema.org","@graph":[{"@type":"Article","@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#article","isPartOf":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/"},"author":{"name":"Jason Brownlee","@id":"https://machinelearningmastery.com/#/schema/person/1592c83d19df75f8b290e6bc03d7e6ce"},"headline":"Simple Genetic Algorithm From Scratch in Python","datePublished":"2021-03-02T18:00:34+00:00","dateModified":"2021-10-11T21:20:46+00:00","mainEntityOfPage":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/"},"wordCount":1942,"commentCount":105,"publisher":{"@id":"https://machinelearningmastery.com/#organization"},"image":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#primaryimage"},"thumbnailUrl":"https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg","articleSection":["Optimization"],"inLanguage":"en-US","potentialAction":[{"@type":"CommentAction","name":"Comment","target":["https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#respond"]}]},{"@type":"WebPage","@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/","url":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/","name":"Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com","isPartOf":{"@id":"https://machinelearningmastery.com/#website"},"primaryImageOfPage":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#primaryimage"},"image":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#primaryimage"},"thumbnailUrl":"https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg","datePublished":"2021-03-02T18:00:34+00:00","dateModified":"2021-10-11T21:20:46+00:00","breadcrumb":{"@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#breadcrumb"},"inLanguage":"en-US","potentialAction":[{"@type":"ReadAction","target":["https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/"]}]},{"@type":"ImageObject","inLanguage":"en-US","@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#primaryimage","url":"https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg","contentUrl":"https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg","width":800,"height":547,"caption":"Simple Genetic Algorithm From Scratch in Python Photo by Magharebia, some rights reserved."},{"@type":"BreadcrumbList","@id":"https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#breadcrumb","itemListElement":[{"@type":"ListItem","position":1,"name":"Home","item":"https://machinelearningmastery.com/"},{"@type":"ListItem","position":2,"name":"Blog","item":"https://machinelearningmastery.com/blog/"},{"@type":"ListItem","position":3,"name":"Simple Genetic Algorithm From Scratch in Python"}]},{"@type":"WebSite","@id":"https://machinelearningmastery.com/#website","url":"https://machinelearningmastery.com/","name":"MachineLearningMastery.com","description":"Making developers awesome at machine learning","publisher":{"@id":"https://machinelearningmastery.com/#organization"},"potentialAction":[{"@type":"SearchAction","target":{"@type":"EntryPoint","urlTemplate":"https://machinelearningmastery.com/?s={search_term_string}"},"query-input":"required name=search_term_string"}],"inLanguage":"en-US"},{"@type":"Organization","@id":"https://machinelearningmastery.com/#organization","name":"Machine Learning Mastery","url":"https://machinelearningmastery.com/","logo":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://machinelearningmastery.com/#/schema/logo/image/","url":"https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon.png","contentUrl":"https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon.png","width":512,"height":512,"caption":"Machine Learning Mastery"},"image":{"@id":"https://machinelearningmastery.com/#/schema/logo/image/"},"sameAs":["https://www.linkedin.com/company/machine-learning-mastery","https://www.facebook.com/MachineLearningMastery/","https://twitter.com/TeachTheMachine"]},{"@type":"Person","@id":"https://machinelearningmastery.com/#/schema/person/1592c83d19df75f8b290e6bc03d7e6ce","name":"Jason Brownlee","image":{"@type":"ImageObject","inLanguage":"en-US","@id":"https://machinelearningmastery.com/#/schema/person/image/","url":"https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=96&d=mm&r=g","contentUrl":"https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=96&d=mm&r=g","caption":"Jason Brownlee"},"description":"Jason Brownlee, PhD is a machine learning specialist who teaches developers how to get results with modern machine learning methods via hands-on tutorials.","sameAs":["http://MachineLearningMastery.com","https://www.facebook.com/MachineLearningMastery/","https://www.linkedin.com/company/machine-learning-mastery","https://twitter.com/teachthemachine"],"url":"https://machinelearningmastery.com/author/jasonb/"}]}</script>
	<!-- / Yoast SEO plugin. -->


<link rel='dns-prefetch' href='//cdn.jsdelivr.net' />
<link rel='dns-prefetch' href='//ads.adthrive.com' />
<link rel='dns-prefetch' href='//www.google-analytics.com' />
<link rel='dns-prefetch' href='//loadeu.exelator.com' />
<link rel='dns-prefetch' href='//sync.crwdcntrl.net' />
<link rel='dns-prefetch' href='//gdpr-wrapper.privacymanager.io' />
<link rel='dns-prefetch' href='//securepubads.g.doubleclick.net' />
<link rel='dns-prefetch' href='//gdpr.privacymanager.io' />
<link rel='dns-prefetch' href='//sb.scorecardresearch.com' />
<link rel='dns-prefetch' href='//confiant-integrations.global.ssl.fastly.net' />

<link rel="alternate" type="application/rss+xml" title="MachineLearningMastery.com &raquo; Feed" href="https://feeds.feedburner.com/MachineLearningMastery" />
<link rel="alternate" type="application/rss+xml" title="MachineLearningMastery.com &raquo; Comments Feed" href="https://machinelearningmastery.com/comments/feed/" />
<link rel="alternate" type="application/rss+xml" title="MachineLearningMastery.com &raquo; Simple Genetic Algorithm From Scratch in Python Comments Feed" href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/feed/" />
		<!-- This site uses the Google Analytics by MonsterInsights plugin v8.10.0 - Using Analytics tracking - https://www.monsterinsights.com/ -->
							<script
				src="//www.googletagmanager.com/gtag/js?id=UA-44039733-3"  data-cfasync="false" data-wpfc-render="false" type="text/javascript" async></script>
			<script data-cfasync="false" data-wpfc-render="false" type="text/javascript">
				var mi_version = '8.10.0';
				var mi_track_user = true;
				var mi_no_track_reason = '';
				
								var disableStrs = [
															'ga-disable-UA-44039733-3',
									];

				/* Function to detect opted out users */
				function __gtagTrackerIsOptedOut() {
					for (var index = 0; index < disableStrs.length; index++) {
						if (document.cookie.indexOf(disableStrs[index] + '=true') > -1) {
							return true;
						}
					}

					return false;
				}

				/* Disable tracking if the opt-out cookie exists. */
				if (__gtagTrackerIsOptedOut()) {
					for (var index = 0; index < disableStrs.length; index++) {
						window[disableStrs[index]] = true;
					}
				}

				/* Opt-out function */
				function __gtagTrackerOptout() {
					for (var index = 0; index < disableStrs.length; index++) {
						document.cookie = disableStrs[index] + '=true; expires=Thu, 31 Dec 2099 23:59:59 UTC; path=/';
						window[disableStrs[index]] = true;
					}
				}

				if ('undefined' === typeof gaOptout) {
					function gaOptout() {
						__gtagTrackerOptout();
					}
				}
								window.dataLayer = window.dataLayer || [];

				window.MonsterInsightsDualTracker = {
					helpers: {},
					trackers: {},
				};
				if (mi_track_user) {
					function __gtagDataLayer() {
						dataLayer.push(arguments);
					}

					function __gtagTracker(type, name, parameters) {
						if (!parameters) {
							parameters = {};
						}

						if (parameters.send_to) {
							__gtagDataLayer.apply(null, arguments);
							return;
						}

						if (type === 'event') {
							
														parameters.send_to = monsterinsights_frontend.ua;
							__gtagDataLayer(type, name, parameters);
													} else {
							__gtagDataLayer.apply(null, arguments);
						}
					}

					__gtagTracker('js', new Date());
					__gtagTracker('set', {
						'developer_id.dZGIzZG': true,
											});
															__gtagTracker('config', 'UA-44039733-3', {"forceSSL":"true","dimension1":"Jason Brownlee","dimension2":"Optimization"} );
										window.gtag = __gtagTracker;										(function () {
						/* https://developers.google.com/analytics/devguides/collection/analyticsjs/ */
						/* ga and __gaTracker compatibility shim. */
						var noopfn = function () {
							return null;
						};
						var newtracker = function () {
							return new Tracker();
						};
						var Tracker = function () {
							return null;
						};
						var p = Tracker.prototype;
						p.get = noopfn;
						p.set = noopfn;
						p.send = function () {
							var args = Array.prototype.slice.call(arguments);
							args.unshift('send');
							__gaTracker.apply(null, args);
						};
						var __gaTracker = function () {
							var len = arguments.length;
							if (len === 0) {
								return;
							}
							var f = arguments[len - 1];
							if (typeof f !== 'object' || f === null || typeof f.hitCallback !== 'function') {
								if ('send' === arguments[0]) {
									var hitConverted, hitObject = false, action;
									if ('event' === arguments[1]) {
										if ('undefined' !== typeof arguments[3]) {
											hitObject = {
												'eventAction': arguments[3],
												'eventCategory': arguments[2],
												'eventLabel': arguments[4],
												'value': arguments[5] ? arguments[5] : 1,
											}
										}
									}
									if ('pageview' === arguments[1]) {
										if ('undefined' !== typeof arguments[2]) {
											hitObject = {
												'eventAction': 'page_view',
												'page_path': arguments[2],
											}
										}
									}
									if (typeof arguments[2] === 'object') {
										hitObject = arguments[2];
									}
									if (typeof arguments[5] === 'object') {
										Object.assign(hitObject, arguments[5]);
									}
									if ('undefined' !== typeof arguments[1].hitType) {
										hitObject = arguments[1];
										if ('pageview' === hitObject.hitType) {
											hitObject.eventAction = 'page_view';
										}
									}
									if (hitObject) {
										action = 'timing' === arguments[1].hitType ? 'timing_complete' : hitObject.eventAction;
										hitConverted = mapArgs(hitObject);
										__gtagTracker('event', action, hitConverted);
									}
								}
								return;
							}

							function mapArgs(args) {
								var arg, hit = {};
								var gaMap = {
									'eventCategory': 'event_category',
									'eventAction': 'event_action',
									'eventLabel': 'event_label',
									'eventValue': 'event_value',
									'nonInteraction': 'non_interaction',
									'timingCategory': 'event_category',
									'timingVar': 'name',
									'timingValue': 'value',
									'timingLabel': 'event_label',
									'page': 'page_path',
									'location': 'page_location',
									'title': 'page_title',
								};
								for (arg in args) {
																		if (!(!args.hasOwnProperty(arg) || !gaMap.hasOwnProperty(arg))) {
										hit[gaMap[arg]] = args[arg];
									} else {
										hit[arg] = args[arg];
									}
								}
								return hit;
							}

							try {
								f.hitCallback();
							} catch (ex) {
							}
						};
						__gaTracker.create = newtracker;
						__gaTracker.getByName = newtracker;
						__gaTracker.getAll = function () {
							return [];
						};
						__gaTracker.remove = noopfn;
						__gaTracker.loaded = true;
						window['__gaTracker'] = __gaTracker;
					})();
									} else {
										console.log("");
					(function () {
						function __gtagTracker() {
							return null;
						}

						window['__gtagTracker'] = __gtagTracker;
						window['gtag'] = __gtagTracker;
					})();
									}
			</script>
				<!-- / Google Analytics by MonsterInsights -->
		<!-- machinelearningmastery.com is managing ads with Advanced Ads 1.37.2 – https://wpadvancedads.com/ --><!--noptimize--><script id="machi-ready" type="e6851de2356a2aa710417145-text/javascript">
			window.advanced_ads_ready=function(e,a){a=a||"complete";var d=function(e){return"interactive"===a?"loading"!==e:"complete"===e};d(document.readyState)?e():document.addEventListener("readystatechange",(function(a){d(a.target.readyState)&&e()}),{once:"interactive"===a})},window.advanced_ads_ready_queue=window.advanced_ads_ready_queue||[];		</script>
		<!--/noptimize--><style type="text/css">
img.wp-smiley,
img.emoji {
	display: inline !important;
	border: none !important;
	box-shadow: none !important;
	height: 1em !important;
	width: 1em !important;
	margin: 0 0.07em !important;
	vertical-align: -0.1em !important;
	background: none !important;
	padding: 0 !important;
}
</style>
	<style type="text/css">
@media only screen and (min-width: 980px) {
body.two-col-left-1070 #main-sidebar-container { width: 100%; }
body.two-col-left-1070 #main-sidebar-container #sidebar { width: 28.385%; }
body.two-col-left-1070 #main-sidebar-container #main { width: 68.385%; }
}
</style>





<style id='global-styles-inline-css' type='text/css'>
body{--wp--preset--color--black: #000000;--wp--preset--color--cyan-bluish-gray: #abb8c3;--wp--preset--color--white: #ffffff;--wp--preset--color--pale-pink: #f78da7;--wp--preset--color--vivid-red: #cf2e2e;--wp--preset--color--luminous-vivid-orange: #ff6900;--wp--preset--color--luminous-vivid-amber: #fcb900;--wp--preset--color--light-green-cyan: #7bdcb5;--wp--preset--color--vivid-green-cyan: #00d084;--wp--preset--color--pale-cyan-blue: #8ed1fc;--wp--preset--color--vivid-cyan-blue: #0693e3;--wp--preset--color--vivid-purple: #9b51e0;--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple: linear-gradient(135deg,rgba(6,147,227,1) 0%,rgb(155,81,224) 100%);--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan: linear-gradient(135deg,rgb(122,220,180) 0%,rgb(0,208,130) 100%);--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange: linear-gradient(135deg,rgba(252,185,0,1) 0%,rgba(255,105,0,1) 100%);--wp--preset--gradient--luminous-vivid-orange-to-vivid-red: linear-gradient(135deg,rgba(255,105,0,1) 0%,rgb(207,46,46) 100%);--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray: linear-gradient(135deg,rgb(238,238,238) 0%,rgb(169,184,195) 100%);--wp--preset--gradient--cool-to-warm-spectrum: linear-gradient(135deg,rgb(74,234,220) 0%,rgb(151,120,209) 20%,rgb(207,42,186) 40%,rgb(238,44,130) 60%,rgb(251,105,98) 80%,rgb(254,248,76) 100%);--wp--preset--gradient--blush-light-purple: linear-gradient(135deg,rgb(255,206,236) 0%,rgb(152,150,240) 100%);--wp--preset--gradient--blush-bordeaux: linear-gradient(135deg,rgb(254,205,165) 0%,rgb(254,45,45) 50%,rgb(107,0,62) 100%);--wp--preset--gradient--luminous-dusk: linear-gradient(135deg,rgb(255,203,112) 0%,rgb(199,81,192) 50%,rgb(65,88,208) 100%);--wp--preset--gradient--pale-ocean: linear-gradient(135deg,rgb(255,245,203) 0%,rgb(182,227,212) 50%,rgb(51,167,181) 100%);--wp--preset--gradient--electric-grass: linear-gradient(135deg,rgb(202,248,128) 0%,rgb(113,206,126) 100%);--wp--preset--gradient--midnight: linear-gradient(135deg,rgb(2,3,129) 0%,rgb(40,116,252) 100%);--wp--preset--duotone--dark-grayscale: url('#wp-duotone-dark-grayscale');--wp--preset--duotone--grayscale: url('#wp-duotone-grayscale');--wp--preset--duotone--purple-yellow: url('#wp-duotone-purple-yellow');--wp--preset--duotone--blue-red: url('#wp-duotone-blue-red');--wp--preset--duotone--midnight: url('#wp-duotone-midnight');--wp--preset--duotone--magenta-yellow: url('#wp-duotone-magenta-yellow');--wp--preset--duotone--purple-green: url('#wp-duotone-purple-green');--wp--preset--duotone--blue-orange: url('#wp-duotone-blue-orange');--wp--preset--font-size--small: 13px;--wp--preset--font-size--medium: 20px;--wp--preset--font-size--large: 36px;--wp--preset--font-size--x-large: 42px;--wp--preset--spacing--20: 0.44rem;--wp--preset--spacing--30: 0.67rem;--wp--preset--spacing--40: 1rem;--wp--preset--spacing--50: 1.5rem;--wp--preset--spacing--60: 2.25rem;--wp--preset--spacing--70: 3.38rem;--wp--preset--spacing--80: 5.06rem;}:where(.is-layout-flex){gap: 0.5em;}body .is-layout-flow > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-flow > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-flow > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignleft{float: left;margin-inline-start: 0;margin-inline-end: 2em;}body .is-layout-constrained > .alignright{float: right;margin-inline-start: 2em;margin-inline-end: 0;}body .is-layout-constrained > .aligncenter{margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > :where(:not(.alignleft):not(.alignright):not(.alignfull)){max-width: var(--wp--style--global--content-size);margin-left: auto !important;margin-right: auto !important;}body .is-layout-constrained > .alignwide{max-width: var(--wp--style--global--wide-size);}body .is-layout-flex{display: flex;}body .is-layout-flex{flex-wrap: wrap;align-items: center;}body .is-layout-flex > *{margin: 0;}:where(.wp-block-columns.is-layout-flex){gap: 2em;}.has-black-color{color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-color{color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-color{color: var(--wp--preset--color--white) !important;}.has-pale-pink-color{color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-color{color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-color{color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-color{color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-color{color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-color{color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-color{color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-color{color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-color{color: var(--wp--preset--color--vivid-purple) !important;}.has-black-background-color{background-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-background-color{background-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-background-color{background-color: var(--wp--preset--color--white) !important;}.has-pale-pink-background-color{background-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-background-color{background-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-background-color{background-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-background-color{background-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-background-color{background-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-background-color{background-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-background-color{background-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-background-color{background-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-background-color{background-color: var(--wp--preset--color--vivid-purple) !important;}.has-black-border-color{border-color: var(--wp--preset--color--black) !important;}.has-cyan-bluish-gray-border-color{border-color: var(--wp--preset--color--cyan-bluish-gray) !important;}.has-white-border-color{border-color: var(--wp--preset--color--white) !important;}.has-pale-pink-border-color{border-color: var(--wp--preset--color--pale-pink) !important;}.has-vivid-red-border-color{border-color: var(--wp--preset--color--vivid-red) !important;}.has-luminous-vivid-orange-border-color{border-color: var(--wp--preset--color--luminous-vivid-orange) !important;}.has-luminous-vivid-amber-border-color{border-color: var(--wp--preset--color--luminous-vivid-amber) !important;}.has-light-green-cyan-border-color{border-color: var(--wp--preset--color--light-green-cyan) !important;}.has-vivid-green-cyan-border-color{border-color: var(--wp--preset--color--vivid-green-cyan) !important;}.has-pale-cyan-blue-border-color{border-color: var(--wp--preset--color--pale-cyan-blue) !important;}.has-vivid-cyan-blue-border-color{border-color: var(--wp--preset--color--vivid-cyan-blue) !important;}.has-vivid-purple-border-color{border-color: var(--wp--preset--color--vivid-purple) !important;}.has-vivid-cyan-blue-to-vivid-purple-gradient-background{background: var(--wp--preset--gradient--vivid-cyan-blue-to-vivid-purple) !important;}.has-light-green-cyan-to-vivid-green-cyan-gradient-background{background: var(--wp--preset--gradient--light-green-cyan-to-vivid-green-cyan) !important;}.has-luminous-vivid-amber-to-luminous-vivid-orange-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-amber-to-luminous-vivid-orange) !important;}.has-luminous-vivid-orange-to-vivid-red-gradient-background{background: var(--wp--preset--gradient--luminous-vivid-orange-to-vivid-red) !important;}.has-very-light-gray-to-cyan-bluish-gray-gradient-background{background: var(--wp--preset--gradient--very-light-gray-to-cyan-bluish-gray) !important;}.has-cool-to-warm-spectrum-gradient-background{background: var(--wp--preset--gradient--cool-to-warm-spectrum) !important;}.has-blush-light-purple-gradient-background{background: var(--wp--preset--gradient--blush-light-purple) !important;}.has-blush-bordeaux-gradient-background{background: var(--wp--preset--gradient--blush-bordeaux) !important;}.has-luminous-dusk-gradient-background{background: var(--wp--preset--gradient--luminous-dusk) !important;}.has-pale-ocean-gradient-background{background: var(--wp--preset--gradient--pale-ocean) !important;}.has-electric-grass-gradient-background{background: var(--wp--preset--gradient--electric-grass) !important;}.has-midnight-gradient-background{background: var(--wp--preset--gradient--midnight) !important;}.has-small-font-size{font-size: var(--wp--preset--font-size--small) !important;}.has-medium-font-size{font-size: var(--wp--preset--font-size--medium) !important;}.has-large-font-size{font-size: var(--wp--preset--font-size--large) !important;}.has-x-large-font-size{font-size: var(--wp--preset--font-size--x-large) !important;}
.wp-block-navigation a:where(:not(.wp-element-button)){color: inherit;}
:where(.wp-block-columns.is-layout-flex){gap: 2em;}
.wp-block-pullquote{font-size: 1.5em;line-height: 1.6;}
</style>




<!--[if lt IE 9]>
<link href="https://machinelearningmastery.com/wp-content/themes/canvas-new/css/non-responsive.css" rel="stylesheet" type="text/css" />
<style type="text/css">.col-full, #wrapper { width: 1070px; max-width: 1070px; } #inner-wrapper { padding: 0; } body.full-width #header, #nav-container, body.full-width #content, body.full-width #footer-widgets, body.full-width #footer { padding-left: 0; padding-right: 0; } body.fixed-mobile #top, body.fixed-mobile #header-container, body.fixed-mobile #footer-container, body.fixed-mobile #nav-container, body.fixed-mobile #footer-widgets-container { min-width: 1070px; padding: 0 1em; } body.full-width #content { width: auto; padding: 0 1em;}</style>
<![endif]-->
<script type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-includes/js/jquery/jquery.min.js?ver=3.6.1' id='jquery-core-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-includes/js/jquery/jquery-migrate.min.js?ver=3.3.2' id='jquery-migrate-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='urvanov_syntax_highlighter_js-js-extra'>
/* <![CDATA[ */
var UrvanovSyntaxHighlighterSyntaxSettings = {"version":"2.8.28","is_admin":"0","ajaxurl":"https:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php","prefix":"urvanov-syntax-highlighter-","setting":"urvanov-syntax-highlighter-setting","selected":"urvanov-syntax-highlighter-setting-selected","changed":"urvanov-syntax-highlighter-setting-changed","special":"urvanov-syntax-highlighter-setting-special","orig_value":"data-orig-value","debug":""};
var UrvanovSyntaxHighlighterSyntaxStrings = {"copy":"Copied to the clipboard","minimize":"Click To Expand Code"};
/* ]]> */
</script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/plugins/urvanov-syntax-highlighter/js/min/urvanov_syntax_highlighter.min.js?ver=2.8.28' id='urvanov_syntax_highlighter_js-js' defer></script>
<script type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/plugins/google-analytics-premium/assets/js/frontend-gtag.min.js?ver=8.10.0' id='monsterinsights-frontend-script-js' defer></script>
<script data-cfasync="false" data-wpfc-render="false" type="text/javascript" id='monsterinsights-frontend-script-js-extra'>/* <![CDATA[ */
var monsterinsights_frontend = {"js_events_tracking":"true","download_extensions":"doc,pdf,ppt,zip,xls,docx,pptx,xlsx","inbound_paths":"[]","home_url":"https:\/\/machinelearningmastery.com","hash_tracking":"false","ua":"UA-44039733-3","v4_id":""};/* ]]> */
</script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/plugins/simple-social-buttons/assets/js/frontend-blocks.js?ver=4.0.2' id='ssb-blocks-front-js-js' defer></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='ssb-front-js-js-extra'>
/* <![CDATA[ */
var SSB = {"ajax_url":"https:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php","fb_share_nonce":"19aa449fc7"};
/* ]]> */
</script>
<script type="rocketlazyloadscript" data-minify="1" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/plugins/simple-social-buttons/assets/js/front.js?ver=1668605935' id='ssb-front-js-js' defer></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advanced-ads-advanced-js-js-extra'>
/* <![CDATA[ */
var advads_options = {"blog_id":"1","privacy":{"enabled":false,"state":"not_needed"}};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/686/public/assets/js/32.js?ver=1668605935' id='advanced-ads-advanced-js-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advanced_ads_pro/visitor_conditions-js-extra'>
/* <![CDATA[ */
var advanced_ads_pro_visitor_conditions = {"referrer_cookie_name":"advanced_ads_pro_visitor_referrer","referrer_exdays":"365","page_impr_cookie_name":"advanced_ads_page_impressions","page_impr_exdays":"3650"};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/337/52/395/640/770.js?ver=1668605935' id='advanced_ads_pro/visitor_conditions-js'></script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/themes/canvas-new/includes/js/third-party.min.js?ver=6.1.1' id='third-party-js' defer></script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/themes/canvas-new/includes/js/modernizr.min.js?ver=2.6.2' id='modernizr-js' defer></script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/themes/canvas-new/includes/js/general.min.js?ver=6.1.1' id='general-js' defer></script>

<!-- Adjust the website width -->
<style type="text/css">
	.col-full, #wrapper { max-width: 1070px !important; }
</style>

<link rel="https://api.w.org/" href="https://machinelearningmastery.com/wp-json/" /><link rel="alternate" type="application/json" href="https://machinelearningmastery.com/wp-json/wp/v2/posts/11849" /><link rel="EditURI" type="application/rsd+xml" title="RSD" href="https://machinelearningmastery.com/xmlrpc.php?rsd" />
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="https://machinelearningmastery.com/wp-includes/wlwmanifest.xml" />
<meta name="generator" content="WordPress 6.1.1" />
<link rel='shortlink' href='https://machinelearningmastery.com/?p=11849' />
<link rel="alternate" type="application/json+oembed" href="https://machinelearningmastery.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmachinelearningmastery.com%2Fsimple-genetic-algorithm-from-scratch-in-python%2F" />
<link rel="alternate" type="text/xml+oembed" href="https://machinelearningmastery.com/wp-json/oembed/1.0/embed?url=https%3A%2F%2Fmachinelearningmastery.com%2Fsimple-genetic-algorithm-from-scratch-in-python%2F&#038;format=xml" />
<style type="text/css">.crp_title {
    font-size: medium;
}
.group.portfolio-img img {
    height: auto;
    padding: 3px;
	  border: 0px solid #fff;
    background: rgba(255,255,255,.7);
}
.crp_related ul li {
    background: #fff;
    padding: 3px;
    margin: 0 0 1em;
    width: 100%;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-shadow: 0 0px 0px 0 rgb(0 0 0 / 18%);
    border-radius: 3px;
    -moz-border-radius: 3px;
    -webkit-border-radius: 3px;
    border: 0px solid #fff;
    animation: wzslideup .8s ease-out,wzfadein 1s ease-out;
    -webkit-animation: wzslideup .8s ease-out,wzfadein 1s ease-out;
    -moz-animation: wzslideup .8s ease-out,wzfadein 1s ease;
    font-size: 1em;
    text-align: center;
    display: inline-block;
}</style> <style media="screen">

		.simplesocialbuttons.simplesocialbuttons_inline .ssb-fb-like {
	  margin: ;
	}
		 /*inline margin*/
	
	
	
	
	
	
			 .simplesocialbuttons.simplesocialbuttons_inline.simplesocial-simple-icons button{
		 margin: ;
	 }

			 /*margin-digbar*/

	
	
	
	
	
	
	
</style>

<!-- Open Graph Meta Tags generated by Simple Social Buttons 4.0.2 -->
<meta property="og:title" content="Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com" />
<meta property="og:description" content="The genetic algorithm is a stochastic global optimization algorithm.

It may be one of the most popular and widely known biologically inspired algorithms, along with artificial neural networks.

The algorithm is a type of evolutionary algorithm and performs an optimization procedure inspired by the biological theory of evolution by means of natural selection with a binary representation and simple operators based on" />
<meta property="og:url" content="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" />
<meta property="og:site_name" content="MachineLearningMastery.com" />
<meta property="og:image" content="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg" />
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:description" content="The genetic algorithm is a stochastic global optimization algorithm.

It may be one of the most popular and widely known biologically inspired algorithms, along with artificial neural networks.

The algorithm is a type of evolutionary algorithm and performs an optimization procedure inspired by the biological theory of evolution by means of natural selection with a binary representation and simple operators based on" />
<meta name="twitter:title" content="Simple Genetic Algorithm From Scratch in Python - MachineLearningMastery.com" />
<meta property="twitter:image" content="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg" />
    
    <script type="rocketlazyloadscript" data-rocket-type="text/javascript">
        var ajaxurl = 'https://machinelearningmastery.com/wp-admin/admin-ajax.php';
    </script>
<link rel="dns-prefetch" href="https://ads.adthrive.com/"><link rel="preconnect" href="https://ads.adthrive.com/"><link rel="preconnect" href="https://ads.adthrive.com/" crossorigin>
<link rel="preload" as="font" href="https://machinelearningmastery.com/wp-content/themes/canvas-new/includes/fonts/fontawesome-webfont.woff2?v=4.5.0" crossorigin><script type="e6851de2356a2aa710417145-text/javascript">
		var advadsCfpQueue = [];
		var advadsCfpAd = function( adID ){
			if ( 'undefined' == typeof advadsProCfp ) { advadsCfpQueue.push( adID ) } else { advadsProCfp.addElement( adID ) }
		};
		</script>
		
<!-- Custom CSS Styling -->
<style type="text/css">
#logo .site-title, #logo .site-description { display:none; }
body {background-repeat:no-repeat;background-position:top left;background-attachment:scroll;border-top:0px solid #000000;}
#header {background-repeat:no-repeat;background-position:left top;margin-top:0px;margin-bottom:0px;padding-top:10px;padding-bottom:10px;border:0px solid ;}
#logo .site-title a {font:bold 40px/1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
#logo .site-description {font:normal 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#999999;}
body, p { font:normal 14px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
h1 { font:bold 28px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h2 { font:bold 24px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h3 { font:bold 20px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h4 { font:bold 16px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h5 { font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }h6 { font:bold 12px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#222222; }
.page-title, .post .title, .page .title {font:bold 28px/1.1em "Helvetica Neue", Helvetica, sans-serif;color:#222222;}
.post .title a:link, .post .title a:visited, .page .title a:link, .page .title a:visited {color:#222222}
.post-meta { font:normal 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
.entry, .entry p{ font:normal 15px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.post-more {font:normal 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:;border-top:0px solid #e6e6e6;border-bottom:0px solid #e6e6e6;}
#post-author, #connect {border-top:1px solid #e6e6e6;border-bottom:1px solid #e6e6e6;border-left:1px solid #e6e6e6;border-right:1px solid #e6e6e6;border-radius:5px;-moz-border-radius:5px;-webkit-border-radius:5px;background-color:#fafafa}
.nav-entries a, .woo-pagination { font:normal 13px/1em "Helvetica Neue", Helvetica, sans-serif;color:#888; }
.woo-pagination a, .woo-pagination a:hover {color:#888!important}
.widget h3 {font:bold 14px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-bottom:1px solid #e6e6e6;}
.widget_recent_comments li, #twitter li { border-color: #e6e6e6;}
.widget p, .widget .textwidget { font:normal 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
.widget {font:normal 13px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555;border-radius:0px;-moz-border-radius:0px;-webkit-border-radius:0px;}
#tabs .inside li a, .widget_woodojo_tabs .tabbable .tab-pane li a { font:bold 12px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#555555; }
#tabs .inside li span.meta, .widget_woodojo_tabs .tabbable .tab-pane li span.meta { font:300 11px/1.5em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#tabs ul.wooTabs li a, .widget_woodojo_tabs .tabbable .nav-tabs li a { font:300 11px/2em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
@media only screen and (min-width:768px) {
ul.nav li a, #navigation ul.rss a, #navigation ul.cart a.cart-contents, #navigation .cart-contents #navigation ul.rss, #navigation ul.nav-search, #navigation ul.nav-search a { font:bold 15px/1.2em "Helvetica Neue", Helvetica, sans-serif;color:#ffffff; } #navigation ul.rss li a:before, #navigation ul.nav-search a.search-contents:before { color:#ffffff;}
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover a, #navigation ul.nav li ul li a, #navigation ul.cart > li:hover > a, #navigation ul.cart > li > ul > div, #navigation ul.cart > li > ul > div p, #navigation ul.cart > li > ul span, #navigation ul.cart .cart_list a, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a { color:#eeeeee!important; }
#navigation ul.nav > li a:hover, #navigation ul.nav > li:hover, #navigation ul.nav li ul, #navigation ul.cart li:hover a.cart-contents, #navigation ul.nav-search li:hover a.search-contents, #navigation ul.nav-search a.search-contents + ul, #navigation ul.cart a.cart-contents + ul, #navigation ul.nav li.current_page_item a, #navigation ul.nav li.current_page_parent a, #navigation ul.nav li.current-menu-ancestor a, #navigation ul.nav li.current-cat a, #navigation ul.nav li.current-menu-item a{background-color:#84abc7!important}
#navigation ul.nav li ul, #navigation ul.cart > li > ul > div  { border: 0px solid #dbdbdb; }
#navigation ul.nav > li:hover > ul  { left: 0; }
#navigation ul.nav > li  { border-right: 0px solid #dbdbdb; }#navigation ul.nav > li:hover > ul  { left: 0; }
#navigation { box-shadow: none; -moz-box-shadow: none; -webkit-box-shadow: none; }#navigation ul li:first-child, #navigation ul li:first-child a { border-radius:0px 0 0 0px; -moz-border-radius:0px 0 0 0px; -webkit-border-radius:0px 0 0 0px; }
#navigation {background:#84abc7;border-top:0px solid #dbdbdb;border-bottom:0px solid #dbdbdb;border-left:0px solid #dbdbdb;border-right:0px solid #dbdbdb;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
#top ul.nav li a { font:normal 12px/1.6em "Helvetica Neue", Helvetica, sans-serif;color:#ddd; }
}
#footer, #footer p { font:normal 13px/1.4em "Helvetica Neue", Helvetica, sans-serif;color:#999999; }
#footer {border-top:1px solid #dbdbdb;border-bottom:0px solid ;border-left:0px solid ;border-right:0px solid ;border-radius:0px; -moz-border-radius:0px; -webkit-border-radius:0px;}
.magazine #loopedSlider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-magazine .slide-title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.magazine #loopedSlider .content .excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-magazine .slide-content p, .wooslider-theme-magazine .slide-excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.magazine .block .post .title a {font:bold 18px/1.2em Helvetica Neue, Helvetica, sans-serif;color:#222222; }
#loopedSlider.business-slider .content h2 { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#loopedSlider.business-slider .content h2.title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-business .has-featured-image .slide-title { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
.wooslider-theme-business .has-featured-image .slide-title a { font:bold 24px/1em Arial, sans-serif;color:#ffffff; }
#wrapper #loopedSlider.business-slider .content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-business .has-featured-image .slide-content p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.wooslider-theme-business .has-featured-image .slide-excerpt p { font:300 13px/1.5em Arial, sans-serif;color:#cccccc; }
.archive_header { font:bold 18px/1em Arial, sans-serif;color:#222222; }
.archive_header {border-bottom:1px solid #e6e6e6;}
.archive_header .catrss { display:none; }
</style>

<!-- Custom Favicon -->
<link rel="shortcut icon" href="https://machinelearningmastery.com/wp-content/uploads/2019/09/icon-16x16.png"/>
<!-- Options Panel Custom CSS -->
<style type="text/css">
#logo img {
   max-width: 100%;
   height: auto;
}
</style>


<!-- Woo Shortcodes CSS -->


<!-- Custom Stylesheet -->


<!-- Theme version -->
<meta name="generator" content="Canvas 5.9.21" />
<meta name="generator" content="WooFramework 6.2.9" />
		<script type="rocketlazyloadscript" data-rocket-type="text/javascript">
			if ( typeof advadsGATracking === 'undefined' ) {
				window.advadsGATracking = {
					delayedAds: {},
					deferedAds: {}
				};
			}
		</script>
		<link rel="icon" href="https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon-32x32.png" sizes="32x32" />
<link rel="icon" href="https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon-192x192.png" sizes="192x192" />
<link rel="apple-touch-icon" href="https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon-180x180.png" />
<meta name="msapplication-TileImage" content="https://machinelearningmastery.com/wp-content/uploads/2016/09/cropped-icon-270x270.png" />
<script data-no-optimize='1' data-cfasync='false' id='cls-disable-ads-1ef2db3'>var cls_disable_ads=function(t){"use strict";var e,i,o,a,n,l,s,r,d;!function(t){t.Prebid="prebid",t.GAM="gam",t.Amazon="amazon",t.WebVitals="webvitals",t.Marmalade="marmalade",t.Floors="floors",t.CMP="cmp"}(e||(e={})),function(t){t.prebidLoad="prebidLoad",t.amazonLoad="amazonLoad",t.gptLoad="gptLoad",t.rubiconFloors="rubiconFloors"}(i||(i={})),function(t){t.Desktop="desktop",t.Mobile="mobile"}(o||(o={})),function(t){t.Video_Collapse_Autoplay_SoundOff="Video_Collapse_Autoplay_SoundOff",t.Video_Individual_Autoplay_SOff="Video_Individual_Autoplay_SOff",t.Video_Coll_SOff_Smartphone="Video_Coll_SOff_Smartphone",t.Video_In_Post_ClicktoPlay_SoundOn="Video_In-Post_ClicktoPlay_SoundOn"}(a||(a={})),function(t){t.StickySekindo="stickySekindo",t.StaticSekindo="staticSekindo",t.None="none"}(n||(n={})),function(t){t.WEIGHTEDCHOICE="weightedChoice",t.BERNOULLITRIAL="bernoulliTrial"}(l||(l={})),function(t){t.INTEGER="integer",t.FLOAT="float",t.BOOLEAN="boolean",t.STRING="string"}(s||(s={})),function(t){t.DESKTOP="desktop",t.MOBILE="mobile",t.ALL="all"}(r||(r={})),function(t){t.AdDensity="addensity",t.FooterCloseButton="footerclose",t.Interstitial="interstitial",t.RemoveVideoTitleWrapper="removevideotitlewrapper",t.StickyOutstream="stickyoutstream",t.StickyOutstreamOnStickyPlayer="sospp",t.VideoAdvancePlaylistRelatedPlayer="videoadvanceplaylistrp",t.MobileStickyPlayerPosition="mspp"}(d||(d={}));var c=function(t){var e=window.location.href;return t.some((function(t){return new RegExp(t,"i").test(e)}))},u=function(){function t(t){this.adthrive=t,this.all=!1,this.content=!1,this.recipe=!1,this.video=!1,this.locations=new Set,this.reasons=new Set,(this.urlHasEmail(window.location.href)||this.urlHasEmail(window.document.referrer))&&(this.all=!0,this.reasons.add("all_email"));try{this.checkCommandQueue(),null!==document.querySelector(".tag-novideo")&&(this.video=!0,this.locations.add("Video"),this.reasons.add("video_tag"))}catch(t){}}return t.prototype.checkCommandQueue=function(){var t=this;this.adthrive&&this.adthrive.cmd&&this.adthrive.cmd.forEach((function(e){var i=e.toString(),o=t.extractAPICall(i,"disableAds");o&&t.disableAllAds(t.extractPatterns(o));var a=t.extractAPICall(i,"disableContentAds");a&&t.disableContentAds(t.extractPatterns(a));var n=t.extractAPICall(i,"disablePlaylistPlayers");n&&t.disablePlaylistPlayers(t.extractPatterns(n))}))},t.prototype.extractPatterns=function(t){var e=t.match(/\'(.*?)\'/g);if(null!==e)return e.map((function(t){return t.replace(/'/g,"")}))},t.prototype.extractAPICall=function(t,e){var i=new RegExp(e+"\\((.*?)\\)","g"),o=t.match(i);return null!==o&&o[0]},t.prototype.disableAllAds=function(t){t&&!c(t)||(this.all=!0,this.reasons.add("all_page"))},t.prototype.disableContentAds=function(t){t&&!c(t)||(this.content=!0,this.recipe=!0,this.locations.add("Content"),this.locations.add("Recipe"),this.reasons.add("content_plugin"))},t.prototype.disablePlaylistPlayers=function(t){t&&!c(t)||(this.video=!0,this.locations.add("Video"),this.reasons.add("video_page"))},t.prototype.urlHasEmail=function(t){if(!t)return!1;return null!==/([A-Z0-9._%+-]+(@|%(25)*40)[A-Z0-9.-]+\.[A-Z]{2,})/i.exec(t)},t}(),p=window.adthriveCLS;return p&&(p.disableAds=new u(window.adthrive)),t.ClsDisableAds=u,Object.defineProperty(t,"__esModule",{value:!0}),t}({});
</script>		<style type="text/css" id="wp-custom-css">
			.display-posts-listing.image-left .listing-item {
	overflow: hidden; 
	margin-bottom: 30px;
	width: 100%;
}

.display-posts-listing.image-left .image {
	float: left;
	margin: 0 10px 0 0;
}

.display-posts-listing.image-left .attachment-thumbnail {
	height: auto; 
	width: auto; 
	max-width: 50px; 
	max-height: 50px;
	border-radius: 50%;
}

.display-posts-listing.image-left .title {
	display: block;
}

.display-posts-listing.image-left .excerpt-dash { 
	display: none; 
}

.display-posts-listing.image-left {
	margin: 0 0 40px 0;
}		</style>
		<noscript><style id="rocket-lazyload-nojs-css">.rll-youtube-player, [data-lazy-src]{display:none !important;}</style></noscript>
	
	
</head>
<body class="post-template-default single single-post postid-11849 single-format-standard chrome alt-style-default two-col-left width-1070 two-col-left-1070 aa-prefix-machi-">
<div id="wrapper">

	<div id="inner-wrapper">

	<h3 class="nav-toggle icon"><a href="#navigation">Navigation</a></h3>

	<header id="header" class="col-full">

		<div id="logo">
<a href="https://machinelearningmastery.com/" title="Making developers awesome at machine learning"><img width="480" height="80" src="https://machinelearningmastery.com/wp-content/uploads/2019/09/Header_smaller_text_better-1.png" alt="MachineLearningMastery.com" /></a>
<span class="site-title"><a href="https://machinelearningmastery.com/">MachineLearningMastery.com</a></span>
<span class="site-description">Making developers awesome at machine learning</span>
</div>
	    <div class="header-widget">
	        <div id="custom_html-98" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><div style="text-align: right;">
<script type="rocketlazyloadscript" src="https://embed.lpcontent.net/leadboxes/current/embed.js" async defer></script> <a href="" data-leadbox-popup="4kEPpbNjvP7iFdGVTNvAdQ" data-leadbox-domain="machinelearningmastery.lpages.co">Click here Take the FREE Optimization Crash-Course</a> 
</div></div></div><div id="search-4" class="widget widget_search"><div class="search_main">
    <form method="get" class="searchform" action="https://machinelearningmastery.com/" >
        <input type="text" class="field s" name="s" value="Search..." onfocus="if (!window.__cfRLUnblockHandlers) return false; if (this.value == 'Search...') {this.value = '';}" onblur="if (!window.__cfRLUnblockHandlers) return false; if (this.value == '') {this.value = 'Search...';}" data-cf-modified-e6851de2356a2aa710417145-="" />
		<input type="hidden" name="post_type" value="post" />
        <button type="submit" class="fa fa-search submit" name="submit" value="Search"></button>
    </form>
    <div class="fix"></div>
</div></div>	    </div>
	
	</header>
	<nav id="navigation" class="col-full" role="navigation">

	
	<section class="menus">

		<a href="https://machinelearningmastery.com" class="nav-home"><span>Home</span></a>

	<h3>Main Menu</h3><ul id="main-nav" class="nav fl"><li id="menu-item-6503" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6503"><a href="https://machinelearningmastery.com/start-here/">Get Started</a></li>
<li id="menu-item-6501" class="menu-item menu-item-type-post_type menu-item-object-page current_page_parent menu-item-6501"><a href="https://machinelearningmastery.com/blog/">Blog</a></li>
<li id="menu-item-6506" class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-6506"><a href="#">Topics</a>
<ul class="sub-menu">
	<li id="menu-item-14062" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-14062"><a href="https://machinelearningmastery.com/category/attention/">Attention</a></li>
	<li id="menu-item-6508" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6508"><a href="https://machinelearningmastery.com/category/deep-learning/">Deep Learning (keras)</a></li>
	<li id="menu-item-7921" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7921"><a href="https://machinelearningmastery.com/category/deep-learning-for-computer-vision/">Computer Vision</a></li>
	<li id="menu-item-6509" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6509"><a href="https://machinelearningmastery.com/category/deep-learning-time-series/">Neural Net Time Series</a></li>
	<li id="menu-item-6515" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6515"><a href="https://machinelearningmastery.com/category/natural-language-processing/">NLP (Text)</a></li>
	<li id="menu-item-8576" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-8576"><a href="https://machinelearningmastery.com/category/generative-adversarial-networks/">GANs</a></li>
	<li id="menu-item-6511" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6511"><a href="https://machinelearningmastery.com/category/lstm/">LSTMs</a></li>
	<li id="menu-item-7106" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-7106"><a href="https://machinelearningmastery.com/category/better-deep-learning/">Better Deep Learning</a></li>
	<li id="menu-item-13302" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-13302"><a href="https://machinelearningmastery.com/category/calculus/">Calculus</a></li>
	<li id="menu-item-6512" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6512"><a href="https://machinelearningmastery.com/category/machine-learning-algorithms/">Intro to Algorithms</a></li>
	<li id="menu-item-6507" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6507"><a href="https://machinelearningmastery.com/category/algorithms-from-scratch/">Code Algorithms</a></li>
	<li id="menu-item-6520" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6520"><a href="https://machinelearningmastery.com/category/time-series/">Intro to Time Series</a></li>
	<li id="menu-item-6516" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6516"><a href="https://machinelearningmastery.com/category/python-machine-learning/">Python (scikit-learn)</a></li>
	<li id="menu-item-11055" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-11055"><a href="https://machinelearningmastery.com/category/ensemble-learning/">Ensemble Learning</a></li>
	<li id="menu-item-9966" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-9966"><a href="https://machinelearningmastery.com/category/imbalanced-classification/">Imbalanced Learning</a></li>
	<li id="menu-item-10674" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-10674"><a href="https://machinelearningmastery.com/category/data-preparation/">Data Preparation</a></li>
	<li id="menu-item-6517" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6517"><a href="https://machinelearningmastery.com/category/r-machine-learning/">R (caret)</a></li>
	<li id="menu-item-6522" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6522"><a href="https://machinelearningmastery.com/category/weka-machine-learning/">Weka (no code)</a></li>
	<li id="menu-item-6510" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6510"><a href="https://machinelearningmastery.com/category/linear-algebra/">Linear Algebra</a></li>
	<li id="menu-item-6519" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6519"><a href="https://machinelearningmastery.com/category/statistical-methods/">Statistics</a></li>
	<li id="menu-item-12825" class="menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-12825"><a href="https://machinelearningmastery.com/category/optimization/">Optimization</a></li>
	<li id="menu-item-8989" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-8989"><a href="https://machinelearningmastery.com/category/probability/">Probability</a></li>
	<li id="menu-item-6523" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-6523"><a href="https://machinelearningmastery.com/category/xgboost/">XGBoost</a></li>
	<li id="menu-item-13672" class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-13672"><a href="https://machinelearningmastery.com/category/python-for-machine-learning/">Python for Machine Learning</a></li>
</ul>
</li>
<li id="menu-item-6502" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6502"><a href="https://machinelearningmastery.com/products/">EBooks</a></li>
<li id="menu-item-6500" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6500"><a href="https://machinelearningmastery.com/faq/">FAQ</a></li>
<li id="menu-item-6504" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6504"><a href="https://machinelearningmastery.com/about/">About</a></li>
<li id="menu-item-6505" class="menu-item menu-item-type-post_type menu-item-object-page menu-item-6505"><a href="https://machinelearningmastery.com/contact/">Contact</a></li>
</ul>	<div class="side-nav">
		</div><!-- /#side-nav -->

	</section><!-- /.menus -->

	<a href="#top" class="nav-close"><span>Return to Content</span></a>

</nav>

<!--	<div style="width:100%; min-height:100px; padding-top:10px; padding-bottom:50px; float:center;"> -->
	<!--</div>-->
       
    <!-- #content Starts -->
	    <div id="content" class="col-full">
    
    	<div id="main-sidebar-container">    

            <!-- #main Starts -->
                        <section id="main">                       
<article class="post-11849 post type-post status-publish format-standard has-post-thumbnail hentry category-optimization">
	
	<header>
	<h1 class="title entry-title">Simple Genetic Algorithm From Scratch in Python</h1>	</header>
<div class="post-meta"><span class="small">By</span> <span class="author vcard"><span class="fn"><a href="https://machinelearningmastery.com/author/jasonb/" title="Posts by Jason Brownlee" rel="author">Jason Brownlee</a></span></span> <span class="small">on</span> <abbr class="date time published updated" title="2021-03-03T05:00:34+1100">March 3, 2021</abbr>  <span class="small">in</span> <span class="categories"><a href="https://machinelearningmastery.com/category/optimization/" title="View all items in Optimization">Optimization</a></span>  </div>
	<section class="entry">
<div class="simplesocialbuttons simplesocial-simple-icons simplesocialbuttons_inline simplesocialbuttons-align-left post-11849 post  simplesocialbuttons-inline-no-animation">
<button class="ssb_tweet-icon" data-href="https://twitter.com/share?text=Simple+Genetic+Algorithm+From+Scratch+in+Python&url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path fill="none" d="M0 0h72v72H0z"/><path class="icon" fill="#fff" d="M68.812 15.14c-2.348 1.04-4.87 1.744-7.52 2.06 2.704-1.62 4.78-4.186 5.757-7.243-2.53 1.5-5.33 2.592-8.314 3.176C56.35 10.59 52.948 9 49.182 9c-7.23 0-13.092 5.86-13.092 13.093 0 1.026.118 2.02.338 2.98C25.543 24.527 15.9 19.318 9.44 11.396c-1.125 1.936-1.77 4.184-1.77 6.58 0 4.543 2.312 8.552 5.824 10.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163 0 6.345 4.513 11.638 10.504 12.84-1.1.298-2.256.457-3.45.457-.845 0-1.666-.078-2.464-.23 1.667 5.2 6.5 8.985 12.23 9.09-4.482 3.51-10.13 5.605-16.26 5.605-1.055 0-2.096-.06-3.122-.184 5.794 3.717 12.676 5.882 20.067 5.882 24.083 0 37.25-19.95 37.25-37.25 0-.565-.013-1.133-.038-1.693 2.558-1.847 4.778-4.15 6.532-6.774z"/></svg></span><i class="simplesocialtxt">Tweet </i></button>
<button class="ssb_tweet-icon" data-href="https://twitter.com/share?text=Simple+Genetic+Algorithm+From+Scratch+in+Python&url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path fill="none" d="M0 0h72v72H0z"/><path class="icon" fill="#fff" d="M68.812 15.14c-2.348 1.04-4.87 1.744-7.52 2.06 2.704-1.62 4.78-4.186 5.757-7.243-2.53 1.5-5.33 2.592-8.314 3.176C56.35 10.59 52.948 9 49.182 9c-7.23 0-13.092 5.86-13.092 13.093 0 1.026.118 2.02.338 2.98C25.543 24.527 15.9 19.318 9.44 11.396c-1.125 1.936-1.77 4.184-1.77 6.58 0 4.543 2.312 8.552 5.824 10.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163 0 6.345 4.513 11.638 10.504 12.84-1.1.298-2.256.457-3.45.457-.845 0-1.666-.078-2.464-.23 1.667 5.2 6.5 8.985 12.23 9.09-4.482 3.51-10.13 5.605-16.26 5.605-1.055 0-2.096-.06-3.122-.184 5.794 3.717 12.676 5.882 20.067 5.882 24.083 0 37.25-19.95 37.25-37.25 0-.565-.013-1.133-.038-1.693 2.558-1.847 4.778-4.15 6.532-6.774z"/></svg></span><i class="simplesocialtxt">Tweet </i></button>		<button class="ssb_fbshare-icon" target="_blank" data-href="https://www.facebook.com/sharer/sharer.php?u=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="_1pbq" color="#ffffff"><path fill="#ffffff" fill-rule="evenodd" class="icon" d="M8 14H3.667C2.733 13.9 2 13.167 2 12.233V3.667A1.65 1.65 0 0 1 3.667 2h8.666A1.65 1.65 0 0 1 14 3.667v8.566c0 .934-.733 1.667-1.667 1.767H10v-3.967h1.3l.7-2.066h-2V6.933c0-.466.167-.9.867-.9H12v-1.8c.033 0-.933-.266-1.533-.266-1.267 0-2.434.7-2.467 2.133v1.867H6v2.066h2V14z"></path></svg></span>
						<span class="simplesocialtxt">Share </span> </button>
<button class="ssb_linkedin-icon" data-href="https://www.linkedin.com/sharing/share-offsite/?url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"> <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="15px" height="14.1px" viewBox="-301.4 387.5 15 14.1" enable-background="new -301.4 387.5 15 14.1" xml:space="preserve"> <g id="XMLID_398_"> <path id="XMLID_399_" fill="#FFFFFF" d="M-296.2,401.6c0-3.2,0-6.3,0-9.5h0.1c1,0,2,0,2.9,0c0.1,0,0.1,0,0.1,0.1c0,0.4,0,0.8,0,1.2 c0.1-0.1,0.2-0.3,0.3-0.4c0.5-0.7,1.2-1,2.1-1.1c0.8-0.1,1.5,0,2.2,0.3c0.7,0.4,1.2,0.8,1.5,1.4c0.4,0.8,0.6,1.7,0.6,2.5 c0,1.8,0,3.6,0,5.4v0.1c-1.1,0-2.1,0-3.2,0c0-0.1,0-0.1,0-0.2c0-1.6,0-3.2,0-4.8c0-0.4,0-0.8-0.2-1.2c-0.2-0.7-0.8-1-1.6-1 c-0.8,0.1-1.3,0.5-1.6,1.2c-0.1,0.2-0.1,0.5-0.1,0.8c0,1.7,0,3.4,0,5.1c0,0.2,0,0.2-0.2,0.2c-1,0-1.9,0-2.9,0 C-296.1,401.6-296.2,401.6-296.2,401.6z"/> <path id="XMLID_400_" fill="#FFFFFF" d="M-298,401.6L-298,401.6c-1.1,0-2.1,0-3,0c-0.1,0-0.1,0-0.1-0.1c0-3.1,0-6.1,0-9.2 c0-0.1,0-0.1,0.1-0.1c1,0,2,0,2.9,0h0.1C-298,395.3-298,398.5-298,401.6z"/> <path id="XMLID_401_" fill="#FFFFFF" d="M-299.6,390.9c-0.7-0.1-1.2-0.3-1.6-0.8c-0.5-0.8-0.2-2.1,1-2.4c0.6-0.2,1.2-0.1,1.8,0.2 c0.5,0.4,0.7,0.9,0.6,1.5c-0.1,0.7-0.5,1.1-1.1,1.3C-299.1,390.8-299.4,390.8-299.6,390.9L-299.6,390.9z"/> </g> </svg> </span>
						<span class="simplesocialtxt">Share</span> </button>
</div>
<p id="last-modified-info">Last Updated on October 12, 2021</p>
<p>The <strong>genetic algorithm</strong> is a stochastic global optimization algorithm.</p>
<p>It may be one of the most popular and widely known biologically inspired algorithms, along with artificial neural networks.</p>
<p>The algorithm is a type of evolutionary algorithm and performs an optimization procedure inspired by the biological theory of evolution by means of natural selection with a binary representation and simple operators based on genetic recombination and genetic mutations.</p>
<p>In this tutorial, you will discover the genetic algorithm optimization algorithm.</p>
<p>After completing this tutorial, you will know:</p>
<ul>
<li>Genetic algorithm is a stochastic optimization algorithm inspired by evolution.</li>
<li>How to implement the genetic algorithm from scratch in Python.</li>
<li>How to apply the genetic algorithm to a continuous objective function.</li>
</ul>
<p><p><strong>Kick-start your project</strong> with my new book <a href="https://machinelearningmastery.com/optimization-for-machine-learning/">Optimization for Machine Learning</a>, including <em>step-by-step tutorials</em> and the <em>Python source code</em> files for all examples.</p>Let’s get started.</p>
<div id="attachment_11855" style="width: 810px" class="wp-caption aligncenter"><img aria-describedby="caption-attachment-11855" decoding="async" class="size-full wp-image-11855" src="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg" alt="Simple Genetic Algorithm From Scratch in Python" width="800" height="547" srcset="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python.jpg 800w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python-300x205.jpg 300w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python-768x525.jpg 768w" sizes="(max-width: 800px) 100vw, 800px" /><p id="caption-attachment-11855" class="wp-caption-text">Simple Genetic Algorithm From Scratch in Python<br />Photo by <a href="https://www.flickr.com/photos/magharebia/5323128313/">Magharebia</a>, some rights reserved.</p></div>
<h2>Tutorial Overview</h2>
<p>This tutorial is divided into four parts; they are:</p>
<ol>
<li>Genetic Algorithm</li>
<li>Genetic Algorithm From Scratch</li>
<li>Genetic Algorithm for OneMax</li>
<li>Genetic Algorithm for Continuous Function Optimization</li>
</ol>
<h2>Genetic Algorithm</h2>
<p>The <a href="https://en.wikipedia.org/wiki/Genetic_algorithm">Genetic Algorithm</a> is a stochastic global search optimization algorithm.</p>
<p>It is inspired by the biological theory of evolution by means of natural selection. Specifically, the new synthesis that combines an understanding of genetics with the theory.</p>
<blockquote><p>Genetic algorithms (algorithm 9.4) borrow inspiration from biological evolution, where fitter individuals are more likely to pass on their genes to the next generation.</p></blockquote>
<p>&#8212; Page 148, <a href="https://amzn.to/2Traqek">Algorithms for Optimization</a>, 2019.</p>
<p>The algorithm uses analogs of a genetic representation (bitstrings), fitness (function evaluations), genetic recombination (crossover of bitstrings), and mutation (flipping bits).</p>
<p>The algorithm works by first creating a population of a fixed size of random bitstrings. The main loop of the algorithm is repeated for a fixed number of iterations or until no further improvement is seen in the best solution over a given number of iterations.</p>
<p>One iteration of the algorithm is like an evolutionary generation.</p>
<p>First, the population of bitstrings (candidate solutions) are evaluated using the objective function. The objective function evaluation for each candidate solution is taken as the fitness of the solution, which may be minimized or maximized.</p>
<p>Then, parents are selected based on their fitness. A given candidate solution may be used as parent zero or more times. A simple and effective approach to selection involves drawing <em>k</em> candidates from the population randomly and selecting the member from the group with the best fitness. This is called tournament selection where <em>k</em> is a hyperparameter and set to a value such as 3. This simple approach simulates a more costly fitness-proportionate selection scheme.</p>
<blockquote><p>In tournament selection, each parent is the fittest out of k randomly chosen chromosomes of the population</p></blockquote>
<p>&#8212; Page 151, <a href="https://amzn.to/2Traqek">Algorithms for Optimization</a>, 2019.</p>
<p>Parents are used as the basis for generating the next generation of candidate points and one parent for each position in the population is required.</p>
<p>Parents are then taken in pairs and used to create two children. Recombination is performed using a crossover operator. This involves selecting a random split point on the bit string, then creating a child with the bits up to the split point from the first parent and from the split point to the end of the string from the second parent. This process is then inverted for the second child.</p>
<p>For example the two parents:</p>
<ul>
<li>parent1 = 00000</li>
<li>parent2 = 11111</li>
</ul>
<p>May result in two cross-over children:</p>
<ul>
<li>child1 = 00011</li>
<li>child2 = 11100</li>
</ul>
<p>This is called one point crossover, and there are many other variations of the operator.</p>
<p>Crossover is applied probabilistically for each pair of parents, meaning that in some cases, copies of the parents are taken as the children instead of the recombination operator. Crossover is controlled by a hyperparameter set to a large value, such as 80 percent or 90 percent.</p>
<blockquote><p>Crossover is the Genetic Algorithm’s distinguishing feature. It involves mixing and matching parts of two parents to form children. How you do that mixing and matching depends on the representation of the individuals.</p></blockquote>
<p>&#8212; Page 36, <a href="https://amzn.to/2HxZVn4">Essentials of Metaheuristics</a>, 2011.</p>
<p>Mutation involves flipping bits in created children candidate solutions. Typically, the mutation rate is set to <em>1/L</em>, where <em>L</em> is the length of the bitstring.</p>
<blockquote><p>Each bit in a binary-valued chromosome typically has a small probability of being flipped. For a chromosome with m bits, this mutation rate is typically set to 1/m, yielding an average of one mutation per child chromosome.</p></blockquote>
<p>&#8212; Page 155, <a href="https://amzn.to/2Traqek">Algorithms for Optimization</a>, 2019.</p>
<p>For example, if a problem used a bitstring with 20 bits, then a good default mutation rate would be (1/20) = 0.05 or a probability of 5 percent.</p>
<p>This defines the simple genetic algorithm procedure. It is a large field of study, and there are many extensions to the algorithm.</p>
<p>Now that we are familiar with the simple genetic algorithm procedure, let&#8217;s look at how we might implement it from scratch.</p>
<div class="woo-sc-hr"></div>
<center>
<h3>Want to Get Started With Optimization Algorithms?</h3>
<p>Take my free 7-day email crash course now (with sample code).</p>
<p>Click to sign-up and also get a free PDF Ebook version of the course.</p>
<p><script type="rocketlazyloadscript" src="https://embed.lpcontent.net/leadboxes/current/embed.js" async defer></script> <button data-leadbox-popup="ZC5aiATaEYV5xtViwuxqKo" data-leadbox-domain="machinelearningmastery.lpages.co" style="background: #32C88C;border-color: #32C88C;border-radius: 20px;color: #FFFFFF;display: inline-block;vertical-align: middle;padding: 16px 32px;min-width: 192px;border: 1px solid #32C88C;font-size: 1rem;font-family: Helvetica, Arial, sans-serif;text-align: center;outline: 0;line-height: 1;cursor: pointer;-webkit-transition: background 0.3s, color 0.3s, border 0.3s;transition: background 0.3s, color 0.3s, border 0.3s;  box-shadow: 0px 2px 5px rgba(0, 0, 0, 0.6);">Start your FREE Mini-Course now!</button></p>
</center>
<div class="woo-sc-hr"></div>
<h2>Genetic Algorithm From Scratch</h2>
<p>In this section, we will develop an implementation of the genetic algorithm.</p>
<p>The first step is to create a population of random bitstrings. We could use boolean values <em>True</em> and <em>False</em>, string values &#8216;0&#8217; and &#8216;1&#8217;, or integer values 0 and 1. In this case, we will use integer values.</p>
<p>We can generate an array of integer values in a range using the <a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html">randint() function</a>, and we can specify the range as values starting at 0 and less than 2, e.g. 0 or 1. We will also represent a candidate solution as a list instead of a NumPy array to keep things simple.</p>
<p>An initial population of random bitstring can be created as follows, where &#8220;<em>n_pop</em>&#8221; is a hyperparameter that controls the population size and &#8220;<em>n_bits</em>&#8221; is a hyperparameter that defines the number of bits in a single candidate solution:</p>
		<div id="urvanov-syntax-highlighter-6374e879751a1556682203" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# initial population of random bitstring
pop = [randint(0, 2, n_bits).tolist() for _ in range(n_pop)]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751a1556682203-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751a1556682203-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751a1556682203-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751a1556682203-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751a1556682203-2"><span class="crayon-p"># initial population of random bitstring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751a1556682203-3"><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">tolist</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Next, we can enumerate over a fixed number of algorithm iterations, in this case, controlled by a hyperparameter named &#8220;<em>n_iter</em>&#8220;.</p>
		<div id="urvanov-syntax-highlighter-6374e879751ac438918566" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# enumerate generations
	for gen in range(n_iter):
		...</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ac438918566-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ac438918566-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ac438918566-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ac438918566-4">4</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ac438918566-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ac438918566-2"><span class="crayon-p"># enumerate generations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ac438918566-3"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">gen </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_iter</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ac438918566-4"><span class="crayon-h">		</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>The first step in the algorithm iteration is to evaluate all candidate solutions.</p>
<p>We will use a function named <em>objective()</em> as a generic objective function and call it to get a fitness score, which we will minimize.</p>
		<div id="urvanov-syntax-highlighter-6374e879751af980225516" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# evaluate all candidates in the population
scores = [objective(c) for c in pop]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751af980225516-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751af980225516-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751af980225516-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751af980225516-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751af980225516-2"><span class="crayon-p"># evaluate all candidates in the population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751af980225516-3"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can then select parents that will be used to create children.</p>
<p>The tournament selection procedure can be implemented as a function that takes the population and returns one selected parent. The <em>k</em> value is fixed at 3 with a default argument, but you can experiment with different values if you like.</p>
		<div id="urvanov-syntax-highlighter-6374e879751b2438764659" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# tournament selection
def selection(pop, scores, k=3):
	# first random selection
	selection_ix = randint(len(pop))
	for ix in randint(0, len(pop), k-1):
		# check if better (e.g. perform a tournament)
		if scores[ix] &lt; scores[selection_ix]:
			selection_ix = ix
	return pop[selection_ix]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b2438764659-9">9</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-1"><span class="crayon-p"># tournament selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-2"><span class="crayon-e">def </span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">=</span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-3"><span class="crayon-h">	</span><span class="crayon-p"># first random selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-4"><span class="crayon-h">	</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-5"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">ix </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-6"><span class="crayon-h">		</span><span class="crayon-p"># check if better (e.g. perform a tournament)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-7"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-8"><span class="crayon-h">			</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">ix</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b2438764659-9"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can then call this function one time for each position in the population to create a list of parents.</p>
		<div id="urvanov-syntax-highlighter-6374e879751b6449598316" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# select parents
selected = [selection(pop, scores) for _ in range(n_pop)]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b6449598316-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b6449598316-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b6449598316-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b6449598316-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b6449598316-2"><span class="crayon-p"># select parents</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b6449598316-3"><span class="crayon-v">selected</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can then create the next generation.</p>
<p>This first requires a function to perform crossover. This function will take two parents and the crossover rate. The crossover rate is a hyperparameter that determines whether crossover is performed or not, and if not, the parents are copied into the next generation. It is a probability and typically has a large value close to 1.0.</p>
<p>The <em>crossover()</em> function below implements crossover using a draw of a random number in the range [0,1] to determine if crossover is performed, then selecting a valid split point if crossover is to be performed.</p>
		<div id="urvanov-syntax-highlighter-6374e879751b9366071738" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# crossover two parents to create two children
def crossover(p1, p2, r_cross):
	# children are copies of parents by default
	c1, c2 = p1.copy(), p2.copy()
	# check for recombination
	if rand() &lt; r_cross:
		# select crossover point that is not on the end of the string
		pt = randint(1, len(p1)-2)
		# perform crossover
		c1 = p1[:pt] + p2[pt:]
		c2 = p2[:pt] + p1[pt:]
	return [c1, c2]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751b9366071738-12">12</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-1"><span class="crayon-p"># crossover two parents to create two children</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-2"><span class="crayon-e">def </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-3"><span class="crayon-h">	</span><span class="crayon-p"># children are copies of parents by default</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-4"><span class="crayon-h">	</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-5"><span class="crayon-h">	</span><span class="crayon-p"># check for recombination</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-6"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-7"><span class="crayon-h">		</span><span class="crayon-p"># select crossover point that is not on the end of the string</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-8"><span class="crayon-h">		</span><span class="crayon-v">pt</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-9"><span class="crayon-h">		</span><span class="crayon-p"># perform crossover</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-10"><span class="crayon-h">		</span><span class="crayon-v">c1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-11"><span class="crayon-h">		</span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751b9366071738-12"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We also need a function to perform mutation.</p>
<p>This procedure simply flips bits with a low probability controlled by the &#8220;<em>r_mut</em>&#8221; hyperparameter.</p>
		<div id="urvanov-syntax-highlighter-6374e879751bd635158084" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# mutation operator
def mutation(bitstring, r_mut):
	for i in range(len(bitstring)):
		# check for a mutation
		if rand() &lt; r_mut:
			# flip the bit
			bitstring[i] = 1 - bitstring[i]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bd635158084-7">7</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-1"><span class="crayon-p"># mutation operator</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-2"><span class="crayon-e">def </span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-3"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-4"><span class="crayon-h">		</span><span class="crayon-p"># check for a mutation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-5"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-6"><span class="crayon-h">			</span><span class="crayon-p"># flip the bit</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bd635158084-7"><span class="crayon-h">			</span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can then loop over the list of parents and create a list of children to be used as the next generation, calling the crossover and mutation functions as needed.</p>
		<div id="urvanov-syntax-highlighter-6374e879751bf762252082" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# create the next generation
children = list()
for i in range(0, n_pop, 2):
	# get selected parents in pairs
	p1, p2 = selected[i], selected[i+1]
	# crossover and mutation
	for c in crossover(p1, p2, r_cross):
		# mutation
		mutation(c, r_mut)
		# store for next generation
		children.append(c)</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751bf762252082-12">12</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-2"><span class="crayon-p"># create the next generation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-3"><span class="crayon-v">children</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-4"><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-5"><span class="crayon-h">	</span><span class="crayon-p"># get selected parents in pairs</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-6"><span class="crayon-h">	</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-7"><span class="crayon-h">	</span><span class="crayon-p"># crossover and mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-8"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-9"><span class="crayon-h">		</span><span class="crayon-p"># mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-10"><span class="crayon-h">		</span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-11"><span class="crayon-h">		</span><span class="crayon-p"># store for next generation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751bf762252082-12"><span class="crayon-h">		</span><span class="crayon-v">children</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can tie all of this together into a function named <em>genetic_algorithm()</em> that takes the name of the objective function and the hyperparameters of the search, and returns the best solution found during the search.</p>
		<div id="urvanov-syntax-highlighter-6374e879751c2462662607" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# genetic algorithm
def genetic_algorithm(objective, n_bits, n_iter, n_pop, r_cross, r_mut):
	# initial population of random bitstring
	pop = [randint(0, 2, n_bits).tolist() for _ in range(n_pop)]
	# keep track of best solution
	best, best_eval = 0, objective(pop[0])
	# enumerate generations
	for gen in range(n_iter):
		# evaluate all candidates in the population
		scores = [objective(c) for c in pop]
		# check for new best solution
		for i in range(n_pop):
			if scores[i] &lt; best_eval:
				best, best_eval = pop[i], scores[i]
				print("&gt;%d, new best f(%s) = %.3f" % (gen,  pop[i], scores[i]))
		# select parents
		selected = [selection(pop, scores) for _ in range(n_pop)]
		# create the next generation
		children = list()
		for i in range(0, n_pop, 2):
			# get selected parents in pairs
			p1, p2 = selected[i], selected[i+1]
			# crossover and mutation
			for c in crossover(p1, p2, r_cross):
				# mutation
				mutation(c, r_mut)
				# store for next generation
				children.append(c)
		# replace population
		pop = children
	return [best, best_eval]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c2462662607-31">31</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-1"><span class="crayon-p"># genetic algorithm</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-2"><span class="crayon-e">def </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">objective</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-3"><span class="crayon-h">	</span><span class="crayon-p"># initial population of random bitstring</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-4"><span class="crayon-h">	</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">tolist</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-5"><span class="crayon-h">	</span><span class="crayon-p"># keep track of best solution</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-6"><span class="crayon-h">	</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-7"><span class="crayon-h">	</span><span class="crayon-p"># enumerate generations</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-8"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">gen </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_iter</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-9"><span class="crayon-h">		</span><span class="crayon-p"># evaluate all candidates in the population</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-10"><span class="crayon-h">		</span><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-11"><span class="crayon-h">		</span><span class="crayon-p"># check for new best solution</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-12"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-13"><span class="crayon-h">			</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-14"><span class="crayon-h">				</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-15"><span class="crayon-h">				</span><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"&gt;%d, new best f(%s) = %.3f"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">gen</span><span class="crayon-sy">,</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-16"><span class="crayon-h">		</span><span class="crayon-p"># select parents</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-17"><span class="crayon-h">		</span><span class="crayon-v">selected</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-18"><span class="crayon-h">		</span><span class="crayon-p"># create the next generation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-19"><span class="crayon-h">		</span><span class="crayon-v">children</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-20"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-21"><span class="crayon-h">			</span><span class="crayon-p"># get selected parents in pairs</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-22"><span class="crayon-h">			</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-23"><span class="crayon-h">			</span><span class="crayon-p"># crossover and mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-24"><span class="crayon-h">			</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-25"><span class="crayon-h">				</span><span class="crayon-p"># mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-26"><span class="crayon-h">				</span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-27"><span class="crayon-h">				</span><span class="crayon-p"># store for next generation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-28"><span class="crayon-h">				</span><span class="crayon-v">children</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-29"><span class="crayon-h">		</span><span class="crayon-p"># replace population</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-30"><span class="crayon-h">		</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">children</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c2462662607-31"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Now that we have developed an implementation of the genetic algorithm, let&#8217;s explore how we might apply it to an objective function.</p>
<h2>Genetic Algorithm for OneMax</h2>
<p>In this section, we will apply the genetic algorithm to a binary string-based optimization problem.</p>
<p>The problem is called OneMax and evaluates a binary string based on the number of 1s in the string. For example, a bitstring with a length of 20 bits will have a score of 20 for a string of all 1s.</p>
<p>Given we have implemented the genetic algorithm to minimize the objective function, we can add a negative sign to this evaluation so that large positive values become large negative values.</p>
<p>The <em>onemax()</em> function below implements this and takes a bitstring of integer values as input and returns the negative sum of the values.</p>
		<div id="urvanov-syntax-highlighter-6374e879751c8413487814" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# objective function
def onemax(x):
	return -sum(x)</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c8413487814-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751c8413487814-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751c8413487814-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c8413487814-1"><span class="crayon-p"># objective function</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751c8413487814-2"><span class="crayon-e">def </span><span class="crayon-e">onemax</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751c8413487814-3"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-e">sum</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Next, we can configure the search.</p>
<p>The search will run for 100 iterations and we will use 20 bits in our candidate solutions, meaning the optimal fitness will be -20.0.</p>
<p>The population size will be 100, and we will use a crossover rate of 90 percent and a mutation rate of 5 percent. This configuration was chosen after a little trial and error.</p>
		<div id="urvanov-syntax-highlighter-6374e879751cb005119726" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# define the total iterations
n_iter = 100
# bits
n_bits = 20
# define the population size
n_pop = 100
# crossover rate
r_cross = 0.9
# mutation rate
r_mut = 1.0 / float(n_bits)</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cb005119726-11">11</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-2"><span class="crayon-p"># define the total iterations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-3"><span class="crayon-v">n_iter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-4"><span class="crayon-p"># bits</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-5"><span class="crayon-v">n_bits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">20</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-6"><span class="crayon-p"># define the population size</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-7"><span class="crayon-v">n_pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-8"><span class="crayon-p"># crossover rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-9"><span class="crayon-v">r_cross</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.9</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-10"><span class="crayon-p"># mutation rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cb005119726-11"><span class="crayon-v">r_mut</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>The search can then be called and the best result reported.</p>
		<div id="urvanov-syntax-highlighter-6374e879751cd434153170" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# perform the genetic algorithm search
best, score = genetic_algorithm(onemax, n_bits, n_iter, n_pop, r_cross, r_mut)
print('Done!')
print('f(%s) = %f' % (best, score))</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cd434153170-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cd434153170-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cd434153170-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751cd434153170-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751cd434153170-5">5</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cd434153170-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cd434153170-2"><span class="crayon-p"># perform the genetic algorithm search</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cd434153170-3"><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">onemax</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751cd434153170-4"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'Done!'</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751cd434153170-5"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'f(%s) = %f'</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Tying this together, the complete example of applying the genetic algorithm to the OneMax objective function is listed below.</p>
		<div id="urvanov-syntax-highlighter-6374e879751d0037828749" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# genetic algorithm search of the one max optimization problem
from numpy.random import randint
from numpy.random import rand

# objective function
def onemax(x):
	return -sum(x)

# tournament selection
def selection(pop, scores, k=3):
	# first random selection
	selection_ix = randint(len(pop))
	for ix in randint(0, len(pop), k-1):
		# check if better (e.g. perform a tournament)
		if scores[ix] &lt; scores[selection_ix]:
			selection_ix = ix
	return pop[selection_ix]

# crossover two parents to create two children
def crossover(p1, p2, r_cross):
	# children are copies of parents by default
	c1, c2 = p1.copy(), p2.copy()
	# check for recombination
	if rand() &lt; r_cross:
		# select crossover point that is not on the end of the string
		pt = randint(1, len(p1)-2)
		# perform crossover
		c1 = p1[:pt] + p2[pt:]
		c2 = p2[:pt] + p1[pt:]
	return [c1, c2]

# mutation operator
def mutation(bitstring, r_mut):
	for i in range(len(bitstring)):
		# check for a mutation
		if rand() &lt; r_mut:
			# flip the bit
			bitstring[i] = 1 - bitstring[i]

# genetic algorithm
def genetic_algorithm(objective, n_bits, n_iter, n_pop, r_cross, r_mut):
	# initial population of random bitstring
	pop = [randint(0, 2, n_bits).tolist() for _ in range(n_pop)]
	# keep track of best solution
	best, best_eval = 0, objective(pop[0])
	# enumerate generations
	for gen in range(n_iter):
		# evaluate all candidates in the population
		scores = [objective(c) for c in pop]
		# check for new best solution
		for i in range(n_pop):
			if scores[i] &lt; best_eval:
				best, best_eval = pop[i], scores[i]
				print("&gt;%d, new best f(%s) = %.3f" % (gen,  pop[i], scores[i]))
		# select parents
		selected = [selection(pop, scores) for _ in range(n_pop)]
		# create the next generation
		children = list()
		for i in range(0, n_pop, 2):
			# get selected parents in pairs
			p1, p2 = selected[i], selected[i+1]
			# crossover and mutation
			for c in crossover(p1, p2, r_cross):
				# mutation
				mutation(c, r_mut)
				# store for next generation
				children.append(c)
		# replace population
		pop = children
	return [best, best_eval]

# define the total iterations
n_iter = 100
# bits
n_bits = 20
# define the population size
n_pop = 100
# crossover rate
r_cross = 0.9
# mutation rate
r_mut = 1.0 / float(n_bits)
# perform the genetic algorithm search
best, score = genetic_algorithm(onemax, n_bits, n_iter, n_pop, r_cross, r_mut)
print('Done!')
print('f(%s) = %f' % (best, score))</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-31">31</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-32">32</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-33">33</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-34">34</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-35">35</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-36">36</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-37">37</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-38">38</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-39">39</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-40">40</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-41">41</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-42">42</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-43">43</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-44">44</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-45">45</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-46">46</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-47">47</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-48">48</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-49">49</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-50">50</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-51">51</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-52">52</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-53">53</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-54">54</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-55">55</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-56">56</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-57">57</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-58">58</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-59">59</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-60">60</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-61">61</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-62">62</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-63">63</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-64">64</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-65">65</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-66">66</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-67">67</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-68">68</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-69">69</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-70">70</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-71">71</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-72">72</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-73">73</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-74">74</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-75">75</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-76">76</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-77">77</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-78">78</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-79">79</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-80">80</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-81">81</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-82">82</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-83">83</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-84">84</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751d0037828749-85">85</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-1"><span class="crayon-p"># genetic algorithm search of the one max optimization problem</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-2"><span class="crayon-e">from </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">random </span><span class="crayon-e">import </span><span class="crayon-e">randint</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-3"><span class="crayon-e">from </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">random </span><span class="crayon-e">import </span><span class="crayon-i">rand</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-4">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-5"><span class="crayon-p"># objective function</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-6"><span class="crayon-e">def </span><span class="crayon-e">onemax</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-7"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-e">sum</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-8">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-9"><span class="crayon-p"># tournament selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-10"><span class="crayon-e">def </span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">=</span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-11"><span class="crayon-h">	</span><span class="crayon-p"># first random selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-12"><span class="crayon-h">	</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-13"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">ix </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-14"><span class="crayon-h">		</span><span class="crayon-p"># check if better (e.g. perform a tournament)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-15"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-16"><span class="crayon-h">			</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">ix</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-17"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-18">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-19"><span class="crayon-p"># crossover two parents to create two children</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-20"><span class="crayon-e">def </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-21"><span class="crayon-h">	</span><span class="crayon-p"># children are copies of parents by default</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-22"><span class="crayon-h">	</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-23"><span class="crayon-h">	</span><span class="crayon-p"># check for recombination</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-24"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-25"><span class="crayon-h">		</span><span class="crayon-p"># select crossover point that is not on the end of the string</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-26"><span class="crayon-h">		</span><span class="crayon-v">pt</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-27"><span class="crayon-h">		</span><span class="crayon-p"># perform crossover</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-28"><span class="crayon-h">		</span><span class="crayon-v">c1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-29"><span class="crayon-h">		</span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-30"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-31">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-32"><span class="crayon-p"># mutation operator</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-33"><span class="crayon-e">def </span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-34"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-35"><span class="crayon-h">		</span><span class="crayon-p"># check for a mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-36"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-37"><span class="crayon-h">			</span><span class="crayon-p"># flip the bit</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-38"><span class="crayon-h">			</span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-39">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-40"><span class="crayon-p"># genetic algorithm</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-41"><span class="crayon-e">def </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">objective</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-42"><span class="crayon-h">	</span><span class="crayon-p"># initial population of random bitstring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-43"><span class="crayon-h">	</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">tolist</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-44"><span class="crayon-h">	</span><span class="crayon-p"># keep track of best solution</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-45"><span class="crayon-h">	</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-46"><span class="crayon-h">	</span><span class="crayon-p"># enumerate generations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-47"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">gen </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_iter</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-48"><span class="crayon-h">		</span><span class="crayon-p"># evaluate all candidates in the population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-49"><span class="crayon-h">		</span><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-50"><span class="crayon-h">		</span><span class="crayon-p"># check for new best solution</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-51"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-52"><span class="crayon-h">			</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-53"><span class="crayon-h">				</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-54"><span class="crayon-h">				</span><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"&gt;%d, new best f(%s) = %.3f"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">gen</span><span class="crayon-sy">,</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-55"><span class="crayon-h">		</span><span class="crayon-p"># select parents</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-56"><span class="crayon-h">		</span><span class="crayon-v">selected</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-57"><span class="crayon-h">		</span><span class="crayon-p"># create the next generation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-58"><span class="crayon-h">		</span><span class="crayon-v">children</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-59"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-60"><span class="crayon-h">			</span><span class="crayon-p"># get selected parents in pairs</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-61"><span class="crayon-h">			</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-62"><span class="crayon-h">			</span><span class="crayon-p"># crossover and mutation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-63"><span class="crayon-h">			</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-64"><span class="crayon-h">				</span><span class="crayon-p"># mutation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-65"><span class="crayon-h">				</span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-66"><span class="crayon-h">				</span><span class="crayon-p"># store for next generation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-67"><span class="crayon-h">				</span><span class="crayon-v">children</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-68"><span class="crayon-h">		</span><span class="crayon-p"># replace population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-69"><span class="crayon-h">		</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">children</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-70"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-71">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-72"><span class="crayon-p"># define the total iterations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-73"><span class="crayon-v">n_iter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-74"><span class="crayon-p"># bits</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-75"><span class="crayon-v">n_bits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">20</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-76"><span class="crayon-p"># define the population size</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-77"><span class="crayon-v">n_pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-78"><span class="crayon-p"># crossover rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-79"><span class="crayon-v">r_cross</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.9</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-80"><span class="crayon-p"># mutation rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-81"><span class="crayon-v">r_mut</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-82"><span class="crayon-p"># perform the genetic algorithm search</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-83"><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">onemax</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-84"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'Done!'</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751d0037828749-85"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'f(%s) = %f'</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Running the example will report the best result as it is found along the way, then the final best solution at the end of the search, which we would expect to be the optimal solution.</p>
<p><strong>Note</strong>: Your <a href="https://machinelearningmastery.com/different-results-each-time-in-machine-learning/">results may vary</a> given the stochastic nature of the algorithm or evaluation procedure, or differences in numerical precision. Consider running the example a few times and compare the average outcome.</p>

<p>In this case, we can see that the search found the optimal solution after about eight generations.</p>
		<div id="urvanov-syntax-highlighter-6374e879751da419429843" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
&gt;0, new best f([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]) = -14.000
&gt;0, new best f([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]) = -15.000
&gt;1, new best f([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]) = -16.000
&gt;2, new best f([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]) = -17.000
&gt;2, new best f([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -19.000
&gt;8, new best f([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -20.000
Done!
f([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -20.000000</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751da419429843-8">8</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751da419429843-1">&gt;0, new best f([1, 1, 0, 0, 1, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 1]) = -14.000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751da419429843-2">&gt;0, new best f([1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 1, 0]) = -15.000</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751da419429843-3">&gt;1, new best f([1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 1, 1]) = -16.000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751da419429843-4">&gt;2, new best f([0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1]) = -17.000</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751da419429843-5">&gt;2, new best f([1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -19.000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751da419429843-6">&gt;8, new best f([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -20.000</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751da419429843-7">Done!</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751da419429843-8">f([1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]) = -20.000000</div></div></td>
					</tr>
				</table>
			</div>
		</div><p></p>
<h2>Genetic Algorithm for Continuous Function Optimization</h2>
<p>Optimizing the OneMax function is not very interesting; we are more likely to want to optimize a continuous function.</p>
<p>For example, we can define the x^2 minimization function that takes input variables and has an optima at  f(0, 0) = 0.0.</p>
		<div id="urvanov-syntax-highlighter-6374e879751df533761903" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# objective function
def objective(x):
	return x[0]**2.0 + x[1]**2.0</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751df533761903-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751df533761903-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751df533761903-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751df533761903-1"><span class="crayon-p"># objective function</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751df533761903-2"><span class="crayon-e">def </span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751df533761903-3"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-cn">2.0</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-cn">2.0</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can minimize this function with a genetic algorithm.</p>
<p>First, we must define the bounds of each input variable.</p>
		<div id="urvanov-syntax-highlighter-6374e879751e2778274689" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# define range for input
bounds = [[-5.0, 5.0], [-5.0, 5.0]]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e2778274689-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751e2778274689-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e2778274689-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e2778274689-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751e2778274689-2"><span class="crayon-p"># define range for input</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e2778274689-3"><span class="crayon-v">bounds</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">5.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5.0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">5.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5.0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We will take the &#8220;<em>n_bits</em>&#8221; hyperparameter as a number of bits per input variable to the objective function and set it to 16 bits.</p>
		<div id="urvanov-syntax-highlighter-6374e879751e5901370757" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# bits per variable
n_bits = 16</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e5901370757-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751e5901370757-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e5901370757-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e5901370757-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751e5901370757-2"><span class="crayon-p"># bits per variable</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e5901370757-3"><span class="crayon-v">n_bits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">16</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>This means our actual bit string will have (16 * 2) = 32 bits, given the two input variables.</p>
<p>We must update our mutation rate accordingly.</p>
		<div id="urvanov-syntax-highlighter-6374e879751e7489210113" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# mutation rate
r_mut = 1.0 / (float(n_bits) * len(bounds))</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e7489210113-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751e7489210113-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751e7489210113-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e7489210113-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751e7489210113-2"><span class="crayon-p"># mutation rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751e7489210113-3"><span class="crayon-v">r_mut</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Next, we need to ensure that the initial population creates random bitstrings that are large enough.</p>
		<div id="urvanov-syntax-highlighter-6374e879751ea989408396" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# initial population of random bitstring
pop = [randint(0, 2, n_bits*len(bounds)).tolist() for _ in range(n_pop)]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ea989408396-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ea989408396-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ea989408396-3">3</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ea989408396-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ea989408396-2"><span class="crayon-p"># initial population of random bitstring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ea989408396-3"><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e ">n_bits*</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">tolist</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Finally, we need to decode the bitstrings to numbers prior to evaluating each with the objective function.</p>
<p>We can achieve this by first decoding each substring to an integer, then scaling the integer to the desired range. This will give a vector of values in the range that can then be provided to the objective function for evaluation.</p>
<p>The <em>decode()</em> function below implements this, taking the bounds of the function, the number of bits per variable, and a bitstring as input and returns a list of decoded real values.</p>
		<div id="urvanov-syntax-highlighter-6374e879751ed274892485" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# decode bitstring to numbers
def decode(bounds, n_bits, bitstring):
	decoded = list()
	largest = 2**n_bits
	for i in range(len(bounds)):
		# extract the substring
		start, end = i * n_bits, (i * n_bits)+n_bits
		substring = bitstring[start:end]
		# convert bitstring to a string of chars
		chars = ''.join([str(s) for s in substring])
		# convert string to integer
		integer = int(chars, 2)
		# scale integer to desired range
		value = bounds[i][0] + (integer/largest) * (bounds[i][1] - bounds[i][0])
		# store
		decoded.append(value)
	return decoded</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751ed274892485-17">17</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-1"><span class="crayon-p"># decode bitstring to numbers</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-2"><span class="crayon-e">def </span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-3"><span class="crayon-h">	</span><span class="crayon-v">decoded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-4"><span class="crayon-h">	</span><span class="crayon-v">largest</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-e">n_bits</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-5"><span class="crayon-e">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-6"><span class="crayon-h">		</span><span class="crayon-p"># extract the substring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-7"><span class="crayon-h">		</span><span class="crayon-v">start</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e ">i *</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e ">i *</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-o">+</span><span class="crayon-e">n_bits</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-8"><span class="crayon-e">		</span><span class="crayon-v">substring</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">start</span><span class="crayon-o">:</span><span class="crayon-st">end</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-9"><span class="crayon-h">		</span><span class="crayon-p"># convert bitstring to a string of chars</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-10"><span class="crayon-h">		</span><span class="crayon-v">chars</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">''</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-e">str</span><span class="crayon-sy">(</span><span class="crayon-v">s</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">s</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">substring</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-11"><span class="crayon-h">		</span><span class="crayon-p"># convert string to integer</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-12"><span class="crayon-h">		</span><span class="crayon-t">integer</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">(</span><span class="crayon-v">chars</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-13"><span class="crayon-h">		</span><span class="crayon-p"># scale integer to desired range</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-14"><span class="crayon-h">		</span><span class="crayon-v">value</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">integer</span><span class="crayon-o">/</span><span class="crayon-v">largest</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-15"><span class="crayon-h">		</span><span class="crayon-p"># store</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-16"><span class="crayon-h">		</span><span class="crayon-v">decoded</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">value</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751ed274892485-17"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">decoded</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>We can then call this at the beginning of the algorithm loop to decode the population, then evaluate the decoded version of the population.</p>
		<div id="urvanov-syntax-highlighter-6374e879751f1091891354" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
...
# decode population
decoded = [decode(bounds, n_bits, p) for p in pop]
# evaluate all candidates in the population
scores = [objective(d) for d in decoded]</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f1091891354-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f1091891354-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f1091891354-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f1091891354-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f1091891354-5">5</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f1091891354-1"><span class="crayon-sy">.</span><span class="crayon-sy">.</span><span class="crayon-sy">.</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f1091891354-2"><span class="crayon-p"># decode population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f1091891354-3"><span class="crayon-v">decoded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">p</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f1091891354-4"><span class="crayon-p"># evaluate all candidates in the population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f1091891354-5"><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">d</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">decoded</span><span class="crayon-sy">]</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Tying this together, the complete example of the genetic algorithm for continuous function optimization is listed below.</p>
		<div id="urvanov-syntax-highlighter-6374e879751f4786246058" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
# genetic algorithm search for continuous function optimization
from numpy.random import randint
from numpy.random import rand

# objective function
def objective(x):
	return x[0]**2.0 + x[1]**2.0

# decode bitstring to numbers
def decode(bounds, n_bits, bitstring):
	decoded = list()
	largest = 2**n_bits
	for i in range(len(bounds)):
		# extract the substring
		start, end = i * n_bits, (i * n_bits)+n_bits
		substring = bitstring[start:end]
		# convert bitstring to a string of chars
		chars = ''.join([str(s) for s in substring])
		# convert string to integer
		integer = int(chars, 2)
		# scale integer to desired range
		value = bounds[i][0] + (integer/largest) * (bounds[i][1] - bounds[i][0])
		# store
		decoded.append(value)
	return decoded

# tournament selection
def selection(pop, scores, k=3):
	# first random selection
	selection_ix = randint(len(pop))
	for ix in randint(0, len(pop), k-1):
		# check if better (e.g. perform a tournament)
		if scores[ix] &lt; scores[selection_ix]:
			selection_ix = ix
	return pop[selection_ix]

# crossover two parents to create two children
def crossover(p1, p2, r_cross):
	# children are copies of parents by default
	c1, c2 = p1.copy(), p2.copy()
	# check for recombination
	if rand() &lt; r_cross:
		# select crossover point that is not on the end of the string
		pt = randint(1, len(p1)-2)
		# perform crossover
		c1 = p1[:pt] + p2[pt:]
		c2 = p2[:pt] + p1[pt:]
	return [c1, c2]

# mutation operator
def mutation(bitstring, r_mut):
	for i in range(len(bitstring)):
		# check for a mutation
		if rand() &lt; r_mut:
			# flip the bit
			bitstring[i] = 1 - bitstring[i]

# genetic algorithm
def genetic_algorithm(objective, bounds, n_bits, n_iter, n_pop, r_cross, r_mut):
	# initial population of random bitstring
	pop = [randint(0, 2, n_bits*len(bounds)).tolist() for _ in range(n_pop)]
	# keep track of best solution
	best, best_eval = 0, objective(decode(bounds, n_bits, pop[0]))
	# enumerate generations
	for gen in range(n_iter):
		# decode population
		decoded = [decode(bounds, n_bits, p) for p in pop]
		# evaluate all candidates in the population
		scores = [objective(d) for d in decoded]
		# check for new best solution
		for i in range(n_pop):
			if scores[i] &lt; best_eval:
				best, best_eval = pop[i], scores[i]
				print("&gt;%d, new best f(%s) = %f" % (gen,  decoded[i], scores[i]))
		# select parents
		selected = [selection(pop, scores) for _ in range(n_pop)]
		# create the next generation
		children = list()
		for i in range(0, n_pop, 2):
			# get selected parents in pairs
			p1, p2 = selected[i], selected[i+1]
			# crossover and mutation
			for c in crossover(p1, p2, r_cross):
				# mutation
				mutation(c, r_mut)
				# store for next generation
				children.append(c)
		# replace population
		pop = children
	return [best, best_eval]

# define range for input
bounds = [[-5.0, 5.0], [-5.0, 5.0]]
# define the total iterations
n_iter = 100
# bits per variable
n_bits = 16
# define the population size
n_pop = 100
# crossover rate
r_cross = 0.9
# mutation rate
r_mut = 1.0 / (float(n_bits) * len(bounds))
# perform the genetic algorithm search
best, score = genetic_algorithm(objective, bounds, n_bits, n_iter, n_pop, r_cross, r_mut)
print('Done!')
decoded = decode(bounds, n_bits, best)
print('f(%s) = %f' % (decoded, score))</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-31">31</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-32">32</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-33">33</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-34">34</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-35">35</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-36">36</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-37">37</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-38">38</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-39">39</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-40">40</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-41">41</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-42">42</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-43">43</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-44">44</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-45">45</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-46">46</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-47">47</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-48">48</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-49">49</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-50">50</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-51">51</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-52">52</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-53">53</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-54">54</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-55">55</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-56">56</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-57">57</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-58">58</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-59">59</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-60">60</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-61">61</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-62">62</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-63">63</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-64">64</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-65">65</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-66">66</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-67">67</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-68">68</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-69">69</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-70">70</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-71">71</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-72">72</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-73">73</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-74">74</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-75">75</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-76">76</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-77">77</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-78">78</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-79">79</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-80">80</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-81">81</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-82">82</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-83">83</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-84">84</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-85">85</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-86">86</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-87">87</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-88">88</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-89">89</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-90">90</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-91">91</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-92">92</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-93">93</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-94">94</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-95">95</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-96">96</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-97">97</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-98">98</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-99">99</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-100">100</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-101">101</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-102">102</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-103">103</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-104">104</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-105">105</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-106">106</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-107">107</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751f4786246058-108">108</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-1"><span class="crayon-p"># genetic algorithm search for continuous function optimization</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-2"><span class="crayon-e">from </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">random </span><span class="crayon-e">import </span><span class="crayon-e">randint</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-3"><span class="crayon-e">from </span><span class="crayon-v">numpy</span><span class="crayon-sy">.</span><span class="crayon-e">random </span><span class="crayon-e">import </span><span class="crayon-i">rand</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-4">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-5"><span class="crayon-p"># objective function</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-6"><span class="crayon-e">def </span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">x</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-7"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-cn">2.0</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">x</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-cn">2.0</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-8">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-9"><span class="crayon-p"># decode bitstring to numbers</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-10"><span class="crayon-e">def </span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-11"><span class="crayon-h">	</span><span class="crayon-v">decoded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-12"><span class="crayon-h">	</span><span class="crayon-v">largest</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-o">*</span><span class="crayon-o">*</span><span class="crayon-e">n_bits</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-13"><span class="crayon-e">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-14"><span class="crayon-h">		</span><span class="crayon-p"># extract the substring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-15"><span class="crayon-h">		</span><span class="crayon-v">start</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-st">end</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e ">i *</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-e ">i *</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-o">+</span><span class="crayon-e">n_bits</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-16"><span class="crayon-e">		</span><span class="crayon-v">substring</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">start</span><span class="crayon-o">:</span><span class="crayon-st">end</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-17"><span class="crayon-h">		</span><span class="crayon-p"># convert bitstring to a string of chars</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-18"><span class="crayon-h">		</span><span class="crayon-v">chars</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-s">''</span><span class="crayon-sy">.</span><span class="crayon-e">join</span><span class="crayon-sy">(</span><span class="crayon-sy">[</span><span class="crayon-e">str</span><span class="crayon-sy">(</span><span class="crayon-v">s</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">s</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">substring</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-19"><span class="crayon-h">		</span><span class="crayon-p"># convert string to integer</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-20"><span class="crayon-h">		</span><span class="crayon-t">integer</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-t">int</span><span class="crayon-sy">(</span><span class="crayon-v">chars</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-21"><span class="crayon-h">		</span><span class="crayon-p"># scale integer to desired range</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-22"><span class="crayon-h">		</span><span class="crayon-v">value</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">integer</span><span class="crayon-o">/</span><span class="crayon-v">largest</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-23"><span class="crayon-h">		</span><span class="crayon-p"># store</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-24"><span class="crayon-h">		</span><span class="crayon-v">decoded</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">value</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-25"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-i">decoded</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-26">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-27"><span class="crayon-p"># tournament selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-28"><span class="crayon-e">def </span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">=</span><span class="crayon-cn">3</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-29"><span class="crayon-h">	</span><span class="crayon-p"># first random selection</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-30"><span class="crayon-h">	</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-31"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">ix </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">k</span><span class="crayon-o">-</span><span class="crayon-cn">1</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-32"><span class="crayon-h">		</span><span class="crayon-p"># check if better (e.g. perform a tournament)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-33"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">ix</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-34"><span class="crayon-h">			</span><span class="crayon-v">selection_ix</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">ix</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-35"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">selection_ix</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-36">&nbsp;</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-37"><span class="crayon-p"># crossover two parents to create two children</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-38"><span class="crayon-e">def </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-39"><span class="crayon-h">	</span><span class="crayon-p"># children are copies of parents by default</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-40"><span class="crayon-h">	</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">.</span><span class="crayon-e">copy</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-41"><span class="crayon-h">	</span><span class="crayon-p"># check for recombination</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-42"><span class="crayon-h">	</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-43"><span class="crayon-h">		</span><span class="crayon-p"># select crossover point that is not on the end of the string</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-44"><span class="crayon-h">		</span><span class="crayon-v">pt</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">)</span><span class="crayon-o">-</span><span class="crayon-cn">2</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-45"><span class="crayon-h">		</span><span class="crayon-p"># perform crossover</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-46"><span class="crayon-h">		</span><span class="crayon-v">c1</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-47"><span class="crayon-h">		</span><span class="crayon-v">c2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">[</span><span class="crayon-o">:</span><span class="crayon-v">pt</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">+</span><span class="crayon-h"> </span><span class="crayon-v">p1</span><span class="crayon-sy">[</span><span class="crayon-v">pt</span><span class="crayon-o">:</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-48"><span class="crayon-h">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">c1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">c2</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-49">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-50"><span class="crayon-p"># mutation operator</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-51"><span class="crayon-e">def </span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-52"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bitstring</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-53"><span class="crayon-h">		</span><span class="crayon-p"># check for a mutation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-54"><span class="crayon-h">		</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-e">rand</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-55"><span class="crayon-h">			</span><span class="crayon-p"># flip the bit</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-56"><span class="crayon-h">			</span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1</span><span class="crayon-h"> </span><span class="crayon-o">-</span><span class="crayon-h"> </span><span class="crayon-v">bitstring</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-57">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-58"><span class="crayon-p"># genetic algorithm</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-59"><span class="crayon-e">def </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">objective</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-60"><span class="crayon-h">	</span><span class="crayon-p"># initial population of random bitstring</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-61"><span class="crayon-h">	</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">randint</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e ">n_bits*</span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span><span class="crayon-sy">.</span><span class="crayon-e">tolist</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-62"><span class="crayon-h">	</span><span class="crayon-p"># keep track of best solution</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-63"><span class="crayon-h">	</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-cn">0</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-64"><span class="crayon-h">	</span><span class="crayon-p"># enumerate generations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-65"><span class="crayon-h">	</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-e">gen </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_iter</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-66"><span class="crayon-h">		</span><span class="crayon-p"># decode population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-67"><span class="crayon-h">		</span><span class="crayon-v">decoded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">p</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-68"><span class="crayon-h">		</span><span class="crayon-p"># evaluate all candidates in the population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-69"><span class="crayon-h">		</span><span class="crayon-v">scores</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">objective</span><span class="crayon-sy">(</span><span class="crayon-v">d</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">d</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-v">decoded</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-70"><span class="crayon-h">		</span><span class="crayon-p"># check for new best solution</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-71"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-72"><span class="crayon-h">			</span><span class="crayon-st">if</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-h"> </span><span class="crayon-o">&lt;</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-o">:</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-73"><span class="crayon-h">				</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">pop</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-74"><span class="crayon-h">				</span><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">"&gt;%d, new best f(%s) = %f"</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">gen</span><span class="crayon-sy">,</span><span class="crayon-h">&nbsp;&nbsp;</span><span class="crayon-v">decoded</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-75"><span class="crayon-h">		</span><span class="crayon-p"># select parents</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-76"><span class="crayon-h">		</span><span class="crayon-v">selected</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-e">selection</span><span class="crayon-sy">(</span><span class="crayon-v">pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">scores</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">_</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-v">n_pop</span><span class="crayon-sy">)</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-77"><span class="crayon-h">		</span><span class="crayon-p"># create the next generation</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-78"><span class="crayon-h">		</span><span class="crayon-v">children</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">list</span><span class="crayon-sy">(</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-79"><span class="crayon-h">		</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">i</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">range</span><span class="crayon-sy">(</span><span class="crayon-cn">0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">2</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-80"><span class="crayon-h">			</span><span class="crayon-p"># get selected parents in pairs</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-81"><span class="crayon-h">			</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">selected</span><span class="crayon-sy">[</span><span class="crayon-v">i</span><span class="crayon-o">+</span><span class="crayon-cn">1</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-82"><span class="crayon-h">			</span><span class="crayon-p"># crossover and mutation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-83"><span class="crayon-h">			</span><span class="crayon-st">for</span><span class="crayon-h"> </span><span class="crayon-i">c</span><span class="crayon-h"> </span><span class="crayon-st">in</span><span class="crayon-h"> </span><span class="crayon-e">crossover</span><span class="crayon-sy">(</span><span class="crayon-v">p1</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">p2</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">)</span><span class="crayon-o">:</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-84"><span class="crayon-h">				</span><span class="crayon-p"># mutation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-85"><span class="crayon-h">				</span><span class="crayon-e">mutation</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-86"><span class="crayon-h">				</span><span class="crayon-p"># store for next generation</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-87"><span class="crayon-h">				</span><span class="crayon-v">children</span><span class="crayon-sy">.</span><span class="crayon-e">append</span><span class="crayon-sy">(</span><span class="crayon-v">c</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-88"><span class="crayon-h">		</span><span class="crayon-p"># replace population</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-89"><span class="crayon-h">		</span><span class="crayon-v">pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">children</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-90"><span class="crayon-e">	</span><span class="crayon-st">return</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best_eval</span><span class="crayon-sy">]</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-91">&nbsp;</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-92"><span class="crayon-p"># define range for input</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-93"><span class="crayon-v">bounds</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">5.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5.0</span><span class="crayon-sy">]</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-sy">[</span><span class="crayon-o">-</span><span class="crayon-cn">5.0</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-cn">5.0</span><span class="crayon-sy">]</span><span class="crayon-sy">]</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-94"><span class="crayon-p"># define the total iterations</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-95"><span class="crayon-v">n_iter</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-96"><span class="crayon-p"># bits per variable</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-97"><span class="crayon-v">n_bits</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">16</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-98"><span class="crayon-p"># define the population size</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-99"><span class="crayon-v">n_pop</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">100</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-100"><span class="crayon-p"># crossover rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-101"><span class="crayon-v">r_cross</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">0.9</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-102"><span class="crayon-p"># mutation rate</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-103"><span class="crayon-v">r_mut</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-cn">1.0</span><span class="crayon-h"> </span><span class="crayon-o">/</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-t">float</span><span class="crayon-sy">(</span><span class="crayon-v">n_bits</span><span class="crayon-sy">)</span><span class="crayon-h"> </span><span class="crayon-o">*</span><span class="crayon-h"> </span><span class="crayon-e">len</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-104"><span class="crayon-p"># perform the genetic algorithm search</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-105"><span class="crayon-v">best</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">genetic_algorithm</span><span class="crayon-sy">(</span><span class="crayon-v">objective</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_iter</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_pop</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_cross</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">r_mut</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-106"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'Done!'</span><span class="crayon-sy">)</span></div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-107"><span class="crayon-v">decoded</span><span class="crayon-h"> </span><span class="crayon-o">=</span><span class="crayon-h"> </span><span class="crayon-e">decode</span><span class="crayon-sy">(</span><span class="crayon-v">bounds</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">n_bits</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">best</span><span class="crayon-sy">)</span></div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751f4786246058-108"><span class="crayon-e">print</span><span class="crayon-sy">(</span><span class="crayon-s">'f(%s) = %f'</span><span class="crayon-h"> </span><span class="crayon-o">%</span><span class="crayon-h"> </span><span class="crayon-sy">(</span><span class="crayon-v">decoded</span><span class="crayon-sy">,</span><span class="crayon-h"> </span><span class="crayon-v">score</span><span class="crayon-sy">)</span><span class="crayon-sy">)</span></div></div></td>
					</tr>
				</table>
			</div>
		</div><p>Running the example reports the best decoded results along the way and the best decoded solution at the end of the run.</p>
<p><strong>Note</strong>: Your <a href="https://machinelearningmastery.com/different-results-each-time-in-machine-learning/">results may vary</a> given the stochastic nature of the algorithm or evaluation procedure, or differences in numerical precision. Consider running the example a few times and compare the average outcome.</p>

<p>In this case, we can see that the algorithm discovers an input very close to f(0.0, 0.0) = 0.0.</p>
		<div id="urvanov-syntax-highlighter-6374e879751fe863019505" class="urvanov-syntax-highlighter-syntax crayon-theme-classic urvanov-syntax-highlighter-font-monaco urvanov-syntax-highlighter-os-pc print-yes notranslate" data-settings=" minimize scroll-mouseover disable-anim" style=" margin-top: 12px; margin-bottom: 12px; font-size: 12px !important; line-height: 15px !important;">
		
			<div class="crayon-toolbar" data-settings=" mouseover overlay hide delay" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><span class="crayon-title"></span>
			<div class="crayon-tools" style="font-size: 12px !important;height: 18px !important; line-height: 18px !important;"><div class="crayon-button urvanov-syntax-highlighter-nums-button" title="Toggle Line Numbers"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-plain-button" title="Toggle Plain Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-wrap-button" title="Toggle Line Wrap"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-expand-button" title="Expand Code"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-copy-button" title="Copy"><div class="urvanov-syntax-highlighter-button-icon"></div></div><div class="crayon-button urvanov-syntax-highlighter-popup-button" title="Open Code In New Window"><div class="urvanov-syntax-highlighter-button-icon"></div></div></div></div>
			<div class="crayon-info" style="min-height: 16.8px !important; line-height: 16.8px !important;"></div>
			<div class="urvanov-syntax-highlighter-plain-wrap"><textarea wrap="soft" class="urvanov-syntax-highlighter-plain print-no" data-settings="dblclick" readonly style="-moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4; font-size: 12px !important; line-height: 15px !important;">
&gt;0, new best f([-0.785064697265625, -0.807647705078125]) = 1.268621
&gt;0, new best f([0.385894775390625, 0.342864990234375]) = 0.266471
&gt;1, new best f([-0.342559814453125, -0.1068115234375]) = 0.128756
&gt;2, new best f([-0.038909912109375, 0.30242919921875]) = 0.092977
&gt;2, new best f([0.145721435546875, 0.1849365234375]) = 0.055436
&gt;3, new best f([0.14404296875, -0.029754638671875]) = 0.021634
&gt;5, new best f([0.066680908203125, 0.096435546875]) = 0.013746
&gt;5, new best f([-0.036468505859375, -0.10711669921875]) = 0.012804
&gt;6, new best f([-0.038909912109375, -0.099639892578125]) = 0.011442
&gt;7, new best f([-0.033111572265625, 0.09674072265625]) = 0.010455
&gt;7, new best f([-0.036468505859375, 0.05584716796875]) = 0.004449
&gt;10, new best f([0.058746337890625, 0.008087158203125]) = 0.003517
&gt;10, new best f([-0.031585693359375, 0.008087158203125]) = 0.001063
&gt;12, new best f([0.022125244140625, 0.008087158203125]) = 0.000555
&gt;13, new best f([0.022125244140625, 0.00701904296875]) = 0.000539
&gt;13, new best f([-0.013885498046875, 0.008087158203125]) = 0.000258
&gt;16, new best f([-0.011444091796875, 0.00518798828125]) = 0.000158
&gt;17, new best f([-0.0115966796875, 0.00091552734375]) = 0.000135
&gt;17, new best f([-0.004730224609375, 0.00335693359375]) = 0.000034
&gt;20, new best f([-0.004425048828125, 0.00274658203125]) = 0.000027
&gt;21, new best f([-0.002288818359375, 0.00091552734375]) = 0.000006
&gt;22, new best f([-0.001983642578125, 0.00091552734375]) = 0.000005
&gt;22, new best f([-0.001983642578125, 0.0006103515625]) = 0.000004
&gt;24, new best f([-0.001373291015625, 0.001068115234375]) = 0.000003
&gt;25, new best f([-0.001373291015625, 0.00091552734375]) = 0.000003
&gt;26, new best f([-0.001373291015625, 0.0006103515625]) = 0.000002
&gt;27, new best f([-0.001068115234375, 0.0006103515625]) = 0.000002
&gt;29, new best f([-0.000152587890625, 0.00091552734375]) = 0.000001
&gt;33, new best f([-0.0006103515625, 0.0]) = 0.000000
&gt;34, new best f([-0.000152587890625, 0.00030517578125]) = 0.000000
&gt;43, new best f([-0.00030517578125, 0.0]) = 0.000000
&gt;60, new best f([-0.000152587890625, 0.000152587890625]) = 0.000000
&gt;65, new best f([-0.000152587890625, 0.0]) = 0.000000
Done!
f([-0.000152587890625, 0.0]) = 0.000000</textarea></div>
			<div class="urvanov-syntax-highlighter-main" style="">
				<table class="crayon-table">
					<tr class="urvanov-syntax-highlighter-row">
				<td class="crayon-nums " data-settings="show">
					<div class="urvanov-syntax-highlighter-nums-content" style="font-size: 12px !important; line-height: 15px !important;"><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-1">1</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-2">2</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-3">3</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-4">4</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-5">5</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-6">6</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-7">7</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-8">8</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-9">9</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-10">10</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-11">11</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-12">12</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-13">13</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-14">14</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-15">15</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-16">16</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-17">17</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-18">18</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-19">19</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-20">20</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-21">21</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-22">22</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-23">23</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-24">24</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-25">25</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-26">26</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-27">27</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-28">28</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-29">29</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-30">30</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-31">31</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-32">32</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-33">33</div><div class="crayon-num crayon-striped-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-34">34</div><div class="crayon-num" data-line="urvanov-syntax-highlighter-6374e879751fe863019505-35">35</div></div>
				</td>
						<td class="urvanov-syntax-highlighter-code"><div class="crayon-pre" style="font-size: 12px !important; line-height: 15px !important; -moz-tab-size:4; -o-tab-size:4; -webkit-tab-size:4; tab-size:4;"><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-1">&gt;0, new best f([-0.785064697265625, -0.807647705078125]) = 1.268621</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-2">&gt;0, new best f([0.385894775390625, 0.342864990234375]) = 0.266471</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-3">&gt;1, new best f([-0.342559814453125, -0.1068115234375]) = 0.128756</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-4">&gt;2, new best f([-0.038909912109375, 0.30242919921875]) = 0.092977</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-5">&gt;2, new best f([0.145721435546875, 0.1849365234375]) = 0.055436</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-6">&gt;3, new best f([0.14404296875, -0.029754638671875]) = 0.021634</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-7">&gt;5, new best f([0.066680908203125, 0.096435546875]) = 0.013746</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-8">&gt;5, new best f([-0.036468505859375, -0.10711669921875]) = 0.012804</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-9">&gt;6, new best f([-0.038909912109375, -0.099639892578125]) = 0.011442</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-10">&gt;7, new best f([-0.033111572265625, 0.09674072265625]) = 0.010455</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-11">&gt;7, new best f([-0.036468505859375, 0.05584716796875]) = 0.004449</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-12">&gt;10, new best f([0.058746337890625, 0.008087158203125]) = 0.003517</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-13">&gt;10, new best f([-0.031585693359375, 0.008087158203125]) = 0.001063</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-14">&gt;12, new best f([0.022125244140625, 0.008087158203125]) = 0.000555</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-15">&gt;13, new best f([0.022125244140625, 0.00701904296875]) = 0.000539</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-16">&gt;13, new best f([-0.013885498046875, 0.008087158203125]) = 0.000258</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-17">&gt;16, new best f([-0.011444091796875, 0.00518798828125]) = 0.000158</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-18">&gt;17, new best f([-0.0115966796875, 0.00091552734375]) = 0.000135</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-19">&gt;17, new best f([-0.004730224609375, 0.00335693359375]) = 0.000034</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-20">&gt;20, new best f([-0.004425048828125, 0.00274658203125]) = 0.000027</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-21">&gt;21, new best f([-0.002288818359375, 0.00091552734375]) = 0.000006</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-22">&gt;22, new best f([-0.001983642578125, 0.00091552734375]) = 0.000005</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-23">&gt;22, new best f([-0.001983642578125, 0.0006103515625]) = 0.000004</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-24">&gt;24, new best f([-0.001373291015625, 0.001068115234375]) = 0.000003</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-25">&gt;25, new best f([-0.001373291015625, 0.00091552734375]) = 0.000003</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-26">&gt;26, new best f([-0.001373291015625, 0.0006103515625]) = 0.000002</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-27">&gt;27, new best f([-0.001068115234375, 0.0006103515625]) = 0.000002</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-28">&gt;29, new best f([-0.000152587890625, 0.00091552734375]) = 0.000001</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-29">&gt;33, new best f([-0.0006103515625, 0.0]) = 0.000000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-30">&gt;34, new best f([-0.000152587890625, 0.00030517578125]) = 0.000000</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-31">&gt;43, new best f([-0.00030517578125, 0.0]) = 0.000000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-32">&gt;60, new best f([-0.000152587890625, 0.000152587890625]) = 0.000000</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-33">&gt;65, new best f([-0.000152587890625, 0.0]) = 0.000000</div><div class="crayon-line crayon-striped-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-34">Done!</div><div class="crayon-line" id="urvanov-syntax-highlighter-6374e879751fe863019505-35">f([-0.000152587890625, 0.0]) = 0.000000</div></div></td>
					</tr>
				</table>
			</div>
		</div><p></p>
<h2>Further Reading</h2>
<p>This section provides more resources on the topic if you are looking to go deeper.</p>
<h3>Books</h3>
<ul>
<li><a href="https://amzn.to/3jADHgZ">Genetic Algorithms in Search, Optimization, and Machine Learning</a>, 1989.</li>
<li><a href="https://amzn.to/3kK8Osd">An Introduction to Genetic Algorithms</a>, 1998.</li>
<li><a href="https://amzn.to/2Traqek">Algorithms for Optimization</a>, 2019.</li>
<li><a href="https://amzn.to/2HxZVn4">Essentials of Metaheuristics</a>, 2011.</li>
<li><a href="https://amzn.to/2HzjbjV">Computational Intelligence: An Introduction</a>, 2007.</li>
</ul>
<h3>API</h3>
<ul>
<li><a href="https://numpy.org/doc/stable/reference/random/generated/numpy.random.randint.html">numpy.random.randint API</a>.</li>
</ul>
<h3>Articles</h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Genetic_algorithm">Genetic algorithm, Wikipedia</a>.</li>
<li><a href="http://www.scholarpedia.org/article/Genetic_algorithms">Genetic algorithms, Scholarpedia</a>.</li>
</ul>
<h2>Summary</h2>
<p>In this tutorial, you discovered the genetic algorithm optimization.</p>
<p>Specifically, you learned:</p>
<ul>
<li>Genetic algorithm is a stochastic optimization algorithm inspired by evolution.</li>
<li>How to implement the genetic algorithm from scratch in Python.</li>
<li>How to apply the genetic algorithm to a continuous objective function.</li>
</ul>
<p><strong>Do you have any questions?</strong><br />
Ask your questions in the comments below and I will do my best to answer.</p>
<div class="widget_text awac-wrapper" id="custom_html-96"><div class="widget_text awac widget custom_html-96"><div class="textwidget custom-html-widget"><div style="text-align: center;">
<div class="woo-sc-hr"></div>
<h2>Get a Handle on Modern Optimization Algorithms!</h2>
<a href="/optimization-for-machine-learning" rel="nofollow"><img width="220" height="293" style="border: 0;" src="/wp-content/uploads/2021/09/OptimizationForMachineLearning-220-1.png" alt="Optimization for Maching Learning" align="left" /></a>

<h4>Develop Your Understanding of Optimization</h4>
<p>...with just a few lines of python code</p>

<p>Discover how in my new Ebook:<br>
	<a href="/optimization-for-machine-learning" rel="nofollow">Optimization for Machine Learning</a></p>

<p>It provides <strong>self-study tutorials</strong> with <strong>full working code</strong> on:<br>
	<em>Gradient Descent</em>, <em>Genetic Algorithms</em>, <em>Hill Climbing</em>, <em>Curve Fitting</em>, <em>RMSProp</em>, <em>Adam</em>, 
	and much more...</p>

<h4>Bring Modern Optimization Algorithms to <br>Your Machine Learning Projects</h4>
<br>
<p><a href="/optimization-for-machine-learning/" class="woo-sc-button  red" ><span class="woo-">See What's Inside</span></a></p>

<div class="woo-sc-hr"></div>

</div></div></div></div></p><div class="simplesocialbuttons simplesocial-simple-icons simplesocialbuttons_inline simplesocialbuttons-align-left post-11849 post  simplesocialbuttons-inline-no-animation">
<button class="ssb_tweet-icon" data-href="https://twitter.com/share?text=Simple+Genetic+Algorithm+From+Scratch+in+Python&url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path fill="none" d="M0 0h72v72H0z"/><path class="icon" fill="#fff" d="M68.812 15.14c-2.348 1.04-4.87 1.744-7.52 2.06 2.704-1.62 4.78-4.186 5.757-7.243-2.53 1.5-5.33 2.592-8.314 3.176C56.35 10.59 52.948 9 49.182 9c-7.23 0-13.092 5.86-13.092 13.093 0 1.026.118 2.02.338 2.98C25.543 24.527 15.9 19.318 9.44 11.396c-1.125 1.936-1.77 4.184-1.77 6.58 0 4.543 2.312 8.552 5.824 10.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163 0 6.345 4.513 11.638 10.504 12.84-1.1.298-2.256.457-3.45.457-.845 0-1.666-.078-2.464-.23 1.667 5.2 6.5 8.985 12.23 9.09-4.482 3.51-10.13 5.605-16.26 5.605-1.055 0-2.096-.06-3.122-.184 5.794 3.717 12.676 5.882 20.067 5.882 24.083 0 37.25-19.95 37.25-37.25 0-.565-.013-1.133-.038-1.693 2.558-1.847 4.778-4.15 6.532-6.774z"/></svg></span><i class="simplesocialtxt">Tweet </i></button>
<button class="ssb_tweet-icon" data-href="https://twitter.com/share?text=Simple+Genetic+Algorithm+From+Scratch+in+Python&url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" rel="nofollow" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 72 72"><path fill="none" d="M0 0h72v72H0z"/><path class="icon" fill="#fff" d="M68.812 15.14c-2.348 1.04-4.87 1.744-7.52 2.06 2.704-1.62 4.78-4.186 5.757-7.243-2.53 1.5-5.33 2.592-8.314 3.176C56.35 10.59 52.948 9 49.182 9c-7.23 0-13.092 5.86-13.092 13.093 0 1.026.118 2.02.338 2.98C25.543 24.527 15.9 19.318 9.44 11.396c-1.125 1.936-1.77 4.184-1.77 6.58 0 4.543 2.312 8.552 5.824 10.9-2.146-.07-4.165-.658-5.93-1.64-.002.056-.002.11-.002.163 0 6.345 4.513 11.638 10.504 12.84-1.1.298-2.256.457-3.45.457-.845 0-1.666-.078-2.464-.23 1.667 5.2 6.5 8.985 12.23 9.09-4.482 3.51-10.13 5.605-16.26 5.605-1.055 0-2.096-.06-3.122-.184 5.794 3.717 12.676 5.882 20.067 5.882 24.083 0 37.25-19.95 37.25-37.25 0-.565-.013-1.133-.038-1.693 2.558-1.847 4.778-4.15 6.532-6.774z"/></svg></span><i class="simplesocialtxt">Tweet </i></button>		<button class="ssb_fbshare-icon" target="_blank" data-href="https://www.facebook.com/sharer/sharer.php?u=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"><svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" class="_1pbq" color="#ffffff"><path fill="#ffffff" fill-rule="evenodd" class="icon" d="M8 14H3.667C2.733 13.9 2 13.167 2 12.233V3.667A1.65 1.65 0 0 1 3.667 2h8.666A1.65 1.65 0 0 1 14 3.667v8.566c0 .934-.733 1.667-1.667 1.767H10v-3.967h1.3l.7-2.066h-2V6.933c0-.466.167-.9.867-.9H12v-1.8c.033 0-.933-.266-1.533-.266-1.267 0-2.434.7-2.467 2.133v1.867H6v2.066h2V14z"></path></svg></span>
						<span class="simplesocialtxt">Share </span> </button>
<button class="ssb_linkedin-icon" data-href="https://www.linkedin.com/sharing/share-offsite/?url=https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" onclick="if (!window.__cfRLUnblockHandlers) return false; javascript:window.open(this.dataset.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;" data-cf-modified-e6851de2356a2aa710417145-="">
						<span class="icon"> <svg version="1.1" id="Layer_1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px" width="15px" height="14.1px" viewBox="-301.4 387.5 15 14.1" enable-background="new -301.4 387.5 15 14.1" xml:space="preserve"> <g id="XMLID_398_"> <path id="XMLID_399_" fill="#FFFFFF" d="M-296.2,401.6c0-3.2,0-6.3,0-9.5h0.1c1,0,2,0,2.9,0c0.1,0,0.1,0,0.1,0.1c0,0.4,0,0.8,0,1.2 c0.1-0.1,0.2-0.3,0.3-0.4c0.5-0.7,1.2-1,2.1-1.1c0.8-0.1,1.5,0,2.2,0.3c0.7,0.4,1.2,0.8,1.5,1.4c0.4,0.8,0.6,1.7,0.6,2.5 c0,1.8,0,3.6,0,5.4v0.1c-1.1,0-2.1,0-3.2,0c0-0.1,0-0.1,0-0.2c0-1.6,0-3.2,0-4.8c0-0.4,0-0.8-0.2-1.2c-0.2-0.7-0.8-1-1.6-1 c-0.8,0.1-1.3,0.5-1.6,1.2c-0.1,0.2-0.1,0.5-0.1,0.8c0,1.7,0,3.4,0,5.1c0,0.2,0,0.2-0.2,0.2c-1,0-1.9,0-2.9,0 C-296.1,401.6-296.2,401.6-296.2,401.6z"/> <path id="XMLID_400_" fill="#FFFFFF" d="M-298,401.6L-298,401.6c-1.1,0-2.1,0-3,0c-0.1,0-0.1,0-0.1-0.1c0-3.1,0-6.1,0-9.2 c0-0.1,0-0.1,0.1-0.1c1,0,2,0,2.9,0h0.1C-298,395.3-298,398.5-298,401.6z"/> <path id="XMLID_401_" fill="#FFFFFF" d="M-299.6,390.9c-0.7-0.1-1.2-0.3-1.6-0.8c-0.5-0.8-0.2-2.1,1-2.4c0.6-0.2,1.2-0.1,1.8,0.2 c0.5,0.4,0.7,0.9,0.6,1.5c-0.1,0.7-0.5,1.1-1.1,1.3C-299.1,390.8-299.4,390.8-299.6,390.9L-299.6,390.9z"/> </g> </svg> </span>
						<span class="simplesocialtxt">Share</span> </button>
</div>
<div class="crp_related  "><h3>More On This Topic</h3><ul><li><a href="https://machinelearningmastery.com/books-on-genetic-programming/"     class="crp_link post-11900"><figure><img loading="lazy"  width="99" height="150"  src="https://machinelearningmastery.com/wp-content/uploads/2020/11/Foundations-of-Genetic-Programming.jpeg" class="crp_thumb crp_featured" alt="Books on Genetic Programming" title="Books on Genetic Programming" srcset="https://machinelearningmastery.com/wp-content/uploads/2020/11/Foundations-of-Genetic-Programming.jpeg 256w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Foundations-of-Genetic-Programming-198x300.jpeg 198w" sizes="(max-width: 99px) 100vw, 99px" srcset="https://machinelearningmastery.com/wp-content/uploads/2020/11/Foundations-of-Genetic-Programming.jpeg 256w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Foundations-of-Genetic-Programming-198x300.jpeg 198w" /></figure><span class="crp_title">Books on Genetic Programming</span></a></li><li><a href="https://machinelearningmastery.com/use-classification-machine-learning-algorithms-weka/"     class="crp_link post-2788"><figure><img loading="lazy"  width="150" height="119"  src="https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree.png" class="crp_thumb crp_featured" alt="How To Use Classification Machine Learning Algorithms in Weka" title="How To Use Classification Machine Learning Algorithms in Weka" srcset="https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree.png 500w, https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree-300x238.png 300w" sizes="(max-width: 150px) 100vw, 150px" srcset="https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree.png 500w, https://machinelearningmastery.com/wp-content/uploads/2016/06/Weka-Visualization-of-a-Decision-Tree-300x238.png 300w" /></figure><span class="crp_title">How To Use Classification Machine Learning&hellip;</span></a></li><li><a href="https://machinelearningmastery.com/differential-evolution-global-optimization-with-python/"     class="crp_link post-11840"><figure><img loading="lazy"  width="150" height="100"  src="https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python.jpg" class="crp_thumb crp_featured" alt="Differential Evolution Global Optimization With Python" title="Differential Evolution Global Optimization With Python" srcset="https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python.jpg 799w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python-300x200.jpg 300w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python-768x512.jpg 768w" sizes="(max-width: 150px) 100vw, 150px" srcset="https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python.jpg 799w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python-300x200.jpg 300w, https://machinelearningmastery.com/wp-content/uploads/2021/03/Differential-Evolution-Global-Optimization-With-Python-768x512.jpg 768w" /></figure><span class="crp_title">Differential Evolution Global Optimization With Python</span></a></li><li><a href="https://machinelearningmastery.com/techniques-to-understand-machine-learning-algorithms-without-the-background-in-mathematics/"     class="crp_link post-2009"><figure><img loading="lazy"  width="150" height="84"  src="https://machinelearningmastery.com/wp-content/uploads/2015/08/Machine-Learning-Theory.jpg" class="crp_thumb crp_featured" alt="5 Ways To Understand Machine Learning Algorithms (without math)" title="5 Ways To Understand Machine Learning Algorithms (without math)" srcset="https://machinelearningmastery.com/wp-content/uploads/2015/08/Machine-Learning-Theory.jpg 640w, https://machinelearningmastery.com/wp-content/uploads/2015/08/Machine-Learning-Theory-300x169.jpg 300w" sizes="(max-width: 150px) 100vw, 150px" srcset="https://machinelearningmastery.com/wp-content/uploads/2015/08/Machine-Learning-Theory.jpg 640w, https://machinelearningmastery.com/wp-content/uploads/2015/08/Machine-Learning-Theory-300x169.jpg 300w" /></figure><span class="crp_title">5 Ways To Understand Machine Learning Algorithms&hellip;</span></a></li><li><a href="https://machinelearningmastery.com/why-optimization-is-important-in-machine-learning/"     class="crp_link post-11714"><figure><img loading="lazy"  width="150" height="100"  src="https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning.jpg" class="crp_thumb crp_featured" alt="Why Optimization Is Important in Machine Learning" title="Why Optimization Is Important in Machine Learning" srcset="https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning.jpg 799w, https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning-300x200.jpg 300w, https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning-768x512.jpg 768w" sizes="(max-width: 150px) 100vw, 150px" srcset="https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning.jpg 799w, https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning-300x200.jpg 300w, https://machinelearningmastery.com/wp-content/uploads/2021/02/Why-Optimization-Is-Important-in-Machine-Learning-768x512.jpg 768w" /></figure><span class="crp_title">Why Optimization Is Important in Machine Learning</span></a></li><li><a href="https://machinelearningmastery.com/simulated-annealing-from-scratch-in-python/"     class="crp_link post-11806"><figure><img loading="lazy"  width="150" height="113"  src="https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing.png" class="crp_thumb crp_featured" alt="Simulated Annealing From Scratch in Python" title="Simulated Annealing From Scratch in Python" srcset="https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing.png 1280w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-300x225.png 300w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-1024x768.png 1024w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-768x576.png 768w" sizes="(max-width: 150px) 100vw, 150px" srcset="https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing.png 1280w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-300x225.png 300w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-1024x768.png 1024w, https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-768x576.png 768w" /></figure><span class="crp_title">Simulated Annealing From Scratch in Python</span></a></li></ul><div class="crp_clear"></div></div>	</section><!-- /.entry -->
	<div class="fix"></div>
	<aside id="post-author">
	<div class="profile-image"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=160&#038;d=mm&#038;r=g 2x' class='avatar avatar-80 photo' height='80' width='80' loading='lazy' decoding='async'/></div>
	<div class="profile-content">
		<h4>About Jason Brownlee</h4>
		Jason Brownlee, PhD is a machine learning specialist who teaches developers how to get results with modern machine learning methods via hands-on tutorials.				<div class="profile-link">
			<a href="https://machinelearningmastery.com/author/jasonb/">
				View all posts by Jason Brownlee <span class="meta-nav">&rarr;</span>			</a>
		</div><!--#profile-link-->
			</div>
	<div class="fix"></div>
</aside>
<div class="post-utility"></div>
</article><!-- /.post -->
	        <div class="post-entries">
	            <div class="nav-prev fl"><a href="https://machinelearningmastery.com/differential-evolution-global-optimization-with-python/" rel="prev"><i class="fa fa-angle-left"></i> Differential Evolution Global Optimization With Python</a></div>
	            <div class="nav-next fr"><a href="https://machinelearningmastery.com/update-neural-network-models-with-more-data/" rel="next">How to Update Neural Network Models With More Data <i class="fa fa-angle-right"></i></a></div>
	            <div class="fix"></div>
	        </div>

		<div id="comments">		 	<h3 id="comments-title">105 Responses to <em>Simple Genetic Algorithm From Scratch in Python</em></h3>
		 	<ol class="commentlist">
				
		<li id="comment-599812" class="comment even thread-even depth-1">

	      	<div id="li-comment-599812" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/eeded636ad1065c9a43c9f64163419ea?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/eeded636ad1065c9a43c9f64163419ea?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Satish Chhatpar</span>
	                <span class="date">March 4, 2021 at 2:33 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599812" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I did not understand above algorithm. Its complex</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599812' data-commentid="599812" data-postid="11849" data-belowelement="comment-599812" data-respondelement="respond" data-replyto="Reply to Satish Chhatpar" aria-label='Reply to Satish Chhatpar'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-599835" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-599835" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 4, 2021 at 5:51 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599835" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Sorry to hear that.</p>
<p>Which part was confusing?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599835' data-commentid="599835" data-postid="11849" data-belowelement="comment-599835" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-602685" class="comment even depth-3">

	      	<div id="li-comment-602685" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/940a22ae3ae48f5daedade4a9e435bd2?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/940a22ae3ae48f5daedade4a9e435bd2?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Naadiya</span>
	                <span class="date">March 30, 2021 at 7:24 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-602685" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I got all the idea of how it works but i have a querry can you please tell me which problem you are trying to solve?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-602685' data-commentid="602685" data-postid="11849" data-belowelement="comment-602685" data-respondelement="respond" data-replyto="Reply to Naadiya" aria-label='Reply to Naadiya'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-602744" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-4">

	      	<div id="li-comment-602744" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 31, 2021 at 6:00 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-602744" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>We are solving two different optimization problems as described in the tutorial.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-602744' data-commentid="602744" data-postid="11849" data-belowelement="comment-602744" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-611214" class="comment even depth-3">

	      	<div id="li-comment-611214" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/aea3b3015f240d3d742af418ef32b946?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/aea3b3015f240d3d742af418ef32b946?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599848' rel='external nofollow ugc' class='url'>Mohammed Faizan</a></span>
	                <span class="date">May 27, 2021 at 12:35 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-611214" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Sir can i use these code for my final year project because my team is working on genetic algorithm.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-611214' data-commentid="611214" data-postid="11849" data-belowelement="comment-611214" data-respondelement="respond" data-replyto="Reply to Mohammed Faizan" aria-label='Reply to Mohammed Faizan'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-611280" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-4">

	      	<div id="li-comment-611280" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 27, 2021 at 5:39 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-611280" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>This is a common request that I answer here:<br />
<a href="https://machinelearningmastery.com/faq/single-faq/can-i-use-your-code-in-my-own-project" rel="nofollow ugc">https://machinelearningmastery.com/faq/single-faq/can-i-use-your-code-in-my-own-project</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-611280' data-commentid="611280" data-postid="11849" data-belowelement="comment-611280" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-680914" class="comment even depth-2">

	      	<div id="li-comment-680914" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/e21439f5dd81a374f892e6e506ab7585?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/e21439f5dd81a374f892e6e506ab7585?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Ahmad Qadeib Alban</span>
	                <span class="date">August 14, 2022 at 4:44 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-680914" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I believe you have to pass number through the code step by step then you can get it.<br />
that works for me 🙂</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-680914' data-commentid="680914" data-postid="11849" data-belowelement="comment-680914" data-respondelement="respond" data-replyto="Reply to Ahmad Qadeib Alban" aria-label='Reply to Ahmad Qadeib Alban'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-599848" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-599848" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/0616c26cf7cb4ec62b514f384416bd58?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/0616c26cf7cb4ec62b514f384416bd58?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Wilfredo Yeguez</span>
	                <span class="date">March 4, 2021 at 9:06 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599848" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks Jason! You gave me a good push.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599848' data-commentid="599848" data-postid="11849" data-belowelement="comment-599848" data-respondelement="respond" data-replyto="Reply to Wilfredo Yeguez" aria-label='Reply to Wilfredo Yeguez'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-599859" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-599859" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 4, 2021 at 1:08 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599859" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599859' data-commentid="599859" data-postid="11849" data-belowelement="comment-599859" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-599917" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-599917" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4f7f365db7edccc164234c02338230e4?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4f7f365db7edccc164234c02338230e4?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Ankita</span>
	                <span class="date">March 5, 2021 at 4:23 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599917" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thankyou so much. Very helpful content for me as i am doing Ph.D in Genetic Algorithm. Could you please help me more. I need some help in further implementation. Mail me as soon as possible.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599917' data-commentid="599917" data-postid="11849" data-belowelement="comment-599917" data-respondelement="respond" data-replyto="Reply to Ankita" aria-label='Reply to Ankita'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-599936" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-599936" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 5, 2021 at 5:35 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599936" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I don&#8217;t have the capacity to help you with your research project, sorry.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599936' data-commentid="599936" data-postid="11849" data-belowelement="comment-599936" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-626736" class="comment odd alt depth-2">

	      	<div id="li-comment-626736" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/cf63d525f4833e423311910d0f8cd78c?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/cf63d525f4833e423311910d0f8cd78c?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Satya</span>
	                <span class="date">September 14, 2021 at 5:42 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-626736" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hii, I&#8217;m doing master&#8217;s Thesis in the combination of Genetic algorithm with dynamic programming of solving travelling salesman problem.<br />
I have doubts regarding implemenation part. THe reason why i&#8217;m asking for you is doing you Ph.D<br />
I hope you will help me<br />
thank you</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-626736' data-commentid="626736" data-postid="11849" data-belowelement="comment-626736" data-respondelement="respond" data-replyto="Reply to Satya" aria-label='Reply to Satya'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-599946" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-599946" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/08f13918a3d83df1b4327dc1fea587eb?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/08f13918a3d83df1b4327dc1fea587eb?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Peter</span>
	                <span class="date">March 5, 2021 at 7:41 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599946" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Awesome article, quite large though excellent example to learn from. Thank you</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599946' data-commentid="599946" data-postid="11849" data-belowelement="comment-599946" data-respondelement="respond" data-replyto="Reply to Peter" aria-label='Reply to Peter'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-599952" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-599952" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 5, 2021 at 8:16 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599952" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599952' data-commentid="599952" data-postid="11849" data-belowelement="comment-599952" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-649022" class="comment even depth-3">

	      	<div id="li-comment-649022" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Indira X</span>
	                <span class="date">January 1, 2022 at 7:50 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-649022" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,<br />
Thanks for sharing your knowledge and code. I used it and it worked very well.<br />
I have one question: How do you know it&#8217;s a global optimum solutution?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-649022' data-commentid="649022" data-postid="11849" data-belowelement="comment-649022" data-respondelement="respond" data-replyto="Reply to Indira X" aria-label='Reply to Indira X'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-649139" class="comment byuser comment-author-jamespcarmichael odd alt depth-4">

	      	<div id="li-comment-649139" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">January 2, 2022 at 9:04 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-649139" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Indira,</p>
<p>What code in particular did you use?  Keep in mind that for some of the simple examples presented, we already knew the global optimum solution.</p>
<p>Regards,</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-649139' data-commentid="649139" data-postid="11849" data-belowelement="comment-649139" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-649405" class="comment even depth-5">

	      	<div id="li-comment-649405" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Indira X</span>
	                <span class="date">January 3, 2022 at 2:42 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-649405" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>I used the code in the last example of this post but I changed it to multi-objective.<br />
               Obj1=abs(x[0]*a0 + x[1]*a1 + x[2]*a2 &#8211; a_target)**2<br />
                Obj2=abs(x[0] + x[1] + x[2])<br />
I have also some constraints for x.<br />
As I said, the code works fine and the solutions are really reasonable. However, I want to know if I can prove somehow this is the global optima, or even a local optima.</p>

				
	                <div class="reply">
	                    	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-599970" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-599970" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/521c63ff598183542c747d7105d19e3f?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/521c63ff598183542c747d7105d19e3f?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">John Lee</span>
	                <span class="date">March 5, 2021 at 12:58 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599970" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Awesome lesson. Thanks!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599970' data-commentid="599970" data-postid="11849" data-belowelement="comment-599970" data-respondelement="respond" data-replyto="Reply to John Lee" aria-label='Reply to John Lee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-599979" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-599979" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 5, 2021 at 1:39 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-599979" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-599979' data-commentid="599979" data-postid="11849" data-belowelement="comment-599979" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-600003" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-600003" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/b6dada7800d042e82160b06eac707599?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/b6dada7800d042e82160b06eac707599?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/' rel='external nofollow ugc' class='url'>huibin fu</a></span>
	                <span class="date">March 5, 2021 at 6:31 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600003" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>can i copy the code to my Python? because I want to practice it</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600003' data-commentid="600003" data-postid="11849" data-belowelement="comment-600003" data-respondelement="respond" data-replyto="Reply to huibin fu" aria-label='Reply to huibin fu'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-600047" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-600047" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 6, 2021 at 5:14 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600047" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Yes.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600047' data-commentid="600047" data-postid="11849" data-belowelement="comment-600047" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-600017" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-600017" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/195ab23a775d669051fd3b730b6888fa?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/195ab23a775d669051fd3b730b6888fa?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mojtaba</span>
	                <span class="date">March 5, 2021 at 9:46 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600017" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi dear Jason.<br />
Thanks for this helpful tutorial.<br />
May you give a tutorial on feature selection using genetic algorithms?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600017' data-commentid="600017" data-postid="11849" data-belowelement="comment-600017" data-respondelement="respond" data-replyto="Reply to Mojtaba" aria-label='Reply to Mojtaba'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-600053" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-600053" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 6, 2021 at 5:17 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600053" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome!</p>
<p>Thanks for the suggestion!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600053' data-commentid="600053" data-postid="11849" data-belowelement="comment-600053" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-600750" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-600750" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/5bd87b71454b723cdfad8a7eddd73f9f?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/5bd87b71454b723cdfad8a7eddd73f9f?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Paul Winter</span>
	                <span class="date">March 13, 2021 at 8:03 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600750" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, thanks for the great tutorial. I enjoyed reading and typing the code is step by step to really follow along  and understand it.</p>
<p> I modified my genetic_algorithm to also have a decode and bounds input  parameter to be able to reuse for both examples. I added a decode for oneup that just teturns the input value, and changed your decode so that  the bitstring can be decoded into multiple params of same no of bits.</p>
<p>Hopefully thats the right direction for reuse.</p>
<p>I did spot a bug in decode. largest sholuld be (2**n_bits) -1</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600750' data-commentid="600750" data-postid="11849" data-belowelement="comment-600750" data-respondelement="respond" data-replyto="Reply to Paul Winter" aria-label='Reply to Paul Winter'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-600809" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-600809" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 14, 2021 at 5:21 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-600809" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome!</p>
<p>Well done!</p>
<p>Noted.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-600809' data-commentid="600809" data-postid="11849" data-belowelement="comment-600809" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-601245" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-601245" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/ef54e8d2bf13e6836bd818f925de8713?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/ef54e8d2bf13e6836bd818f925de8713?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Junaid Zaheer</span>
	                <span class="date">March 18, 2021 at 4:18 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-601245" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi dear very much difficult to understand such an important topic like genetic algorithm..Any how lots of thank yous to have some light on it..</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-601245' data-commentid="601245" data-postid="11849" data-belowelement="comment-601245" data-respondelement="respond" data-replyto="Reply to Junaid Zaheer" aria-label='Reply to Junaid Zaheer'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-601264" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-601264" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 18, 2021 at 5:24 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-601264" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-601264' data-commentid="601264" data-postid="11849" data-belowelement="comment-601264" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-601839" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-601839" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/e0cf5a119dd8e5339ec95f02ab01bb62?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/e0cf5a119dd8e5339ec95f02ab01bb62?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Arnav Das</span>
	                <span class="date">March 24, 2021 at 6:03 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-601839" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>super cool article jason sir, and really really appreciate for putting everything in code, will help us all a lot in experimenting here and there.</p>
<p>was just wondering something about these algorithms, would be it fair to say as loss functions are to gradient descent do objective functions also serve the same purpose for genetic algorithms ?</p>
<p>And compared to genetic algorithms aren&#8217;t gradient descent algorithm more objective based, I mean they are solely guided to find the best spot to stop while genetic algorithms more or less rely more on mutations and crossover to reach the same.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-601839' data-commentid="601839" data-postid="11849" data-belowelement="comment-601839" data-respondelement="respond" data-replyto="Reply to Arnav Das" aria-label='Reply to Arnav Das'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-601916" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-601916" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 25, 2021 at 4:34 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-601916" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks!</p>
<p>Yes, sure. Loss function is an objective function for the gradient descent optimizaiton algorithm.</p>
<p>No, they are just different algorithms. GD uses more information (e.g. derivatives) whereas GAs do not.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-601916' data-commentid="601916" data-postid="11849" data-belowelement="comment-601916" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-602750" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-602750" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/38fad5c19b9f971dbd2b25b324bda3f8?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/38fad5c19b9f971dbd2b25b324bda3f8?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='https://acehl.org/' rel='external nofollow ugc' class='url'>JG</a></span>
	                <span class="date">March 31, 2021 at 6:03 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-602750" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,</p>
<p>A great code and introduction to Genetic Algorithms (GA), as a beautiful alternative to Artificial Neural Networks (ANN). Congrats for this post!.</p>
<p>I am pleasantly surprised about how GA get quick convergence to the minimum quadratic function !.</p>
<p>In my opinion the main differences between ANN vs GA are:</p>
<p>with ANN we &#8220;map&#8221; output vs input with a dataset and a neural model that learn the weights vs GA which solving a &#8220;min/max&#8221; optimum problem, via &#8220;Artificial Gene Selection&#8221;. That is, coding &#8220;genes&#8221; problems in bits  &gt; initiating a population &gt; selecting parents via an objective function that evaluated better adaptation to the target &gt; performing Crossover genes &gt; mutation genes &gt; replacing parent population for children population every generation.<br />
So the key issue is coding the problems variables in bits, to be able to apply crossover and bits mutation methods, plus selecting parents via the better objetive performance. </p>
<p>&#8211; I intuit some &#8220;probabilistic&#8221; convergence pillars  supporting this &#8220;Artificial Selection&#8221; (or GA) for optimum issues solving vs some SGD and backpropagation methodology (minimum error) as pillars  supporting ANN.  </p>
<p>I experiment with other objetive functions such cubic functions, etc. and in all of them the code performing pretty well founded the minimum value very quickly.</p>
<p>My only concern in terms of &#8220;artificial selection&#8221; methodology is, of course at least one individual member of the population, get very quickly the minimum searched, but the rest of population (even changing mutation and crossover rate) remain outside this optimum &#8220;gene&#8221; value, even if I play with different population number, number of generations, mutation and crossover rates, etc&#8230; </p>
<p>so  finally we are not able to evolve completely the old population into a &#8220;new specie&#8221; population, at leat with this chunk of algorithm, but nature can evolve naturally producing new species from old ones  :-))</p>
<p>Thank you for inspiring all of this beautiful issues!<br />
Regards</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-602750' data-commentid="602750" data-postid="11849" data-belowelement="comment-602750" data-respondelement="respond" data-replyto="Reply to JG" aria-label='Reply to JG'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-602760" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-602760" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">March 31, 2021 at 6:09 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-602760" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks!</p>
<p>Yes, I like to think of it as two techniques for solving very different problem types: &#8220;function approximation&#8221; vs &#8220;function optimization&#8221;.</p>
<p>Be careful, tuning GAs can be addictive 🙂</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-602760' data-commentid="602760" data-postid="11849" data-belowelement="comment-602760" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-603183" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-603183" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/bbc7650956177f5bd997d1ef771adb7d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/bbc7650956177f5bd997d1ef771adb7d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Yessense</span>
	                <span class="date">April 2, 2021 at 10:16 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-603183" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>There is an error in 63th string:<br />
&gt;&gt; best, best_eval = 0, objective(pop[0])<br />
Should be:</p>
<p>best, best_eval = 0, objective(decode(bounds, n_bits, pop[0])</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-603183' data-commentid="603183" data-postid="11849" data-belowelement="comment-603183" data-respondelement="respond" data-replyto="Reply to Yessense" aria-label='Reply to Yessense'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-603237" class="comment byuser comment-author-jasonb bypostauthor even depth-2">

	      	<div id="li-comment-603237" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">April 3, 2021 at 5:32 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-603237" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Agreed!</p>
<p>Thanks, fixed.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-603237' data-commentid="603237" data-postid="11849" data-belowelement="comment-603237" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-610683" class="comment odd alt depth-2">

	      	<div id="li-comment-610683" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/881301ff8ecdc80422b890e41216c470?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/881301ff8ecdc80422b890e41216c470?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Chris</span>
	                <span class="date">May 24, 2021 at 9:15 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-610683" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>&#8230;and on line 63 a missing parenthesis at the end.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-610683' data-commentid="610683" data-postid="11849" data-belowelement="comment-610683" data-respondelement="respond" data-replyto="Reply to Chris" aria-label='Reply to Chris'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-605829" class="comment even thread-even depth-1">

	      	<div id="li-comment-605829" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/49fd2338aceab56bed7b267fa89d5525?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/49fd2338aceab56bed7b267fa89d5525?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Libo</span>
	                <span class="date">April 18, 2021 at 2:37 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-605829" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, Very nice tutorial like all your other tutorials. I have a question, for each new generation, isn&#8217;t that we should keep all parents from last generation, plus the current children generation, sorted them according to the scores, keep the top max or min scores? The reason is because that some of the parents are better than child, therefore we want to keep the top performers? Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-605829' data-commentid="605829" data-postid="11849" data-belowelement="comment-605829" data-respondelement="respond" data-replyto="Reply to Libo" aria-label='Reply to Libo'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-605990" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-605990" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">April 19, 2021 at 5:48 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-605990" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks!</p>
<p>There are many modifications of the algorithm you can make, including keeping the best parents from the previous generation. This is called elitism.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-605990' data-commentid="605990" data-postid="11849" data-belowelement="comment-605990" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-606213" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-606213" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/1dc3ed8d1ff51ea7120e11c12d182c17?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/1dc3ed8d1ff51ea7120e11c12d182c17?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mark</span>
	                <span class="date">April 20, 2021 at 7:07 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-606213" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason, can you please make a similar tutorial about Genetic programming, or you can just tell me where the algorithm will have to change to be a genetic programming algorithm not GA</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-606213' data-commentid="606213" data-postid="11849" data-belowelement="comment-606213" data-respondelement="respond" data-replyto="Reply to Mark" aria-label='Reply to Mark'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-606261" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-606261" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">April 21, 2021 at 5:54 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-606261" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks for the suggestion.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-606261' data-commentid="606261" data-postid="11849" data-belowelement="comment-606261" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-607149" class="comment even thread-even depth-1">

	      	<div id="li-comment-607149" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/25aa3305df7d0f0dfb225db6e64669bc?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/25aa3305df7d0f0dfb225db6e64669bc?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mohamed</span>
	                <span class="date">April 27, 2021 at 9:57 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-607149" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi, in line 52 at onmax objective function:<br />
should it be like:</p>
<p>if score[i] &gt; best_eval:<br />
best, best_eval = pop[i], scores[i]</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-607149' data-commentid="607149" data-postid="11849" data-belowelement="comment-607149" data-respondelement="respond" data-replyto="Reply to Mohamed" aria-label='Reply to Mohamed'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-607245" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-607245" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">April 28, 2021 at 5:57 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-607245" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>We have inverted the one max objective function to make it minimizing.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-607245' data-commentid="607245" data-postid="11849" data-belowelement="comment-607245" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-607681" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-607681" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/cdbcea9c4b54ebbd5c124713a663f464?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/cdbcea9c4b54ebbd5c124713a663f464?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Oliver</span>
	                <span class="date">May 1, 2021 at 10:25 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-607681" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks jason, I&#8217;ve been a long time reader here and I think I&#8217;m using your textbook on GA for a class project?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-607681' data-commentid="607681" data-postid="11849" data-belowelement="comment-607681" data-respondelement="respond" data-replyto="Reply to Oliver" aria-label='Reply to Oliver'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-607718" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-607718" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 2, 2021 at 5:33 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-607718" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Sure, this will help:<br />
<a href="https://machinelearningmastery.com/faq/single-faq/can-i-use-your-code-in-my-own-project" rel="nofollow ugc">https://machinelearningmastery.com/faq/single-faq/can-i-use-your-code-in-my-own-project</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-607718' data-commentid="607718" data-postid="11849" data-belowelement="comment-607718" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-607983" class="comment even thread-even depth-1">

	      	<div id="li-comment-607983" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d898fc1ea8f5c45b0fda6c720f3351df?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d898fc1ea8f5c45b0fda6c720f3351df?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">john</span>
	                <span class="date">May 4, 2021 at 12:37 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-607983" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>hello,, i have syntax error here why?</p>
<p> for gen in range(n_iter):<br />
                            ^<br />
SyntaxError: invalid syntax</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-607983' data-commentid="607983" data-postid="11849" data-belowelement="comment-607983" data-respondelement="respond" data-replyto="Reply to john" aria-label='Reply to john'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-608058" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-608058" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 5, 2021 at 6:06 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608058" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Sorry to hear that, perhaps some of these tips will help:<br />
<a href="https://machinelearningmastery.com/faq/single-faq/why-does-the-code-in-the-tutorial-not-work-for-me" rel="nofollow ugc">https://machinelearningmastery.com/faq/single-faq/why-does-the-code-in-the-tutorial-not-work-for-me</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608058' data-commentid="608058" data-postid="11849" data-belowelement="comment-608058" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-608302" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-608302" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/eaaaf6d37afd3ce2f05fd925effc9303?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/eaaaf6d37afd3ce2f05fd925effc9303?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Hamada</span>
	                <span class="date">May 7, 2021 at 8:55 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608302" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>What is the basis for selecting the values of cross_over and mutation rates ?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608302' data-commentid="608302" data-postid="11849" data-belowelement="comment-608302" data-respondelement="respond" data-replyto="Reply to Hamada" aria-label='Reply to Hamada'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-608388" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-608388" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 8, 2021 at 6:28 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608388" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Trial and error, or using values that have historically worked well on other problems.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608388' data-commentid="608388" data-postid="11849" data-belowelement="comment-608388" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-608475" class="comment even thread-even depth-1">

	      	<div id="li-comment-608475" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d898fc1ea8f5c45b0fda6c720f3351df?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d898fc1ea8f5c45b0fda6c720f3351df?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">john</span>
	                <span class="date">May 8, 2021 at 11:10 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608475" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>what is the rastrigins function in python?<br />
how i cam implement it in python</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608475' data-commentid="608475" data-postid="11849" data-belowelement="comment-608475" data-respondelement="respond" data-replyto="Reply to john" aria-label='Reply to john'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-608511" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-608511" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 9, 2021 at 5:56 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608511" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Sorry, I don&#8217;t think I have an example.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608511' data-commentid="608511" data-postid="11849" data-belowelement="comment-608511" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-608488" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-608488" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/6459f817d34b18c684b48894fb4822a5?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/6459f817d34b18c684b48894fb4822a5?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">agelos</span>
	                <span class="date">May 9, 2021 at 2:31 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608488" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>File &#8220;&#8221;, line 65<br />
    for gen in range(n_iter):<br />
                            ^<br />
SyntaxError: invalid syntax</p>
<p>in code for continuous function simply copied pasted this error comes up jason</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608488' data-commentid="608488" data-postid="11849" data-belowelement="comment-608488" data-respondelement="respond" data-replyto="Reply to agelos" aria-label='Reply to agelos'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-608513" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-608513" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 9, 2021 at 5:57 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-608513" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>This will help you copy the code without error:<br />
<a href="https://machinelearningmastery.com/faq/single-faq/how-do-i-copy-code-from-a-tutorial" rel="nofollow ugc">https://machinelearningmastery.com/faq/single-faq/how-do-i-copy-code-from-a-tutorial</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-608513' data-commentid="608513" data-postid="11849" data-belowelement="comment-608513" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-609320" class="comment even thread-even depth-1">

	      	<div id="li-comment-609320" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/97b102320445f3962c8369fcf30d792c?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/97b102320445f3962c8369fcf30d792c?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Guilherme</span>
	                <span class="date">May 16, 2021 at 5:39 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-609320" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Very nice article!</p>
<p>I&#8217;m starting to read about Neural Networks and stumbled upon this page while searching for Genetic Algorithms on Google. It helped me understand some basic concepts.</p>
<p>Thank you!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-609320' data-commentid="609320" data-postid="11849" data-belowelement="comment-609320" data-respondelement="respond" data-replyto="Reply to Guilherme" aria-label='Reply to Guilherme'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-609447" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-609447" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 17, 2021 at 5:34 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-609447" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-609447' data-commentid="609447" data-postid="11849" data-belowelement="comment-609447" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-609436" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-609436" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/311ad516ea06cbb966cd0b4ce47666ba?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/311ad516ea06cbb966cd0b4ce47666ba?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Muruganandan S</span>
	                <span class="date">May 17, 2021 at 3:31 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-609436" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Dear Jason </p>
<p>Your article is very nice. But,  I am not able to go line by line understanding as I am new to the GA. But I got some useful inputs to my work related to stock price predictions. However, I have lots of doubts regrading the implementation of GA in price predictions. Can you help me in this area.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-609436' data-commentid="609436" data-postid="11849" data-belowelement="comment-609436" data-respondelement="respond" data-replyto="Reply to Muruganandan S" aria-label='Reply to Muruganandan S'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-609460" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-609460" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 17, 2021 at 5:39 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-609460" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks!</p>
<p>If you are interested in time series forecasting, perhaps start here:<br />
<a href="https://machinelearningmastery.com/start-here/#timeseries" rel="nofollow ugc">https://machinelearningmastery.com/start-here/#timeseries</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-609460' data-commentid="609460" data-postid="11849" data-belowelement="comment-609460" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-610864" class="comment even thread-even depth-1">

	      	<div id="li-comment-610864" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/3cac4d91c115c7939213b0dcdb31319e?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/3cac4d91c115c7939213b0dcdb31319e?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">RAHEEL SHAIKH</span>
	                <span class="date">May 25, 2021 at 3:09 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-610864" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>There is a bug in the code. </p>
<p>	best, best_eval = 0, objective(decode(bounds, n_bits, pop[0])</p>
<p>should  be</p>
<p>	best, best_eval = 0, objective(decode(bounds, n_bits, pop[0]))<br />
i.e. with last bracket. That is why many people having syntax error. </p>
<p>Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-610864' data-commentid="610864" data-postid="11849" data-belowelement="comment-610864" data-respondelement="respond" data-replyto="Reply to RAHEEL SHAIKH" aria-label='Reply to RAHEEL SHAIKH'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-611012" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-611012" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 26, 2021 at 5:49 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-611012" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks, fixed.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-611012' data-commentid="611012" data-postid="11849" data-belowelement="comment-611012" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-611658" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-611658" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/98c70429e80dedad1fc5b0a8b1ae1275?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/98c70429e80dedad1fc5b0a8b1ae1275?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Yara</span>
	                <span class="date">May 29, 2021 at 10:23 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-611658" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi! First of all, thanks for the tutorial. I&#8217;m currently working on an adaptation for a function that depends on 4 variables and having trouble with the decoding function. Is the following right?</p>
<p>def decode(bounds, n_bits, bitstring):<br />
	decoded = list()<br />
	largest = 4**n_bits-1<br />
	for i in range(len(bounds)):<br />
		# extract the substring<br />
		start, end = i * n_bits, (i * n_bits)+n_bits<br />
		substring = bitstring[start:end]<br />
		# convert bitstring to a string of chars<br />
		chars = &#8221;.join([str(s) for s in substring])<br />
		# convert string to integer<br />
		integer = int(chars, 4)<br />
		# scale integer to desired range<br />
		value = bounds[i][0] + (integer/largest) * (bounds[i][1] &#8211; bounds[i][0])<br />
		# store<br />
		decoded.append(value)<br />
	return decoded</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-611658' data-commentid="611658" data-postid="11849" data-belowelement="comment-611658" data-respondelement="respond" data-replyto="Reply to Yara" aria-label='Reply to Yara'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-611711" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-611711" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">May 30, 2021 at 5:47 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-611711" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re welcome.</p>
<p>Sorry, I don&#8217;t have the capacity to review/debug your extensions. I hope you can understand.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-611711' data-commentid="611711" data-postid="11849" data-belowelement="comment-611711" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-612956" class="comment even thread-even depth-1">

	      	<div id="li-comment-612956" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/f0154b904dc0854386ab176bcafa25b0?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/f0154b904dc0854386ab176bcafa25b0?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Guixin Liu</span>
	                <span class="date">June 12, 2021 at 8:03 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-612956" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>This is very clear and instructive. I used to study Matlab codes for GA but feel it very difficult. Now I realized it&#8217;s not that the algorithm is hard itself, but that the codes I read before was not well written. Thanks!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-612956' data-commentid="612956" data-postid="11849" data-belowelement="comment-612956" data-respondelement="respond" data-replyto="Reply to Guixin Liu" aria-label='Reply to Guixin Liu'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-613018" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-613018" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">June 13, 2021 at 5:46 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-613018" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re very welcome!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-613018' data-commentid="613018" data-postid="11849" data-belowelement="comment-613018" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-612977" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-612977" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a6aedc299f1f3b22d51e4a5a93f17f5a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a6aedc299f1f3b22d51e4a5a93f17f5a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Jianhua</span>
	                <span class="date">June 12, 2021 at 3:43 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-612977" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason! Thank you for making this tutorial. I was wondering if it is possible to plot the convergence for your genetic algorithm? If so, how would you implement it?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-612977' data-commentid="612977" data-postid="11849" data-belowelement="comment-612977" data-respondelement="respond" data-replyto="Reply to Jianhua" aria-label='Reply to Jianhua'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-613020" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-613020" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">June 13, 2021 at 5:47 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-613020" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Yes, you could save the best fitness in a list each iteration, then plot the list at the end of the run.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-613020' data-commentid="613020" data-postid="11849" data-belowelement="comment-613020" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-615562" class="comment even thread-even depth-1">

	      	<div id="li-comment-615562" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/abb2c0294064a56206d480f7a083fb4e?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/abb2c0294064a56206d480f7a083fb4e?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Mariona</span>
	                <span class="date">July 6, 2021 at 4:31 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-615562" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,<br />
Thank you for sharing this 🙂 I am trying to apply this for a problem with both integer &amp; continuous variables. Any tips on how to do this? I was thinking, in the decode function, only some of the values should be decoded to continuous, the rest should stay as binary or integer.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-615562' data-commentid="615562" data-postid="11849" data-belowelement="comment-615562" data-respondelement="respond" data-replyto="Reply to Mariona" aria-label='Reply to Mariona'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-615575" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-615575" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">July 6, 2021 at 5:50 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-615575" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Perhaps first decide all to bits to integers, then covert some integers to floats in the required range.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-615575' data-commentid="615575" data-postid="11849" data-belowelement="comment-615575" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-616469" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-616469" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/c10e014737ac593677bd0901258c7d37?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/c10e014737ac593677bd0901258c7d37?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">ali</span>
	                <span class="date">July 14, 2021 at 8:04 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-616469" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>thanks for this title<br />
i have a question , I have some data from a function Can I predict what the actual function is  ? use GP</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-616469' data-commentid="616469" data-postid="11849" data-belowelement="comment-616469" data-respondelement="respond" data-replyto="Reply to ali" aria-label='Reply to ali'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-616563" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-616563" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">July 15, 2021 at 5:22 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-616563" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You can approximate a function that matches the data. This is the goal of applied machine learning (function approximation).</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-616563' data-commentid="616563" data-postid="11849" data-belowelement="comment-616563" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-625562" class="comment even thread-even depth-1">

	      	<div id="li-comment-625562" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Indi</span>
	                <span class="date">September 2, 2021 at 3:12 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-625562" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks a lot Jason!</p>
<p>Just a couple of notes if someone wants to use python 2.x:<br />
1) For the OneMax example, replace c1, c2 = p1.copy(), p2.copy() by c1, c2 = p1[:], p2[:]<br />
2) For the continuous function, write at the beginning of the code the following<br />
from __future__ import division</p>
<p>Great job Jason!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-625562' data-commentid="625562" data-postid="11849" data-belowelement="comment-625562" data-respondelement="respond" data-replyto="Reply to Indi" aria-label='Reply to Indi'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-625636" class="comment byuser comment-author-jasonb bypostauthor odd alt depth-2">

	      	<div id="li-comment-625636" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a0942b56b07831ac15d4a168a750e34a?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name"><a href='http://MachineLearningMastery.com' rel='external nofollow ugc' class='url'>Jason Brownlee</a></span>
	                <span class="date">September 3, 2021 at 5:28 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-625636" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks for sharing!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-625636' data-commentid="625636" data-postid="11849" data-belowelement="comment-625636" data-respondelement="respond" data-replyto="Reply to Jason Brownlee" aria-label='Reply to Jason Brownlee'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-634688" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-634688" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/a8293913ddfcfd341398e1a50f0b9920?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/a8293913ddfcfd341398e1a50f0b9920?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Gabrielle</span>
	                <span class="date">November 3, 2021 at 3:08 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-634688" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>You&#8217;re an angel!<br />
Thank you very much &lt;3</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-634688' data-commentid="634688" data-postid="11849" data-belowelement="comment-634688" data-respondelement="respond" data-replyto="Reply to Gabrielle" aria-label='Reply to Gabrielle'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-641625" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-641625" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/94d3f4e3fc873bd0987723dca3a75252?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/94d3f4e3fc873bd0987723dca3a75252?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">tahir</span>
	                <span class="date">November 28, 2021 at 1:13 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-641625" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>hello, I need help with my homework. I need to get the best 20 children in a population of 20 individuals with onemax. How should I change the onemax code you provided? i am new to this stuff.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-641625' data-commentid="641625" data-postid="11849" data-belowelement="comment-641625" data-respondelement="respond" data-replyto="Reply to tahir" aria-label='Reply to tahir'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-641843" class="comment byuser comment-author-adriantam even depth-2">

	      	<div id="li-comment-641843" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Adrian Tam</span>
	                <span class="date">November 29, 2021 at 8:50 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-641843" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Get 20 out of 20: Isn&#8217;t that means to pick everyone?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-641843' data-commentid="641843" data-postid="11849" data-belowelement="comment-641843" data-respondelement="respond" data-replyto="Reply to Adrian Tam" aria-label='Reply to Adrian Tam'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-642373" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-642373" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/b8f736b70f7af0ccad0b7d86ce2377fd?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/b8f736b70f7af0ccad0b7d86ce2377fd?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Kokot</span>
	                <span class="date">December 2, 2021 at 3:42 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-642373" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hello, I have a question about maximizing a function:<br />
Do we have to change only<br />
if scores[i]  best_eval:<br />
?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-642373' data-commentid="642373" data-postid="11849" data-belowelement="comment-642373" data-respondelement="respond" data-replyto="Reply to Kokot" aria-label='Reply to Kokot'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-643354" class="comment byuser comment-author-adriantam even depth-2">

	      	<div id="li-comment-643354" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Adrian Tam</span>
	                <span class="date">December 8, 2021 at 5:46 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-643354" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Yes. In that case, you remember the largest value you ever saw</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-643354' data-commentid="643354" data-postid="11849" data-belowelement="comment-643354" data-respondelement="respond" data-replyto="Reply to Adrian Tam" aria-label='Reply to Adrian Tam'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-643549" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-643549" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/cf835136a787798b5fe64a7f0efc0df3?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/cf835136a787798b5fe64a7f0efc0df3?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Tolulope Babatunde</span>
	                <span class="date">December 9, 2021 at 1:51 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-643549" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hello,</p>
<p>Thank you for this. I am trying to use genetic algorithm to solve a weighted set covering problem. The data looks like this;</p>
<p>Universe = set([1.,2.,3.,4.,5.,6.,7.,8.])<br />
Subsets = [set([1.,2.]),<br />
           set([3.,4.]),<br />
           set([5.,6.]),<br />
           set([7.,8.]),<br />
           set([2.,4.,6.,8.])]</p>
<p>weights = [1.,1.,1.,1.,1.]</p>
<p>How do I define the objective function ?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-643549' data-commentid="643549" data-postid="11849" data-belowelement="comment-643549" data-respondelement="respond" data-replyto="Reply to Tolulope Babatunde" aria-label='Reply to Tolulope Babatunde'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-643782" class="comment byuser comment-author-adriantam even depth-2">

	      	<div id="li-comment-643782" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/73a7f07e8fec40c74d091917c1108f7b?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Adrian Tam</span>
	                <span class="date">December 10, 2021 at 4:15 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-643782" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Maybe the amount of overlap?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-643782' data-commentid="643782" data-postid="11849" data-belowelement="comment-643782" data-respondelement="respond" data-replyto="Reply to Adrian Tam" aria-label='Reply to Adrian Tam'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-647984" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-647984" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/58c887175b8bcdd3f79765381bad4e5e?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/58c887175b8bcdd3f79765381bad4e5e?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Yousaf Ali</span>
	                <span class="date">December 28, 2021 at 4:28 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-647984" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Objective() need any library to import ? </p>
<p>scores = [Objective(c) for c in pop]<br />
NameError: name &#8216;Objective&#8217; is not defined</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-647984' data-commentid="647984" data-postid="11849" data-belowelement="comment-647984" data-respondelement="respond" data-replyto="Reply to Yousaf Ali" aria-label='Reply to Yousaf Ali'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-648184" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-648184" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">December 29, 2021 at 11:42 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-648184" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Yousaf&#8230;Please provide a full code listing so that we may determine what may be required.</p>
<p>Regards,</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-648184' data-commentid="648184" data-postid="11849" data-belowelement="comment-648184" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-649837" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-649837" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d6024f98d34e1b11371836bdf89db7a9?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Indira X</span>
	                <span class="date">January 6, 2022 at 10:28 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-649837" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi,<br />
I hope somebody can help me, please.</p>
<p>I used the code in the last example of this post but I changed it to multi-objective.<br />
Obj1=abs(x[0]*a0 + x[1]*a1 + x[2]*a2 – a_target)**2<br />
Obj2=abs(x[0] + x[1] + x[2])<br />
I have also some constraints for x.<br />
The code works fine and the solutions are really reasonable. However, I want to know if I can prove somehow this is the global optima, or even a local optima. I wonder if this is in some of the books posted here.<br />
Thanks.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-649837' data-commentid="649837" data-postid="11849" data-belowelement="comment-649837" data-respondelement="respond" data-replyto="Reply to Indira X" aria-label='Reply to Indira X'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-654277" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-654277" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/d17ef1eb152f62348756a784fc9423d4?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/d17ef1eb152f62348756a784fc9423d4?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Jack</span>
	                <span class="date">February 11, 2022 at 1:44 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-654277" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>How can we use GA to find the optimal stringing for solar systems can you make an example of that if possible</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-654277' data-commentid="654277" data-postid="11849" data-belowelement="comment-654277" data-respondelement="respond" data-replyto="Reply to Jack" aria-label='Reply to Jack'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-654320" class="comment byuser comment-author-jamespcarmichael odd alt depth-2">

	      	<div id="li-comment-654320" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">February 11, 2022 at 8:24 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-654320" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jack&#8230;Thank you for the question!  While I do not have capacity to address your specific application, I would be more than happy to help answer any specific questions you have regarding our materials.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-654320' data-commentid="654320" data-postid="11849" data-belowelement="comment-654320" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-659025" class="comment even thread-even depth-1">

	      	<div id="li-comment-659025" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/ac4adc6a59869653fe3f3f388ee04494?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/ac4adc6a59869653fe3f3f388ee04494?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Milad</span>
	                <span class="date">March 10, 2022 at 8:48 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-659025" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi<br />
I want to use an LSTM network for the objective with 10 variables and the n_step=21 (I mean from t-21 to t ) which all of these 10 variables have their own bound&#8230; I have some problems with the decoder and the input dimension of the LSTM network&#8230; Any kind of help will be appreciated</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-659025' data-commentid="659025" data-postid="11849" data-belowelement="comment-659025" data-respondelement="respond" data-replyto="Reply to Milad" aria-label='Reply to Milad'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-659150" class="comment byuser comment-author-jamespcarmichael odd alt depth-2">

	      	<div id="li-comment-659150" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">March 11, 2022 at 1:07 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-659150" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Milad&#8230;the following is a great starting point:</p>
<p><a href="https://machinelearningmastery.com/multivariate-time-series-forecasting-lstms-keras/" rel="nofollow ugc">https://machinelearningmastery.com/multivariate-time-series-forecasting-lstms-keras/</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-659150' data-commentid="659150" data-postid="11849" data-belowelement="comment-659150" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-659177" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-659177" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/ac4adc6a59869653fe3f3f388ee04494?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/ac4adc6a59869653fe3f3f388ee04494?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Milad</span>
	                <span class="date">March 11, 2022 at 5:46 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-659177" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi</p>
<p>Thanks for your response </p>
<p>I have read all of the machinelearningmastery&#8217;s articles about implementing different kinds of machine learning methods in python. (Big fan of your website) But I couldn&#8217;t find a solution&#8230;</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-659177' data-commentid="659177" data-postid="11849" data-belowelement="comment-659177" data-respondelement="respond" data-replyto="Reply to Milad" aria-label='Reply to Milad'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-660321" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-660321" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/ca5528713b240d701f81d1c7f6fea2dc?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/ca5528713b240d701f81d1c7f6fea2dc?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Silviu</span>
	                <span class="date">March 18, 2022 at 6:55 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-660321" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>The very first line of the code<br />
pop = [randint(0, 2, n_bits).tolist() for _ in range(n_pop)]</p>
<p>does not work</p>
<p>Am i right?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-660321' data-commentid="660321" data-postid="11849" data-belowelement="comment-660321" data-respondelement="respond" data-replyto="Reply to Silviu" aria-label='Reply to Silviu'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-660573" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-660573" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">March 20, 2022 at 7:22 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-660573" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Silviu&#8230;Can you provide the exact error message you encountered so that we may better assist you?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-660573' data-commentid="660573" data-postid="11849" data-belowelement="comment-660573" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-664947" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-664947" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/626f84f6fa6a6f467ff520a76b378189?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/626f84f6fa6a6f467ff520a76b378189?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Lupus Solitarius</span>
	                <span class="date">April 18, 2022 at 9:31 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-664947" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Easy to follow, I am adept with python, but just learning GA now. The code is full of errors and omissions when copied from the web page; I was able to fix.</p>
<p>In particular, the MUTATION function lacks the RETURN statement. I also determined the GA works BETTER without mutation!</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-664947' data-commentid="664947" data-postid="11849" data-belowelement="comment-664947" data-respondelement="respond" data-replyto="Reply to Lupus Solitarius" aria-label='Reply to Lupus Solitarius'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-665219" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-665219" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">April 19, 2022 at 7:15 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-665219" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thank you for the feedback Lupus!  Let us know if you have any questions we can help you with.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-665219' data-commentid="665219" data-postid="11849" data-belowelement="comment-665219" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-667350" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-667350" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4fff48be76536c1875b1c7fb40629dc5?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4fff48be76536c1875b1c7fb40629dc5?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Iman</span>
	                <span class="date">May 3, 2022 at 8:54 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-667350" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,<br />
Why did you use &#8220;binary number&#8221; in continuous function optimization?<br />
Can we use real number directly into the genetic algorithm function?</p>
<p>Thanks,<br />
Iman</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-667350' data-commentid="667350" data-postid="11849" data-belowelement="comment-667350" data-respondelement="respond" data-replyto="Reply to Iman" aria-label='Reply to Iman'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-667410" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-667410" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">May 3, 2022 at 11:09 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-667410" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Iman..You may find the following of interest:</p>
<p><a href="https://pubs.acs.org/doi/pdf/10.1021/jp063998e" rel="nofollow ugc">https://pubs.acs.org/doi/pdf/10.1021/jp063998e</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-667410' data-commentid="667410" data-postid="11849" data-belowelement="comment-667410" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-669597" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-669597" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/b3c139ac5d7348fbe5748b3ab1067525?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/b3c139ac5d7348fbe5748b3ab1067525?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Boutine</span>
	                <span class="date">May 18, 2022 at 7:42 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-669597" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James, Thank you for the great explanation. Can you send me the full code you used in this article? </p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-669597' data-commentid="669597" data-postid="11849" data-belowelement="comment-669597" data-respondelement="respond" data-replyto="Reply to Boutine" aria-label='Reply to Boutine'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-669642" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-669642" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">May 19, 2022 at 6:26 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-669642" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Boutine&#8230;You are very welcome! The full code listing is found below the following text in the article:</p>
<p>&#8220;Tying this together, the complete example of the genetic algorithm for continuous function optimization is listed below.&#8221;</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-669642' data-commentid="669642" data-postid="11849" data-belowelement="comment-669642" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-681494" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-681494" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">matt</span>
	                <span class="date">August 18, 2022 at 8:09 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-681494" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Jason,</p>
<p>My name is Matt.<br />
Thanks for the tutorial.</p>
<p>I have trained a GBM model which is able to predict three target variables. Now, I am gonna integrate the GBM model with GA to find the optimum set of predictor variables that minimize the target variables.<br />
I have searched the web, however, I was not successful in finding a resource or tutorial.<br />
Would you be able to assist? </p>
<p>Thanks heaps</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-681494' data-commentid="681494" data-postid="11849" data-belowelement="comment-681494" data-respondelement="respond" data-replyto="Reply to matt" aria-label='Reply to matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-681539" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-681539" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">August 19, 2022 at 7:31 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-681539" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Matt&#8230;the following resource may be of interest to you:</p>
<p><a href="https://towardsdatascience.com/genetic-algorithm-to-optimize-machine-learning-hyperparameters-72bd6e2596fc" rel="nofollow ugc">https://towardsdatascience.com/genetic-algorithm-to-optimize-machine-learning-hyperparameters-72bd6e2596fc</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-681539' data-commentid="681539" data-postid="11849" data-belowelement="comment-681539" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-681557" class="comment odd alt depth-3">

	      	<div id="li-comment-681557" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matt</span>
	                <span class="date">August 19, 2022 at 10:39 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-681557" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks James for sharing the resource.<br />
But What I am after is not using GA for hyperparameter tuning.<br />
I am going to use the GA for finding an optimum set of “predictor variables” that I have used for training a GBM model. The set of predictor variables by which the defined target variables are getting minimized.</p>
<p>Does that make sense?</p>
<p>Thanks in advance.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-681557' data-commentid="681557" data-postid="11849" data-belowelement="comment-681557" data-respondelement="respond" data-replyto="Reply to Matt" aria-label='Reply to Matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-681555" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-681555" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matt</span>
	                <span class="date">August 19, 2022 at 10:20 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-681555" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Thanks James for sharing the resource.<br />
But What I am after is not using GA for hyperparameter tuning.<br />
I am going to use the GA for finding an optimum set of &#8220;predictor variables&#8221; that I have used for training a GBM model. The set of predictor variables by which the defined target variables are getting minimized.</p>
<p>Does that make sense?</p>
<p>Thanks in advance.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-681555' data-commentid="681555" data-postid="11849" data-belowelement="comment-681555" data-respondelement="respond" data-replyto="Reply to Matt" aria-label='Reply to Matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-682058" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-682058" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/0776461eb9d192b862633d985268b1e6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/0776461eb9d192b862633d985268b1e6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Aamir Aman</span>
	                <span class="date">September 13, 2022 at 4:24 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682058" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James, dear can you answer me is it possible that we get gif animation of GA algorithm the same like you did in PSO algorithm?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682058' data-commentid="682058" data-postid="11849" data-belowelement="comment-682058" data-respondelement="respond" data-replyto="Reply to Aamir Aman" aria-label='Reply to Aamir Aman'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-682061" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-682061" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">September 13, 2022 at 7:37 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682061" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Amir&#8230;The following may be of interest to you:</p>
<p><a href="https://ieeexplore.ieee.org/document/6016133" rel="nofollow ugc">https://ieeexplore.ieee.org/document/6016133</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682061' data-commentid="682061" data-postid="11849" data-belowelement="comment-682061" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-682200" class="comment odd alt thread-odd thread-alt depth-1">

	      	<div id="li-comment-682200" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/652ddf06d5b721630c855436393d9f15?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/652ddf06d5b721630c855436393d9f15?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matt</span>
	                <span class="date">September 22, 2022 at 2:23 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682200" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James,<br />
What if there is a constraint for our output? How could we add that constraint to your code? Can you advise?</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682200' data-commentid="682200" data-postid="11849" data-belowelement="comment-682200" data-respondelement="respond" data-replyto="Reply to Matt" aria-label='Reply to Matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-682212" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-682212" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">September 23, 2022 at 5:55 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682212" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Matt&#8230;Please see my previous comment.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682212' data-commentid="682212" data-postid="11849" data-belowelement="comment-682212" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-682208" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-682208" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">matt</span>
	                <span class="date">September 22, 2022 at 8:16 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682208" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James,<br />
How can I add constraint for inputs to this code?</p>
<p>Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682208' data-commentid="682208" data-postid="11849" data-belowelement="comment-682208" data-respondelement="respond" data-replyto="Reply to matt" aria-label='Reply to matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-682209" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-682209" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">September 23, 2022 at 5:52 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682209" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Matt&#8230;Please clarify the goals and intention of constraints so that we may better assist you.</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682209' data-commentid="682209" data-postid="11849" data-belowelement="comment-682209" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-682233" class="comment odd alt depth-3">

	      	<div id="li-comment-682233" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matt</span>
	                <span class="date">September 24, 2022 at 8:36 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682233" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James,<br />
Sure, the constraint for the problem that I am trying to solve is budget constraint. The inputs are construction material. So the constraint that I would like to add is when a population is selected by GA code, its cost implication is checked and if it is below e.g $10,000, it can go to other steps of GA. Otherwise, the population needs to be change until the budget constraint is met.</p>
<p>Please let me know if it requires further elaboration.</p>
<p>Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682233' data-commentid="682233" data-postid="11849" data-belowelement="comment-682233" data-respondelement="respond" data-replyto="Reply to Matt" aria-label='Reply to Matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->

		<li id="comment-682311" class="comment even thread-odd thread-alt depth-1">

	      	<div id="li-comment-682311" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matt</span>
	                <span class="date">September 29, 2022 at 7:54 pm</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682311" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James,<br />
Sure, the constraint for the problem that I am trying to solve is budget constraint. The inputs are construction material. So the constraint that I would like to add is when a population is selected by GA code, its cost implication is checked and if it is below e.g $10,000, it can go to other steps of GA. Otherwise, the population needs to be change until the budget constraint is met.</p>
<p>Please let me know if it requires further elaboration.</p>
<p>Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682311' data-commentid="682311" data-postid="11849" data-belowelement="comment-682311" data-respondelement="respond" data-replyto="Reply to Matt" aria-label='Reply to Matt'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->

		<li id="comment-682365" class="comment odd alt thread-even depth-1">

	      	<div id="li-comment-682365" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/4db17739ebcc9e6442c51aa648e5ac2d?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">Matty</span>
	                <span class="date">October 3, 2022 at 11:35 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682365" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi James,<br />
Can GA be used for discrete optimization?<br />
If so, do you have any reference explaining how to do that?</p>
<p>Thanks</p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682365' data-commentid="682365" data-postid="11849" data-belowelement="comment-682365" data-respondelement="respond" data-replyto="Reply to Matty" aria-label='Reply to Matty'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	<ul class="children">

		<li id="comment-682392" class="comment byuser comment-author-jamespcarmichael even depth-2">

	      	<div id="li-comment-682392" class="comment-container">

					                <div class="avatar"><img alt='' src='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=40&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/7179260f38a32b3594550e7baddc86b6?s=80&#038;d=mm&#038;r=g 2x' class='avatar avatar-40 photo' height='40' width='40' loading='lazy' decoding='async'/></div>
	            
		      	<div class="comment-head">

	                <span class="name">James Carmichael</span>
	                <span class="date">October 4, 2022 at 7:06 am</span>
	                <span class="perma"><a href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/#comment-682392" title="Direct link to this comment">#</a></span>
	                <span class="edit"></span>

				</div><!-- /.comment-head -->

		   		<div class="comment-entry">

				<p>Hi Matty&#8230;You may find the following of interest:</p>
<p><a href="https://www.researchgate.net/publication/2404185_Genetic_Algortihms_For_Mixed_DiscreteContinuous_Optimization_In_Multidisciplinary_Design" rel="nofollow ugc">https://www.researchgate.net/publication/2404185_Genetic_Algortihms_For_Mixed_DiscreteContinuous_Optimization_In_Multidisciplinary_Design</a></p>

				
	                <div class="reply">
	                    <a rel='nofollow' class='comment-reply-link' href='#comment-682392' data-commentid="682392" data-postid="11849" data-belowelement="comment-682392" data-respondelement="respond" data-replyto="Reply to James Carmichael" aria-label='Reply to James Carmichael'>Reply</a>	                </div><!-- /.reply -->

				</div><!-- /comment-entry -->

			</div><!-- /.comment-container -->

	</li><!-- #comment-## -->
</ul><!-- .children -->
</li><!-- #comment-## -->
			</ol>
		 	</div>	<div id="respond" class="comment-respond">
		<h3 id="reply-title" class="comment-reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="/simple-genetic-algorithm-from-scratch-in-python/#respond" style="display:none;">Click here to cancel reply.</a></small></h3><form action="https://machinelearningmastery.com/wp-comments-post.php" method="post" id="commentform" class="comment-form"><p class="comment-form-comment"><label class="hide" for="comment">Comment <span class="required">*</span></label> <textarea tabindex="4" id="comment" name="comment" cols="50" rows="10" maxlength="65525" required="required"></textarea></p><p class="comment-form-author"><input id="author" name="author" type="text" class="txt" tabindex="1" value="" size="30" aria-required='true' /><label for="author">Name <span class="required">(required)</span></label> </p>
<p class="comment-form-email"><input id="email" name="email" type="text" class="txt" tabindex="2" value="" size="30" aria-required='true' /><label for="email">Email (will not be published) <span class="required">(required)</span></label> </p>

<p class="form-submit"><input name="submit" type="submit" id="submit" class="submit" value="Submit Comment" /> <input type='hidden' name='comment_post_ID' value='11849' id='comment_post_ID' />
<input type='hidden' name='comment_parent' id='comment_parent' value='0' />
</p><p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="820f56ec55" /></p><p style="display: none !important;"><label>&#916;<textarea name="ak_hp_textarea" cols="45" rows="8" maxlength="100"></textarea></label><input type="hidden" id="ak_js_1" name="ak_js" value="237"/><script type="rocketlazyloadscript">document.getElementById( "ak_js_1" ).setAttribute( "value", ( new Date() ).getTime() );</script></p></form>	</div><!-- #respond -->
	     
            </section><!-- /#main -->
                
            <aside id="sidebar">
<div id="woo_blogauthorinfo-2" class="widget widget_woo_blogauthorinfo"><span class="left"><img alt='' src='https://secure.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=88&#038;d=mm&#038;r=g' srcset='https://secure.gravatar.com/avatar/1d75d46040c28497f0dee5d8e100db37?s=176&#038;d=mm&#038;r=g 2x' class='avatar avatar-88 photo' height='88' width='88' loading='lazy' decoding='async'/></span>
<p><strong>Welcome!</strong><br>
I'm <em>Jason Brownlee</em> PhD <br>
and I <strong>help developers</strong> get results with <strong>machine learning</strong>.<br>
<a href="/about">Read more</a></p>
<div class="fix"></div>
</div><div id="custom_html-89" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><h4>Never miss a tutorial:</h4>
<br>
<div style="text-align: left;">
<a href="https://www.linkedin.com/company/machine-learning-mastery/"><img width="30" height="30" src="/wp-content/uploads/2019/12/small_icon_blue_linkedin3.png" alt="LinkedIn"></a>
&nbsp;&nbsp;&nbsp;
<a href="https://twitter.com/TeachTheMachine"><img width="30" height="30" src="/wp-content/uploads/2019/12/small_icon_blue_twitter3.png" alt="Twitter"></a>
&nbsp;&nbsp;&nbsp;
<a href="https://www.facebook.com/MachineLearningMastery/"><img width="30" height="30" src="/wp-content/uploads/2019/12/small_icon_blue_facebook3.png" alt="Facebook"></a>
&nbsp;&nbsp;&nbsp;
<a href="/newsletter/"><img width="30" height="30" src="/wp-content/uploads/2019/12/small_icon_blue_email3.png" alt="Email Newsletter"></a>
&nbsp;&nbsp;&nbsp;
<a href="https://machinelearningmastery.com/rss-feed/"><img width="30" height="30" src="/wp-content/uploads/2019/12/small_icon_blue_rss3.png" alt="RSS Feed"></a>
</div></div></div><div id="custom_html-103" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><div id="right-sidebar" class="widget" style="height:260px;">
</div></div></div><div id="custom_html-105" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><h4>Picked for you:</h4>
<br>
<div class="display-posts-listing image-left"><div class="listing-item"><a class="image" href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/"><img width="150" height="150" src="https://machinelearningmastery.com/wp-content/uploads/2021/03/Simple-Genetic-Algorithm-From-Scratch-in-Python-150x150.jpg" class="attachment-thumbnail size-thumbnail wp-post-image" alt="Simple Genetic Algorithm From Scratch in Python" decoding="async" loading="lazy" /></a> <a class="title" href="https://machinelearningmastery.com/simple-genetic-algorithm-from-scratch-in-python/" rel="nofollow">Simple Genetic Algorithm From Scratch in Python</a></div><div class="listing-item"><a class="image" href="https://machinelearningmastery.com/curve-fitting-with-python/"><img width="150" height="150" src="https://machinelearningmastery.com/wp-content/uploads/2021/02/Curve-Fitting-With-Python-150x150.jpg" class="attachment-thumbnail size-thumbnail wp-post-image" alt="Curve Fitting With Python" decoding="async" loading="lazy" /></a> <a class="title" href="https://machinelearningmastery.com/curve-fitting-with-python/" rel="nofollow">Curve Fitting With Python</a></div><div class="listing-item"><a class="image" href="https://machinelearningmastery.com/a-gentle-introduction-to-particle-swarm-optimization/"><img width="150" height="150" src="https://machinelearningmastery.com/wp-content/uploads/2021/08/3333025004_219a07456f_b-150x150.jpg" class="attachment-thumbnail size-thumbnail wp-post-image" alt="Particle Swarm Optimization" decoding="async" loading="lazy" /></a> <a class="title" href="https://machinelearningmastery.com/a-gentle-introduction-to-particle-swarm-optimization/" rel="nofollow">A Gentle Introduction to Particle Swarm Optimization</a></div><div class="listing-item"><a class="image" href="https://machinelearningmastery.com/simulated-annealing-from-scratch-in-python/"><img width="150" height="150" src="https://machinelearningmastery.com/wp-content/uploads/2020/11/Line-Plot-of-Metropolis-Acceptance-Criterion-vs-Algorithm-Iteration-for-Simulated-Annealing-150x150.png" class="attachment-thumbnail size-thumbnail wp-post-image" alt="Line Plot of Metropolis Acceptance Criterion vs. Algorithm Iteration for Simulated Annealing" decoding="async" loading="lazy" /></a> <a class="title" href="https://machinelearningmastery.com/simulated-annealing-from-scratch-in-python/" rel="nofollow">Simulated Annealing From Scratch in Python</a></div><div class="listing-item"><a class="image" href="https://machinelearningmastery.com/tour-of-optimization-algorithms/"><img width="150" height="150" src="https://machinelearningmastery.com/wp-content/uploads/2021/04/How-to-Choose-an-Optimization-Algorithm-150x150.jpg" class="attachment-thumbnail size-thumbnail wp-post-image" alt="How to Choose an Optimization Algorithm" decoding="async" loading="lazy" /></a> <a class="title" href="https://machinelearningmastery.com/tour-of-optimization-algorithms/" rel="nofollow">How to Choose an Optimization Algorithm</a></div></div></div></div><div id="custom_html-97" class="widget_text widget widget_custom_html"><div class="textwidget custom-html-widget"><div style="text-align: center;">
	<p><h4>Loving the Tutorials?</h4></p>

<p>The <a href="/optimization-for-machine-learning/" rel="nofollow">Optimization for Machine Learning
	</a> EBook<br> is where you'll find the <strong><i>Really Good</i></strong> stuff.</p>

<p>
<a href="/optimization-for-machine-learning/" class="woo-sc-button  red" ><span class="woo-">&gt;&gt; See What's Inside</span></a>
</p>

</div></div></div></aside><!-- /#sidebar -->

		</div><!-- /#main-sidebar-container -->         

		
    </div><!-- /#content -->
	
	<footer id="footer" class="col-full">

		
		<div id="copyright" class="col-left">
			<p>© 2022 Machine Learning Mastery. All Rights Reserved.<br />
<a href="https://www.linkedin.com/company/machine-learning-mastery/">LinkedIn</a> |
<a href="https://twitter.com/TeachTheMachine">Twitter</a> |
<a href="https://www.facebook.com/MachineLearningMastery/">Facebook</a> |
<a href="/newsletter/">Newsletter</a> |
<a href="/rss-feed/">RSS</a></p>		</div>

		<div id="credit" class="col-right">
			<p><a href="/privacy/">Privacy</a> | 
<a href="/disclaimer/">Disclaimer</a> | 
<a href="/terms-of-service/">Terms</a> | 
<a href="/contact/">Contact</a> |
<a href="/sitemap.xml">Sitemap</a> |
<a href="/site-search/">Search</a></p>		</div>

	</footer>

	
	</div><!-- /#inner-wrapper -->

</div><!-- /#wrapper -->

<div class="fix"></div><!--/.fix-->

<script data-no-optimize='1' data-cfasync='false' id='cls-insertion-1ef2db3'>!function(){"use strict";var e=function(e,t){return null==e||e!=e?t:e},t=function(e){var t=e.offsetHeight,n=e.offsetWidth,i=e.getBoundingClientRect(),o=document.body,r=document.documentElement,a=window.pageYOffset||r.scrollTop||o.scrollTop,l=window.pageXOffset||r.scrollLeft||o.scrollLeft,s=r.clientTop||o.clientTop||0,c=r.clientLeft||o.clientLeft||0,u=Math.round(i.top+a-s),d=Math.round(i.left+l-c);return{top:u,left:d,bottom:u+t,right:d+n,width:n,height:t}},n=function(e,t){return n=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])},n(e,t)};function i(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function i(){this.constructor=e}n(e,t),e.prototype=null===t?Object.create(t):(i.prototype=t.prototype,new i)}var o=function(){return o=Object.assign||function(e){for(var t,n=1,i=arguments.length;n<i;n++)for(var o in t=arguments[n])Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o]);return e},o.apply(this,arguments)};function r(e,t,n,i){var o,r=arguments.length,a=r<3?t:null===i?i=Object.getOwnPropertyDescriptor(t,n):i;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(e,t,n,i);else for(var l=e.length-1;l>=0;l--)(o=e[l])&&(a=(r<3?o(a):r>3?o(t,n,a):o(t,n))||a);return r>3&&a&&Object.defineProperty(t,n,a),a}function a(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function l(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],i=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&i>=e.length&&(e=void 0),{value:e&&e[i++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function s(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var i,o,r=n.call(e),a=[];try{for(;(void 0===t||t-- >0)&&!(i=r.next()).done;)a.push(i.value)}catch(e){o={error:e}}finally{try{i&&!i.done&&(n=r.return)&&n.call(r)}finally{if(o)throw o.error}}return a}function c(e,t,n){if(n||2===arguments.length)for(var i,o=0,r=t.length;o<r;o++)!i&&o in t||(i||(i=Array.prototype.slice.call(t,0,o)),i[o]=t[o]);return e.concat(i||Array.prototype.slice.call(t))}var u,d,p,h,y,f,m,g,v,_=function(e){localStorage.removeItem("adthrive_".concat(e.toLowerCase()))},b=function(e,t){try{var n={value:t,created:Date.now()};localStorage.setItem("adthrive_".concat(e.toLowerCase()),JSON.stringify(n))}catch(e){}},S=function(e,t,n){void 0===n&&(n=!1);try{var i=localStorage.getItem("adthrive_".concat(e.toLowerCase()));if(i){var o=JSON.parse(i),r=void 0!==t&&Date.now()-o.created>=t;if(o&&!r)return n&&b(e,o.value),o.value}}catch(e){}return null},P=function(e,t,n,i,r){var a;void 0===i&&(i=!0);var l="abgroup",s=S(l,n,i);if(null!==s){var c=s[e];if(null!=c)return c}var u=t(),d=o(o({},s),((a={})[e]=u,a));return b(l,d),r&&r(),u},A=function(){var e=navigator.userAgent,t=/Tablet|iPad|Playbook|Nook|webOS|Kindle|Android (?!.*Mobile).*Safari/i.test(e);return/Mobi|iP(hone|od)|Opera Mini/i.test(e)&&!t};!function(e){e.Prebid="prebid",e.GAM="gam",e.Amazon="amazon",e.WebVitals="webvitals",e.Marmalade="marmalade",e.Floors="floors",e.CMP="cmp"}(u||(u={})),function(e){e.prebidLoad="prebidLoad",e.amazonLoad="amazonLoad",e.gptLoad="gptLoad",e.rubiconFloors="rubiconFloors"}(d||(d={})),function(e){e.Desktop="desktop",e.Mobile="mobile"}(p||(p={})),function(e){e.Video_Collapse_Autoplay_SoundOff="Video_Collapse_Autoplay_SoundOff",e.Video_Individual_Autoplay_SOff="Video_Individual_Autoplay_SOff",e.Video_Coll_SOff_Smartphone="Video_Coll_SOff_Smartphone",e.Video_In_Post_ClicktoPlay_SoundOn="Video_In-Post_ClicktoPlay_SoundOn"}(h||(h={})),function(e){e.StickySekindo="stickySekindo",e.StaticSekindo="staticSekindo",e.None="none"}(y||(y={})),function(e){e.WEIGHTEDCHOICE="weightedChoice",e.BERNOULLITRIAL="bernoulliTrial"}(f||(f={})),function(e){e.INTEGER="integer",e.FLOAT="float",e.BOOLEAN="boolean",e.STRING="string"}(m||(m={})),function(e){e.DESKTOP="desktop",e.MOBILE="mobile",e.ALL="all"}(g||(g={})),function(e){e.AdDensity="addensity",e.FooterCloseButton="footerclose",e.Interstitial="interstitial",e.RemoveVideoTitleWrapper="removevideotitlewrapper",e.StickyOutstream="stickyoutstream",e.StickyOutstreamOnStickyPlayer="sospp",e.VideoAdvancePlaylistRelatedPlayer="videoadvanceplaylistrp",e.MobileStickyPlayerPosition="mspp"}(v||(v={}));var E=function(e,t,n){switch(t){case v.AdDensity:return function(e,t){var n=e.adDensityEnabled,i=e.adDensityLayout.pageOverrides.find((function(e){return!!document.querySelector(e.pageSelector)&&(e[t].onePerViewport||"number"==typeof e[t].adDensity)}));return!n||!i}(e,n);case v.StickyOutstream:return function(e){var t,n,i,o=null===(i=null===(n=null===(t=e.videoPlayers)||void 0===t?void 0:t.partners)||void 0===n?void 0:n.stickyOutstream)||void 0===i?void 0:i.blockedPageSelectors;return!o||!document.querySelector(o)}(e);case v.Interstitial:return function(e){var t=e.adOptions.interstitialBlockedPageSelectors||e.adOptions.mobileInterstitialBlockedPageSelectors;return!t||!document.querySelector(t)}(e);default:return!0}},w=function(){try{return Math.round(window.performance.now())}catch(e){return 0}},O=function(e){try{return{valid:!0,elements:document.querySelectorAll(e)}}catch(e){return o({valid:!1},e)}},D=function(e){return""===e?{valid:!0}:O(e)},C=function(){function e(){}return e.prototype.info=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];this.call.apply(this,c([console.info,e,t],s(n),!1))},e.prototype.warn=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];this.call.apply(this,c([console.warn,e,t],s(n),!1))},e.prototype.error=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];this.call.apply(this,c([console.error,e,t],s(n),!1)),this.sendErrorLogToCommandQueue.apply(this,c([e,t],s(n),!1))},e.prototype.event=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];this.info(e,t)},e.prototype.sendErrorLogToCommandQueue=function(e,t){for(var n=[],i=2;i<arguments.length;i++)n[i-2]=arguments[i];window.adthrive=window.adthrive||{},window.adthrive.cmd=window.adthrive.cmd||[],window.adthrive.cmd.push(function(){void 0!==window.adthrive.logError&&"function"==typeof window.adthrive.logError&&window.adthrive.logError(e,t,n)}.bind(e,t,n))},e.prototype.call=function(e,t,n){for(var i=[],o=3;o<arguments.length;o++)i[o-3]=arguments[o];var r=["%c".concat(t,"::").concat(n," ")],a=["color: #999; font-weight: bold;"];i.length>0&&"string"==typeof i[0]&&r.push(i.shift()),a.push.apply(a,c([],s(i),!1));try{Function.prototype.apply.call(e,console,c([r.join("")],s(a),!1))}catch(e){return void console.error(e)}},e}(),x=new C,k=["siteId","siteName","adOptions","breakpoints","adUnits"],M=function(){function e(){this._clsGlobalData=window.adthriveCLS}return Object.defineProperty(e.prototype,"enabled",{get:function(){return!!this._clsGlobalData&&!!this._clsGlobalData.siteAds&&function(e,t){if(void 0===t&&(t=k),!e)return!1;for(var n=0;n<t.length;n++)if(!e[t[n]])return!1;return!0}(this._clsGlobalData.siteAds)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"error",{get:function(){return!(!this._clsGlobalData||!this._clsGlobalData.error)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"siteAds",{get:function(){return this._clsGlobalData.siteAds},set:function(e){this._clsGlobalData.siteAds=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"disableAds",{get:function(){return this._clsGlobalData.disableAds},set:function(e){this._clsGlobalData.disableAds=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"enabledLocations",{get:function(){return this._clsGlobalData.enabledLocations},set:function(e){this._clsGlobalData.enabledLocations=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"injectedFromPlugin",{get:function(){return this._clsGlobalData.injectedFromPlugin},set:function(e){this._clsGlobalData.injectedFromPlugin=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"injectedFromSiteAds",{get:function(){return this._clsGlobalData.injectedFromSiteAds},set:function(e){this._clsGlobalData.injectedFromSiteAds=e},enumerable:!1,configurable:!0}),e.prototype.overwriteInjectedSlots=function(e){this._clsGlobalData.injectedSlots=e},e.prototype.setInjectedSlots=function(e){this._clsGlobalData.injectedSlots=this._clsGlobalData.injectedSlots||[],this._clsGlobalData.injectedSlots.push(e)},Object.defineProperty(e.prototype,"injectedSlots",{get:function(){return this._clsGlobalData.injectedSlots},enumerable:!1,configurable:!0}),e.prototype.setInjectedVideoSlots=function(e){this._clsGlobalData.injectedVideoSlots=this._clsGlobalData.injectedVideoSlots||[],this._clsGlobalData.injectedVideoSlots.push(e)},Object.defineProperty(e.prototype,"injectedVideoSlots",{get:function(){return this._clsGlobalData.injectedVideoSlots},enumerable:!1,configurable:!0}),e.prototype.setInjectedScripts=function(e){this._clsGlobalData.injectedScripts=this._clsGlobalData.injectedScripts||[],this._clsGlobalData.injectedScripts.push(e)},Object.defineProperty(e.prototype,"getInjectedScripts",{get:function(){return this._clsGlobalData.injectedScripts},enumerable:!1,configurable:!0}),e.prototype.setExperiment=function(e,t,n){void 0===n&&(n=!1),this._clsGlobalData.experiments=this._clsGlobalData.experiments||{},this._clsGlobalData.siteExperiments=this._clsGlobalData.siteExperiments||{},(n?this._clsGlobalData.siteExperiments:this._clsGlobalData.experiments)[e]=t},e.prototype.getExperiment=function(e,t){void 0===t&&(t=!1);var n=t?this._clsGlobalData.siteExperiments:this._clsGlobalData.experiments;return n&&n[e]},e.prototype.setWeightedChoiceExperiment=function(e,t,n){void 0===n&&(n=!1),this._clsGlobalData.experimentsWeightedChoice=this._clsGlobalData.experimentsWeightedChoice||{},this._clsGlobalData.siteExperimentsWeightedChoice=this._clsGlobalData.siteExperimentsWeightedChoice||{},(n?this._clsGlobalData.siteExperimentsWeightedChoice:this._clsGlobalData.experimentsWeightedChoice)[e]=t},e.prototype.getWeightedChoiceExperiment=function(e,t){var n,i;void 0===t&&(t=!1);var o=t?null===(n=this._clsGlobalData)||void 0===n?void 0:n.siteExperimentsWeightedChoice:null===(i=this._clsGlobalData)||void 0===i?void 0:i.experimentsWeightedChoice;return o&&o[e]},Object.defineProperty(e.prototype,"branch",{get:function(){return this._clsGlobalData.branch},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"bucket",{get:function(){return this._clsGlobalData.bucket},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"videoDisabledFromPlugin",{get:function(){return this._clsGlobalData.videoDisabledFromPlugin},set:function(e){this._clsGlobalData.videoDisabledFromPlugin=e},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"targetDensityLog",{get:function(){return this._clsGlobalData.targetDensityLog},set:function(e){this._clsGlobalData.targetDensityLog=e},enumerable:!1,configurable:!0}),e}(),I=function(){function e(){}return e.getScrollTop=function(){return(window.pageYOffset||document.documentElement.scrollTop)-(document.documentElement.clientTop||0)},e.shufflePlaylist=function(e){for(var t,n,i=e.length;0!==i;)n=Math.floor(Math.random()*e.length),t=e[i-=1],e[i]=e[n],e[n]=t;return e},e.isMobileLandscape=function(){return window.matchMedia("(orientation: landscape) and (max-height: 480px)").matches},e.playerViewable=function(e){var t=e.getBoundingClientRect();return this.isMobileLandscape()?window.innerHeight>t.top+t.height/2&&t.top+t.height/2>0:window.innerHeight>t.top+t.height/2},e.playerVisible=function(e){var t=e.getBoundingClientRect();return window.innerHeight>t.top},e.createQueryString=function(e){return Object.keys(e).map((function(t){return"".concat(t,"=").concat(e[t])})).join("&")},e.createEncodedQueryString=function(e){return Object.keys(e).map((function(t){return"".concat(t,"=").concat(encodeURIComponent(e[t]))})).join("&")},e.setMobileLocation=function(e){return"top-left"===(e=e||"bottom-right")?e="adthrive-collapse-top-left":"top-right"===e?e="adthrive-collapse-top-right":"bottom-left"===e?e="adthrive-collapse-bottom-left":"bottom-right"===e?e="adthrive-collapse-bottom-right":"top-center"===e&&(e=A()?"adthrive-collapse-top-center":"adthrive-collapse-bottom-right"),e},e}(),j=function(t){this._clsOptions=t,this.removeVideoTitleWrapper=e(this._clsOptions.siteAds.adOptions.removeVideoTitleWrapper,!1);var n=this._clsOptions.siteAds.videoPlayers;this.footerSelector=e(n&&n.footerSelector,""),this.players=e(n&&n.players.map((function(e){return e.mobileLocation=I.setMobileLocation(e.mobileLocation),e})),[]),this.contextualSettings=n&&n.contextual},L=function(e){this.mobileStickyPlayerOnPage=!1,this.playlistPlayerAdded=!1,this.contextualPlayerAdded=!1,this.sekindoPlayerAdded=!1,this.footerSelector="",this.removeVideoTitleWrapper=!1,this.videoAdOptions=new j(e),this.players=this.videoAdOptions.players,this.contextualSettings=this.videoAdOptions.contextualSettings,this.removeVideoTitleWrapper=this.videoAdOptions.removeVideoTitleWrapper,this.footerSelector=this.videoAdOptions.footerSelector},R=function(){},T=function(e){function t(t){var n=e.call(this)||this;return n._probability=t,n}return i(t,e),t.prototype.get=function(){if(this._probability<0||this._probability>1)throw new Error("Invalid probability");return Math.random()<this._probability},t}(R),G=function(){function e(){this._clsOptions=new M,this.shouldUseCoreExperimentsConfig=!1}return e.prototype.setExperimentKey=function(e){void 0===e&&(e=!1),this._clsOptions.setExperiment(this.key,this.result,e)},e}(),H=function(e){function t(){var t=e.call(this)||this;return t._result=!1,t._choices=[{choice:!0},{choice:!1}],t.key="smhd100",t._result=t.run(),t.setExperimentKey(),t}return i(t,e),Object.defineProperty(t.prototype,"result",{get:function(){return this._result},enumerable:!1,configurable:!0}),t.prototype.run=function(){return new T(.1).get()},t}(G),V=[[728,90],[300,250],[300,600],[320,50],[970,250],[160,600],[300,1050],[336,280],[970,90],[300,50],[320,100],[468,60],[250,250],[120,240],[1,1],[300,300],[552,334],[300,420],[728,250],[320,300],[300,390]],F=new Map([["Footer",1],["Header",2],["Sidebar",3],["Content",4],["Recipe",5],["Sidebar_sticky",6],["Below Post",7]]),W=function(t,n){var i=new H;return n.filter((function(e){return void 0!==e.dynamic&&e.dynamic.enabled})).map((function(n){var o,r=n.location.replace(/\s+/g,"_");return{auctionPriority:F.get(r)||8,location:r,sequence:e(n.sequence,1),sizes:(o=n.adSizes,V.filter((function(e){var t=s(e,2),n=t[0],i=t[1];return o.some((function(e){var t=s(e,2),o=t[0],r=t[1];return n===o&&i===r}))}))).filter((function(e){return function(e,t,n,i){var o=s(t,2),r=o[0],a=o[1];return!("Footer"===e&&"phone"===n&&320===r&&100===a||"Header"===e&&a>100&&i.result)}(n.location,e,t,i)})),devices:n.devices,pageSelector:e(n.dynamic.pageSelector,"").trim(),elementSelector:e(n.dynamic.elementSelector,"").trim(),position:e(n.dynamic.position,"beforebegin"),max:Math.floor(e(n.dynamic.max,0)),spacing:e(n.dynamic.spacing,0),skip:Math.floor(e(n.dynamic.skip,0)),every:Math.max(Math.floor(e(n.dynamic.every,1)),1),classNames:n.dynamic.classNames||[],sticky:"Footer"===n.location||n.sticky,stickyOverlapSelector:e(n.stickyOverlapSelector,"").trim(),autosize:n.autosize,special:e(n.targeting,[]).filter((function(e){return"special"===e.key})).reduce((function(e,t){return e.concat.apply(e,c([],s(t.value),!1))}),[]),lazy:e(n.dynamic.lazy,!1),lazyMax:e(n.dynamic.lazyMax,2),lazyMaxDefaulted:0!==n.dynamic.lazyMax&&!n.dynamic.lazyMax}}))},N=function(e,t){var n=function(e){var t=e.clientWidth;if(getComputedStyle){var n=getComputedStyle(e,null);t-=parseFloat(n.paddingLeft||"0")+parseFloat(n.paddingRight||"0")}return t}(t),i=e.sticky&&"Sidebar"===e.location;return e.sizes.filter((function(t){var o=!e.autosize||(t[0]<=n||t[0]<=320),r=!i||t[1]<=window.innerHeight-100;return o&&r}))},B=function(e){this.clsOptions=e,this.enabledLocations=["Below_Post","Content","Recipe","Sidebar"]};var z,q=function(){return function(e,t){void 0===t&&(t={});var n=t.insertAt;if(e&&"undefined"!=typeof document){var i=document.head||document.getElementsByTagName("head")[0],o=document.createElement("style");o.type="text/css","top"===n&&i.firstChild?i.insertBefore(o,i.firstChild):i.appendChild(o),o.styleSheet?o.styleSheet.cssText=e:o.appendChild(document.createTextNode(e))}}('\n  .adthrive-device-phone .adthrive-sticky-content {\n    height: 450px !important;\n    margin-bottom: 100px !important;\n  }\n  .adthrive-content.adthrive-sticky {\n    position: -webkit-sticky;\n    position: sticky !important;\n    top: 42px !important;\n    margin-top: 42px !important;\n  }\n  .adthrive-content.adthrive-sticky:after {\n    content: "— Advertisement. Scroll down to continue. —";\n    font-size: 10pt;\n    margin-top: 5px;\n    margin-bottom: 5px;\n    display:block;\n    color: #888;\n  }\n  body.single .adthrive-content {\n    position: relative;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    min-height:400px !important;\n    margin: 10px 0 10px 0;\n    background-color: #FAFAFA;\n    padding-bottom:0px;\n  }\n  body.single .adthrive-content > div {\n    flex-basis: unset;\n    position: sticky !important;\n    display: block;\n    flex-direction: column;\n    top: 5px;\n  }\n  ')},U=function(e){function t(t,n){void 0===t&&(t=[]);var i=e.call(this)||this;return i._choices=t,i._default=n,i}return i(t,e),t.fromArray=function(e,n){return new t(e.map((function(e){var t=s(e,2);return{choice:t[0],weight:t[1]}})),n)},t.prototype.addChoice=function(e,t){this._choices.push({choice:e,weight:t})},t.prototype.get=function(){var e,t,n,i,o=(n=0,i=100,Math.random()*(i-n)+n),r=0;try{for(var a=l(this._choices),s=a.next();!s.done;s=a.next()){var c=s.value,u=c.choice;if((r+=c.weight)>=o)return u}}catch(t){e={error:t}}finally{try{s&&!s.done&&(t=a.return)&&t.call(a)}finally{if(e)throw e.error}}return this._default},Object.defineProperty(t.prototype,"totalWeight",{get:function(){return this._choices.reduce((function(e,t){return e+t.weight}),0)},enumerable:!1,configurable:!0}),t}(R),K=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(function(){function e(){}return Object.defineProperty(e.prototype,"enabled",{get:function(){return void 0!==this.experimentConfig},enumerable:!1,configurable:!0}),e}()),J=function(){function e(e){var t,n,i=this;this.siteExperiments=[],this._clsOptions=e,this._device=A()?"mobile":"desktop",this.siteExperiments=null!==(n=null===(t=this._clsOptions.siteAds.siteExperiments)||void 0===t?void 0:t.filter((function(e){var t=e.key,n=function(e,t){if(!e)return!1;var n=!!e.enabled,i=null==e.dateStart||Date.now()>=e.dateStart,o=null==e.dateEnd||Date.now()<=e.dateEnd,r=null===e.selector||""!==e.selector&&!!document.querySelector(e.selector),a="mobile"===e.platform&&"mobile"===t,l="desktop"===e.platform&&"desktop"===t,s=null===e.platform||"all"===e.platform||a||l,c="bernoulliTrial"===e.experimentType?1===e.variants.length:(u=e.variants,d=u.reduce((function(e,t){return t.weight?t.weight+e:e}),0),u.length>0&&u.every((function(e){var t=e.value,n=e.weight;return!(void 0===t||!n)}))&&100===d);var u,d;return n&&i&&o&&r&&s&&c}(e,i._device),o=E(i._clsOptions.siteAds,t,i._device);return n&&o})))&&void 0!==n?n:[]}return e.prototype.getSiteExperimentByKey=function(e){return this.siteExperiments.filter((function(t){return t.key.toLowerCase()===e.toLowerCase()}))[0]},e}(),Q=function(e){return function(e){for(var t=5381,n=e.length;n;)t=33*t^e.charCodeAt(--n);return t>>>0}(e).toString(16)},Y=function(e,t,n,i,o,r){var a=Math.round(r-o),l=[],u=[];l.push("(",n.map((function(){return"%o"})).join(", "),")"),u.push.apply(u,c([],s(n),!1)),void 0!==i&&(l.push(" => %o"),u.push(i)),l.push(" %c(".concat(a,"ms)")),u.push("color: #999;")},X=function(e,t,n){var i=void 0!==n.get?n.get:n.value;return function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];try{var n=w(),o=i.apply(this,e);if(o instanceof Promise)return o.then((function(t){var i=w();return Y(0,0,e,t,n,i),Promise.resolve(t)})).catch((function(e){throw e.logged||(e.logged=!0),e}));var r=w();return Y(0,0,e,o,n,r),o}catch(e){throw e.logged||(e.logged=!0),e}}},Z=function(e,t){return void 0===t&&(t=!1),function(e){var n,i,r=Object.getOwnPropertyNames(e.prototype).filter((function(e){return t||0!==e.indexOf("_")})).map((function(t){return[t,Object.getOwnPropertyDescriptor(e.prototype,t)]}));try{for(var a=l(r),c=a.next();!c.done;c=a.next()){var u=s(c.value,2),d=u[0],p=u[1];void 0!==p&&"function"==typeof p.value?e.prototype[d]=X(0,0,p):void 0!==p&&void 0!==p.get&&"function"==typeof p.get&&Object.defineProperty(e.prototype,d,o(o({},p),{get:X(0,0,p)}))}}catch(e){n={error:e}}finally{try{c&&!c.done&&(i=a.return)&&i.call(a)}finally{if(n)throw n.error}}}},$=function(e){function t(t){var n=e.call(this)||this;return n._choices=[],n._mappedChoices=[],n._result="control",n.key=v.AdDensity,n._clsSiteExperiments=new J(t),n.experimentConfig=n._clsSiteExperiments.getSiteExperimentByKey(n.key),n.enabled&&(n._choices=n.experimentConfig.variants,n._mappedChoices=n.mapChoices(),n._result=n.run(),t.setWeightedChoiceExperiment(n.key,n._result,!0)),n}return i(t,e),Object.defineProperty(t.prototype,"result",{get:function(){return this._result},enumerable:!1,configurable:!0}),t.prototype.run=function(){this.enabled;var e=new U(this._mappedChoices).get();return this._validResult(e)?e:"control"},t.prototype.mapChoices=function(){return this._choices.map((function(e){var t=e.weight,n=e.value;return{weight:t,choice:"number"==typeof n?(n||0)/100:"control"}}))},t.prototype._validResult=function(e){return"number"==typeof e||"control"===e},r([function(e,t,n){var i=n.value;i&&(n.value=function(){for(var e,t=this,n=[],o=0;o<arguments.length;o++)n[o]=arguments[o];var r=Array.isArray(this._choices)?Q(JSON.stringify(this._choices)):null,a=this.key?this.key.toLowerCase():"",l=r?"".concat(a,"_").concat(r):a,s=this.sessionStoragePrefix?"".concat(this.sessionStoragePrefix,"-").concat(l):l;return!1===(null===(e=S("branch"))||void 0===e?void 0:e.enabled)&&_(s),P(s,(function(){return i.apply(t,n)}),864e5)})},a("design:type",Function),a("design:paramtypes",[]),a("design:returntype",void 0)],t.prototype,"run",null),t=r([Z(),a("design:paramtypes",[M])],t)}(K),ee=function(e){function t(){var t=e.call(this)||this;return t._result=!1,t.key="scae",t._choices=[{choice:!0},{choice:!1}],t.weight=0,t._result=t.run(),t.setExperimentKey(),t}return i(t,e),Object.defineProperty(t.prototype,"result",{get:function(){return this._result},enumerable:!1,configurable:!0}),t.prototype.run=function(){return new T(this.weight).get()},t=r([Z(),a("design:paramtypes",[])],t)}(G),te="250px",ne=function(){function n(e,t){this._clsOptions=e,this._adInjectionMap=t,this._totalContentInserted=0,this._recipeCount=0,this._mainContentHeight=0,this._mainContentDiv=null,this._totalAvailableElements=[],this._minDivHeight=250,this._densityDevice=p.Desktop,this._pubLog={onePerViewport:!1,targetDensity:0,targetDensityUnits:0,combinedMax:0},this._densityMax=.99,this._smallerIncrementAttempts=0,this._absoluteMinimumSpacingByDevice=250,this._usedAbsoluteMinimum=!1,this._infPageEndOffset=0,this.locationMaxLazySequence=new Map([["Recipe",5]]),this.locationToMinHeight={Below_Post:te,Content:te,Recipe:te,Sidebar:te};var n=this._clsOptions.siteAds.breakpoints,i=n.tablet,o=n.desktop;this._device=function(e,t){var n=window.innerWidth;return n>=t?"desktop":n>=e?"tablet":"phone"}(i,o),this._config=new B(e),this._clsOptions.enabledLocations=this._config.enabledLocations,this._clsAdDensitySiteExperiment=this._clsOptions.siteAds.siteExperiments?new $(this._clsOptions):null}return n.prototype.start=function(){var e=this;try{!function(e){var t=document.body,n="adthrive-device-".concat(e);if(!t.classList.contains(n))try{t.classList.add(n)}catch(e){document.createElement("_")}}(this._device);var t=W(this._device,this._clsOptions.siteAds.adUnits).filter((function(t){return e._locationEnabled(t)})).filter((function(t){return n=t,i=e._device,n.devices.includes(i);var n,i})).filter((function(e){return 0===(t=e).pageSelector.length||null!==document.querySelector(t.pageSelector);var t})),n=this.inject(t);(new ee).result&&q(),n.forEach((function(t){return e._clsOptions.setInjectedSlots(t)}))}catch(e){}},n.prototype.inject=function(t,n){void 0===n&&(n=document),this._densityDevice="desktop"===this._device?p.Desktop:p.Mobile,this._overrideDefaultAdDensitySettingsWithSiteExperiment();var i=this._clsOptions.siteAds,o=e(i.adDensityEnabled,!0),r=i.adDensityLayout&&o,a=t.filter((function(e){return r?"Content"!==e.location:e})),l=t.filter((function(e){return r?"Content"===e.location:null}));return c(c([],s(a.length?this._injectNonDensitySlots(a,n):[]),!1),s(l.length?this._injectDensitySlots(l,n):[]),!1)},n.prototype._injectNonDensitySlots=function(e,n){var i,o,r=this;void 0===n&&(n=document);var a=[],u=[];try{for(var d=l(e),p=d.next();!p.done;p=d.next()){var h=p.value,y=0,f=0,m=0;h.spacing>0&&(y=window.innerHeight*h.spacing,f=y);var g=this._repeatDynamicAds(h),v=this.getElements(h.elementSelector,n);h.skip;for(var _=function(e){if(m+1>g.length)return"break";var i=v[e];if(y>0){var o=t(i).bottom;if(o<=f)return"continue";f=o+y}var r=g[m],l="".concat(r.location,"_").concat(r.sequence);a.some((function(e){return e.name===l}))&&(m+=1);var d=b.getDynamicElementId(r),p="adthrive-".concat(h.location.replace("_","-").toLowerCase()),_=c([p,"".concat(p,"-").concat(h.sequence)],s(h.classNames),!1),S=b.addAd(i,d,h.position,_);if(S){var P=N(r,S);if(P.length){var A={clsDynamicAd:h,dynamicAd:r,element:S,sizes:P,name:l,infinite:n!==document};a.push(A),u.push({location:r.location,element:S}),"Recipe"===h.location&&++b._recipeCount,m+=1}i=S}},b=this,S=h.skip;S<v.length;S+=h.every){if("break"===_(S))break}}}catch(e){i={error:e}}finally{try{p&&!p.done&&(o=d.return)&&o.call(d)}finally{if(i)throw i.error}}return u.forEach((function(e){var t=e.location;e.element.style.minHeight=r.locationToMinHeight[t]})),a},n.prototype._injectDensitySlots=function(e,t){void 0===t&&(t=document);try{this._calculateMainContentHeightAndAllElements(e,t)}catch(e){return[]}var n=this._getDensitySettings(e,t),i=n.onePerViewport,o=n.targetAll,r=n.targetDensityUnits,a=n.combinedMax,l=n.numberOfUnits;return this._absoluteMinimumSpacingByDevice=i?window.innerHeight:this._absoluteMinimumSpacingByDevice,l?(this._adInjectionMap.filterUsed(),this._findElementsForAds(l,i,o,a,r,t),this._insertAds()):[]},n.prototype._overrideDefaultAdDensitySettingsWithSiteExperiment=function(){var e;if(null===(e=this._clsAdDensitySiteExperiment)||void 0===e?void 0:e.enabled){var t=this._clsAdDensitySiteExperiment.result;"number"==typeof t&&(this._clsOptions.siteAds.adDensityEnabled=!0,this._clsOptions.siteAds.adDensityLayout[this._densityDevice].adDensity=t)}},n.prototype._getDensitySettings=function(e,t){void 0===t&&(t=document);var n=this._clsOptions.siteAds.adDensityLayout,i=this._determineOverrides(n.pageOverrides),o=i.length?i[0]:n[this._densityDevice],r=o.adDensity,a=o.onePerViewport,l=this._shouldTargetAllEligible(r),u=this._getTargetDensityUnits(r,l),d=this._getCombinedMax(e,t),p=Math.min.apply(Math,c([],s(c([this._totalAvailableElements.length,u],s(d>0?[d]:[]),!1)),!1));return this._pubLog={onePerViewport:a,targetDensity:r,targetDensityUnits:u,combinedMax:d},{onePerViewport:a,targetAll:l,targetDensityUnits:u,combinedMax:d,numberOfUnits:p}},n.prototype._determineOverrides=function(e){var t=this;return e.filter((function(e){var t=D(e.pageSelector);return""===e.pageSelector||t.elements&&t.elements.length})).map((function(e){return e[t._densityDevice]}))},n.prototype._shouldTargetAllEligible=function(e){return e===this._densityMax},n.prototype._getTargetDensityUnits=function(e,t){return t?this._totalAvailableElements.length:Math.floor(e*this._mainContentHeight/(1-e)/this._minDivHeight)-this._recipeCount},n.prototype._getCombinedMax=function(t,n){return void 0===n&&(n=document),e(t.filter((function(e){var t;try{t=n.querySelector(e.elementSelector)}catch(e){}return t})).map((function(e){return Number(e.max)+Number(e.lazyMaxDefaulted?0:e.lazyMax)})).sort((function(e,t){return t-e}))[0],0)},n.prototype._elementLargerThanMainContent=function(e){return e.offsetHeight>=this._mainContentHeight&&this._totalAvailableElements.length>1},n.prototype._elementDisplayNone=function(e){var t=window.getComputedStyle(e,null).display;return t&&"none"===t||"none"===e.style.display},n.prototype._isBelowMaxes=function(e,t){return this._adInjectionMap.map.length<e&&this._adInjectionMap.map.length<t},n.prototype._findElementsForAds=function(e,t,n,i,o,r){var a=this;void 0===r&&(r=document),this._clsOptions.targetDensityLog={onePerViewport:t,combinedMax:i,targetDensityUnits:o,targetDensityPercentage:this._pubLog.targetDensity,mainContentHeight:this._mainContentHeight,recipeCount:this._recipeCount,numberOfEls:this._totalAvailableElements.length};var s=function(e){var t,c;try{for(var u=l(a._totalAvailableElements),d=u.next();!d.done;d=u.next()){var p=d.value,h=p.dynamicAd,y=p.element;if(a._logDensityInfo(y,h.elementSelector,e),!(!n&&a._elementLargerThanMainContent(y)||a._elementDisplayNone(y))){if(!a._isBelowMaxes(i,o))break;a._checkElementSpacing({dynamicAd:h,element:y,insertEvery:e,targetAll:n,target:r})}}}catch(e){t={error:e}}finally{try{d&&!d.done&&(c=u.return)&&c.call(u)}finally{if(t)throw t.error}}!a._usedAbsoluteMinimum&&a._smallerIncrementAttempts<5&&(++a._smallerIncrementAttempts,s(a._getSmallerIncrement(e)))},c=this._getInsertEvery(e,t,o);s(c)},n.prototype._getSmallerIncrement=function(e){var t=.6*e;return t<=this._absoluteMinimumSpacingByDevice&&(t=this._absoluteMinimumSpacingByDevice,this._usedAbsoluteMinimum=!0),t},n.prototype._insertAds=function(){var e=this,t=[];return this._adInjectionMap.filterUsed(),this._adInjectionMap.map.forEach((function(n,i){var o=n.el,r=n.dynamicAd,a=n.target,l=Number(r.sequence)+i,s=r.max,c=r.lazy&&l>s;r.sequence=l,r.lazy=c;var u=e._addContentAd(o,r,a);u&&(r.used=!0,t.push(u))})),t},n.prototype._getInsertEvery=function(e,t,n){var i=this._absoluteMinimumSpacingByDevice;return this._moreAvailableElementsThanUnitsToInject(n,e)?(this._usedAbsoluteMinimum=!1,i=this._useWiderSpacing(n,e)):(this._usedAbsoluteMinimum=!0,i=this._useSmallestSpacing(t)),t&&window.innerHeight>i?window.innerHeight:i},n.prototype._useWiderSpacing=function(e,t){return this._mainContentHeight/Math.min(e,t)},n.prototype._useSmallestSpacing=function(e){return e&&window.innerHeight>this._absoluteMinimumSpacingByDevice?window.innerHeight:this._absoluteMinimumSpacingByDevice},n.prototype._moreAvailableElementsThanUnitsToInject=function(e,t){return this._totalAvailableElements.length>e||this._totalAvailableElements.length>t},n.prototype._logDensityInfo=function(e,t,n){var i=this._pubLog;i.onePerViewport,i.targetDensity;i.targetDensityUnits;i.combinedMax,this._totalAvailableElements.length},n.prototype._checkElementSpacing=function(e){var t=e.dynamicAd,n=e.element,i=e.insertEvery,r=e.targetAll,a=e.target,l=void 0===a?document:a;(this._isFirstAdInjected()||this._hasProperSpacing(n,t,r,i))&&(++this._totalContentInserted,this._markSpotForContentAd(n,o({},t),l))},n.prototype._isFirstAdInjected=function(){return!this._adInjectionMap.map.length},n.prototype._markSpotForContentAd=function(e,t,n){void 0===n&&(n=document);var i="beforebegin"===t.position||"afterbegin"===t.position;this._adInjectionMap.add(e,this._getElementCoords(e,i),t,n),this._adInjectionMap.sort()},n.prototype._hasProperSpacing=function(e,t,n,i){var o="beforebegin"===t.position||"afterbegin"===t.position,r="beforeend"===t.position||"afterbegin"===t.position,a=n||this._isElementFarEnoughFromOtherAdElements(e,i,o),l=r||this._isElementNotInRow(e,o),s=-1===e.id.indexOf("AdThrive_".concat("Below_Post"));return a&&l&&s},n.prototype._isElementFarEnoughFromOtherAdElements=function(e,t,n){for(var i=this._getElementCoords(e,n),o=!1,r=0;r<this._adInjectionMap.map.length;r++){var a=this._adInjectionMap.map[r].coords,l=this._adInjectionMap.map[r+1]&&this._adInjectionMap.map[r+1].coords;if(o=i-t>a&&(!l||i+t<l))break}return o},n.prototype._isElementNotInRow=function(e,t){var n=e.previousElementSibling,i=e.nextElementSibling,o=t?!n&&i||n&&e.tagName!==n.tagName?i:n:i;return!(!o||0!==e.getBoundingClientRect().height)||(!o||e.getBoundingClientRect().top!==o.getBoundingClientRect().top)},n.prototype._calculateMainContentHeightAndAllElements=function(e,t){void 0===t&&(t=document);var n=this._setMainContentAndElements(e,t);this._mainContentDiv=n;var i=this._mainContentDiv.querySelector("div #comments, section .comments");this._mainContentHeight=i?this._mainContentDiv.offsetHeight-i.offsetHeight:this._mainContentDiv.offsetHeight},n.prototype._setMainContentAndElements=function(e,t){void 0===t&&(t=document);var n=this._getElementsFromDynamicAdEntry(e,t);if(0===n.length)throw Error("No Main Content Elements Found");return Array.from(n).reduce((function(e,t){return t.offsetHeight>e.offsetHeight?t:e}))||document.body},n.prototype._getElementsFromDynamicAdEntry=function(e,t){var n=this;void 0===t&&(t=document);var i=this._getLongestArticleTag(t),o=i?[i]:[],r=[];e.forEach((function(e){var i=Array.from(n.getElements(e.elementSelector,t)).slice(0,e.skip);n._getSelectors(e.elementSelector).forEach((function(a){for(var l=t.querySelectorAll(a),s=function(t){var a=l[t];if(n._adInjectionMap.map.some((function(e){return e.el.isEqualNode(a)})))return"continue";var s=a&&a.parentElement;s&&s!==document.body?o.push(s):o.push(a),-1===i.indexOf(a)&&r.push({dynamicAd:e,element:a})},c=0;c<l.length;c++)s(c)}))}));var a=this._getContainerDivTop(t);return this._totalAvailableElements=r.sort((function(e,t){return e.element.getBoundingClientRect().top-a-(t.element.getBoundingClientRect().top-a)})),o},n.prototype._getContainerDivTop=function(e){return void 0===e&&(e=document),(e===document?document.body:e).getBoundingClientRect().top},n.prototype._getLongestArticleTag=function(e){void 0===e&&(e=document);var t=e.querySelectorAll("article");if(0===t.length)return null;var n=Array.from(t).reduce((function(e,t){return t.offsetHeight>e.offsetHeight?t:e}));return n&&n.offsetHeight>1.5*window.innerHeight?n:null},n.prototype._getSelectors=function(e){return e.includes(",")?e.split(","):[e]},n.prototype._getElementCoords=function(e,t){void 0===t&&(t=!1);var n=e.getBoundingClientRect();return(t?n.top:n.bottom)+window.scrollY},n.prototype._addContentAd=function(e,t,n){void 0===n&&(n=document);var i=null,o="adthrive-".concat(t.location.replace("_","-").toLowerCase()),r="".concat(o,"-").concat(t.sequence),a=this.addAd(e,this.getDynamicElementId(t),t.position,c([o,r],s(t.classNames),!1));if(a){var l=N(t,a);if(l.length)a.style.minHeight=this.locationToMinHeight[t.location],i={clsDynamicAd:t,dynamicAd:t,element:a,sizes:l,name:"".concat(t.location,"_").concat(t.sequence),infinite:n!==document}}return i},n.prototype.getDynamicElementId=function(e){return"".concat("AdThrive","_").concat(e.location,"_").concat(e.sequence,"_").concat(this._device)},n.prototype.getElements=function(e,t){return void 0===t&&(t=document),t.querySelectorAll(e)},n.prototype.addAd=function(e,t,n,i){if(void 0===i&&(i=[]),!document.getElementById(t)){var o='<div id="'.concat(t,'" class="adthrive-ad ').concat(i.join(" "),'"></div>');e.insertAdjacentHTML(n,o)}return document.getElementById(t)},n.prototype._repeatDynamicAds=function(t){for(var n=[],i=t.lazy?e(this.locationMaxLazySequence.get(t.location),0):0,r=t.max,a=t.lazyMax,l=0===i&&t.lazy?r+a:Math.min(Math.max(i-t.sequence+1,0),r+a),s=Math.max(r,l),c=0;c<s;c++){var u=Number(t.sequence)+c,d=t.lazy&&c>=r;n.push(o(o({},t),{sequence:u,lazy:d}))}return n},n.prototype._locationEnabled=function(e){var t=this._clsOptions.enabledLocations.includes(e.location),n=this._clsOptions.disableAds&&this._clsOptions.disableAds.all||document.body.classList.contains("adthrive-disable-all"),i=!document.body.classList.contains("adthrive-disable-content")&&!this._clsOptions.disableAds.reasons.has("content_plugin");return t&&!n&&i},n}(),ie=function(e){function t(){var t=e.call(this)||this;return t.key="sekho",t._result=!1,t._choices=[{choice:!0},{choice:!1}],t._result=t.run(),t.setExperimentKey(),t}return i(t,e),Object.defineProperty(t.prototype,"result",{get:function(){return this._result},enumerable:!1,configurable:!0}),t.prototype.run=function(){return new T(.05).get()},t}(G),oe=function(e){function t(t,n){var i=e.call(this,t,(new ie).result,"ClsVideoInsertion")||this;return i._videoConfig=t,i._clsOptions=n,i._IN_POST_SELECTOR=".adthrive-video-player",i._WRAPPER_BAR_HEIGHT=36,i._playersAddedFromPlugin=[],i}return i(t,e),t.prototype.init=function(){this._initializePlayers()},t.prototype._wrapJWPlayerWithCLS=function(e,t,n){if(void 0===n&&(n=0),e.parentNode){var i=e.offsetWidth*(9/16),o=this._createGenericCLSWrapper(i,t,n);return e.parentNode.insertBefore(o,e),o.appendChild(e),o}return null},t.prototype._createSekindoCLSWrapper=function(e,t){var n=this._getTitleHeight(document.createElement("h4"));return this._createGenericCLSWrapper(e,t,n)},t.prototype._createGenericCLSWrapper=function(e,t,n){var i=document.createElement("div");return i.id="cls-video-container-".concat(t),i.className="adthrive",i.style.minHeight="".concat(e+n,"px"),i},t.prototype._getTitleHeight=function(e){e.innerText="Title",e.style.visibility="hidden",document.body.appendChild(e);var t=window.getComputedStyle(e),n=parseInt(t.height,10),i=parseInt(t.marginTop,10),o=parseInt(t.marginBottom,10);return document.body.removeChild(e),Math.min(n+o+i,50)},t.prototype._initializePlayers=function(){var e=document.querySelectorAll(this._IN_POST_SELECTOR);e.length&&this._initializeRelatedPlayers(e),this._shouldRunAutoplayPlayers()&&this._determineAutoplayPlayers()},t.prototype._createStationaryRelatedPlayer=function(e,t){var n="mobile"===this._device?[400,225]:[640,360],i=h.Video_In_Post_ClicktoPlay_SoundOn;if(t&&e.mediaId){var o=this._wrapJWPlayerWithCLS(t,e.mediaId);this._playersAddedFromPlugin.push(e.mediaId),o&&this._clsOptions.setInjectedVideoSlots({playerId:e.playerId,playerName:i,playerSize:n,element:o,type:"stationaryRelated"})}},t.prototype._createStickyRelatedPlayer=function(e,t){var n="mobile"===this._device?[400,225]:[640,360],i=h.Video_Individual_Autoplay_SOff;if(this._stickyRelatedOnPage=!0,this._videoConfig.mobileStickyPlayerOnPage="mobile"===this._device,t&&e.position&&e.mediaId){var o=document.createElement("div");t.insertAdjacentElement(e.position,o);var r=document.createElement("h3");r.style.margin="10px 0";var a=this._getTitleHeight(r),l=this._wrapJWPlayerWithCLS(o,e.mediaId,this._WRAPPER_BAR_HEIGHT+a);this._playersAddedFromPlugin.push(e.mediaId),l&&this._clsOptions.setInjectedVideoSlots({playlistId:e.playlistId,playerId:e.playerId,playerSize:n,playerName:i,element:o,type:"stickyRelated"})}},t.prototype._createSekindoPlayer=function(e,t){var n=e.playlistId,i="mobile"===this._device?{width:340,height:260}:{width:320,height:250},o=this._createSekindoCLSWrapper(i.height,n);t.insertAdjacentElement(e.position,o),this._playersAddedFromPlugin.push(n),o&&this._clsOptions.setInjectedVideoSlots({playlistId:n,playerId:e.playerId,playerSize:[i.width,i.height],element:o,type:"sekindo"})},t.prototype._createPlaylistPlayer=function(e,t){var n=e.playlistId,i="mobile"===this._device?h.Video_Coll_SOff_Smartphone:h.Video_Collapse_Autoplay_SoundOff,o="mobile"===this._device?[400,225]:[640,360];this._videoConfig.mobileStickyPlayerOnPage=!0;var r=document.createElement("div");t.insertAdjacentElement(e.position,r);var a=this._wrapJWPlayerWithCLS(r,n,this._WRAPPER_BAR_HEIGHT);this._playersAddedFromPlugin.push("playlist-".concat(n)),a&&this._clsOptions.setInjectedVideoSlots({playlistId:e.playlistId,playerId:e.playerId,playerSize:o,playerName:i,element:r,type:"stickyPlaylist"})},t.prototype._isVideoAllowedOnPage=function(){var e=this._clsOptions.disableAds;return e&&e.video?(e.reasons.has("video_tag")||e.reasons.has("video_plugin")||e.reasons.has("video_page"),!1):!this._clsOptions.videoDisabledFromPlugin},t}(function(e){function t(t,n,i){var o=e.call(this)||this;o._videoConfig=t,o._component=i,o._stickyRelatedOnPage=!1,o._contextualMediaIds=[];var r,a=o._videoConfig.players||[];o._device=(void 0===r&&(r=navigator.userAgent),/Windows NT|Macintosh/i.test(r)?"desktop":"mobile"),o._potentialPlayerMap=o._setPotentialPlayerMap(n);var l=a.filter((function(e){return"stationaryRelated"===e.type&&e.enabled}));return o._potentialPlayerMap.stationaryRelated=l,o}return i(t,e),t.prototype._setPotentialPlayerMap=function(e){var t=this,n=this._videoConfig.players,i={stickyRelated:[],stickyPlaylist:[],sekindo:[],stationaryRelated:[]};return n&&n.length?n.filter((function(e){var n;return null===(n=e.devices)||void 0===n?void 0:n.includes(t._device)})).reduce((function(n,i){return n[i.type]||(x.event(t._component,"constructor","Unknown Video Player Type detected",i.type),n[i.type]=[]),i.enabled&&(e&&"sekindo"===i.type||n[i.type].push(i)),n}),i):i},t.prototype._checkPlayerSelectorOnPage=function(e){var t=this,n=this._potentialPlayerMap[e].map((function(e){return{player:e,playerElement:t._getPlacementElement(e)}}));return n.length?n[0]:{player:null,playerElement:null}},t.prototype._getOverrideElement=function(e,t,n){if(e&&t){var i=document.createElement("div");t.insertAdjacentElement(e.position,i),n=i}else{var o=this._checkPlayerSelectorOnPage("stickyPlaylist"),r=o.player,a=o.playerElement;if(r&&a){i=document.createElement("div");a.insertAdjacentElement(r.position,i),n=i}}return n},t.prototype._shouldOverrideElement=function(e){var t=e.getAttribute("override-embed");return"true"===t||"false"===t?"true"===t:!!this._videoConfig.contextualSettings&&this._videoConfig.contextualSettings.overrideEmbedLocation},t.prototype._getPlacementElement=function(e){var t=D(e.pageSelector),n=O(e.elementSelector);return t.valid?e.pageSelector&&!t.elements.length?(x.event("VideoUtils","getPlacementElement",new Error("PSNF: ".concat(e.pageSelector," does not exist on the page"))),null):n.valid?n.elements.length>e.skip?n.elements[e.skip]:(x.event("VideoUtils","getPlacementElement",new Error("ESNF: ".concat(e.elementSelector," does not exist on the page"))),null):null:null},t.prototype._getEmbeddedPlayerType=function(e){var t=e.getAttribute("data-player-type");return t&&"default"!==t||(t=this._videoConfig.contextualSettings?this._videoConfig.contextualSettings.defaultPlayerType:"static"),this._stickyRelatedOnPage&&(t="static"),t},t.prototype._getUnusedMediaId=function(e){var t=e.getAttribute("data-video-id");return!(!t||this._contextualMediaIds.includes(t))&&(this._contextualMediaIds.push(t),t)},t.prototype._createRelatedPlayer=function(e,t,n){"collapse"===t?this._createCollapsePlayer(e,n):"static"===t&&this._createStaticPlayer(e,n)},t.prototype._createCollapsePlayer=function(e,t){var n=this._checkPlayerSelectorOnPage("stickyRelated"),i=n.player,r=n.playerElement,a=i||this._potentialPlayerMap.stationaryRelated[0];a&&a.playerId&&(this._shouldOverrideElement(t)&&(t=this._getOverrideElement(i,r,t)),t=document.querySelector("#cls-video-container-".concat(e," > div"))||t,this._createStickyRelatedPlayer(o(o({},a),{mediaId:e}),t))},t.prototype._createStaticPlayer=function(e,t){if(this._potentialPlayerMap.stationaryRelated.length&&this._potentialPlayerMap.stationaryRelated[0].playerId){var n=this._potentialPlayerMap.stationaryRelated[0];this._createStationaryRelatedPlayer(o(o({},n),{mediaId:e}),t)}},t.prototype._shouldRunAutoplayPlayers=function(){return!(!this._isVideoAllowedOnPage()||!(this._potentialPlayerMap.stickyRelated.length||this._potentialPlayerMap.stickyPlaylist.length||this._potentialPlayerMap.sekindo.length))},t.prototype._determineAutoplayPlayers=function(){var e=this._component,t="VideoManagerComponent"===e,n=this._config;if(this._stickyRelatedOnPage)x.event(e,"stickyRelatedOnPage",t&&{device:n&&n.context.device,isDesktop:this._device}||{});else{var i=this._checkPlayerSelectorOnPage("stickyPlaylist"),o=i.player,r=i.playerElement,a=this._checkPlayerSelectorOnPage("sekindo"),l=a.player,s=a.playerElement;o&&o.playerId&&o.playlistId&&r?this._createPlaylistPlayer(o,r):l&&l.playlistId&&s?this._createSekindoPlayer(l,s):x.event(e,"noStickyPlaylistOrSekindo",t&&{vendor:"none",device:n&&n.context.device,isDesktop:this._device}||{})}},t.prototype._initializeRelatedPlayers=function(e){for(var t=0;t<e.length;t++){var n=e[t],i=this._getEmbeddedPlayerType(n),o=this._getUnusedMediaId(n);o&&this._createRelatedPlayer(o,i,n)}},t}(function(){function e(){}return Object.defineProperty(e.prototype,"enabled",{get:function(){return!0},enumerable:!1,configurable:!0}),e}())),re=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return i(t,e),t}(function(){function e(){this._map=[]}return e.prototype.add=function(e,t,n,i){void 0===i&&(i=document),this._map.push({el:e,coords:t,dynamicAd:n,target:i})},Object.defineProperty(e.prototype,"map",{get:function(){return this._map},enumerable:!1,configurable:!0}),e.prototype.sort=function(){this._map.sort((function(e,t){return e.coords-t.coords}))},e.prototype.filterUsed=function(){this._map=this._map.filter((function(e){return!e.dynamicAd.used}))},e}());(z=new M)&&z.enabled&&(new ne(z,new re).start(),new oe(new L(z),z).init())}();
</script><script data-no-optimize="1" data-cfasync="false">(function () {var clsElements = document.querySelectorAll("script[id^='cls-']"); window.adthriveCLS && clsElements && clsElements.length === 0 ? window.adthriveCLS.injectedFromPlugin = false : ""; })();</script><script type="rocketlazyloadscript">window.advanced_ads_check_adblocker=function(t){var n=[],e=null;function i(t){(window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||function(t){return setTimeout(t,16)}).call(window,t)}return i((function(){var t=document.createElement("div");t.innerHTML="&nbsp;",t.setAttribute("class","ad_unit ad-unit text-ad text_ad pub_300x250"),t.setAttribute("style","width: 1px !important; height: 1px !important; position: absolute !important; left: 0px !important; top: 0px !important; overflow: hidden !important;"),document.body.appendChild(t),i((function(){var i=window.getComputedStyle&&window.getComputedStyle(t),o=i&&i.getPropertyValue("-moz-binding");e=i&&"none"===i.getPropertyValue("display")||"string"==typeof o&&-1!==o.indexOf("about:");for(var a=0,r=n.length;a<r;a++)n[a](e);n=[]}))})),function(t){null!==e?t(e):n.push(t)}}();</script><!-- Drip -->
<script type="rocketlazyloadscript" data-cfasync="false" data-rocket-type="text/javascript">
  var _dcq = _dcq || [];
  var _dcs = _dcs || {};
  _dcs.account = '9556588';

  (function() {
    var dc = document.createElement('script');
    dc.type = 'text/javascript'; dc.async = true;
    dc.src = '//tag.getdrip.com/9556588.js';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(dc, s);
  })();
</script>
<!-- end Drip --><script type="e6851de2356a2aa710417145-text/javascript">
		/* MonsterInsights Scroll Tracking */
		if ( typeof(jQuery) !== 'undefined' ) {
		jQuery( document ).ready(function(){
		function monsterinsights_scroll_tracking_load() {
		if ( ( typeof(__gaTracker) !== 'undefined' && __gaTracker && __gaTracker.hasOwnProperty( "loaded" ) && __gaTracker.loaded == true ) || ( typeof(__gtagTracker) !== 'undefined' && __gtagTracker ) ) {
		(function(factory) {
		factory(jQuery);
		}(function($) {

		/* Scroll Depth */
		"use strict";
		var defaults = {
		percentage: true
		};

		var $window = $(window),
		cache = [],
		scrollEventBound = false,
		lastPixelDepth = 0;

		/*
		* Plugin
		*/

		$.scrollDepth = function(options) {

		var startTime = +new Date();

		options = $.extend({}, defaults, options);

		/*
		* Functions
		*/

		function sendEvent(action, label, scrollDistance, timing) {
		if ( 'undefined' === typeof MonsterInsightsObject || 'undefined' === typeof MonsterInsightsObject.sendEvent ) {
		return;
		}
			var type        = 'event';
	var eventName   = action;
	var fieldsArray = {
	event_category : 'Scroll Depth',
	event_label    : label,
	value          : 1,
	non_interaction: true,
	send_to: 'UA-44039733-3'
	};

	MonsterInsightsObject.sendEvent( type, eventName, fieldsArray );

	if (arguments.length > 3) {
	var type        = 'event';
	var eventName   = 'timing_complete';
	fieldsArray = {
	event_category : 'Scroll Depth',
	name           : action,
	event_label    : label,
	value          : timing,
	non_interaction: 1,
	send_to: 'UA-44039733-3'
	};

	MonsterInsightsObject.sendEvent( type, eventName, fieldsArray );
	}
			}

		function calculateMarks(docHeight) {
		return {
		'25%' : parseInt(docHeight * 0.25, 10),
		'50%' : parseInt(docHeight * 0.50, 10),
		'75%' : parseInt(docHeight * 0.75, 10),
		/* Cushion to trigger 100% event in iOS */
		'100%': docHeight - 5
		};
		}

		function checkMarks(marks, scrollDistance, timing) {
		/* Check each active mark */
		$.each(marks, function(key, val) {
		if ( $.inArray(key, cache) === -1 && scrollDistance >= val ) {
		sendEvent('Percentage', key, scrollDistance, timing);
		cache.push(key);
		}
		});
		}

		function rounded(scrollDistance) {
		/* Returns String */
		return (Math.floor(scrollDistance/250) * 250).toString();
		}

		function init() {
		bindScrollDepth();
		}

		/*
		* Public Methods
		*/

		/* Reset Scroll Depth with the originally initialized options */
		$.scrollDepth.reset = function() {
		cache = [];
		lastPixelDepth = 0;
		$window.off('scroll.scrollDepth');
		bindScrollDepth();
		};

		/* Add DOM elements to be tracked */
		$.scrollDepth.addElements = function(elems) {

		if (typeof elems == "undefined" || !$.isArray(elems)) {
		return;
		}

		$.merge(options.elements, elems);

		/* If scroll event has been unbound from window, rebind */
		if (!scrollEventBound) {
		bindScrollDepth();
		}

		};

		/* Remove DOM elements currently tracked */
		$.scrollDepth.removeElements = function(elems) {

		if (typeof elems == "undefined" || !$.isArray(elems)) {
		return;
		}

		$.each(elems, function(index, elem) {

		var inElementsArray = $.inArray(elem, options.elements);
		var inCacheArray = $.inArray(elem, cache);

		if (inElementsArray != -1) {
		options.elements.splice(inElementsArray, 1);
		}

		if (inCacheArray != -1) {
		cache.splice(inCacheArray, 1);
		}

		});

		};

		/*
		* Throttle function borrowed from:
		* Underscore.js 1.5.2
		* http://underscorejs.org
		* (c) 2009-2013 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
		* Underscore may be freely distributed under the MIT license.
		*/

		function throttle(func, wait) {
		var context, args, result;
		var timeout = null;
		var previous = 0;
		var later = function() {
		previous = new Date;
		timeout = null;
		result = func.apply(context, args);
		};
		return function() {
		var now = new Date;
		if (!previous) previous = now;
		var remaining = wait - (now - previous);
		context = this;
		args = arguments;
		if (remaining <= 0) {
		clearTimeout(timeout);
		timeout = null;
		previous = now;
		result = func.apply(context, args);
		} else if (!timeout) {
		timeout = setTimeout(later, remaining);
		}
		return result;
		};
		}

		/*
		* Scroll Event
		*/

		function bindScrollDepth() {

		scrollEventBound = true;

		$window.on('scroll.scrollDepth', throttle(function() {
		/*
		* We calculate document and window height on each scroll event to
		* account for dynamic DOM changes.
		*/

		var docHeight = $(document).height(),
		winHeight = window.innerHeight ? window.innerHeight : $window.height(),
		scrollDistance = $window.scrollTop() + winHeight,

		/* Recalculate percentage marks */
		marks = calculateMarks(docHeight),

		/* Timing */
		timing = +new Date - startTime;

		checkMarks(marks, scrollDistance, timing);
		}, 500));

		}

		init();
		};

		/* UMD export */
		return $.scrollDepth;

		}));

		jQuery.scrollDepth();
		} else {
		setTimeout(monsterinsights_scroll_tracking_load, 200);
		}
		}
		monsterinsights_scroll_tracking_load();
		});
		}
		/* End MonsterInsights Scroll Tracking */
		
</script><script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-includes/js/comment-reply.min.js?ver=6.1.1' id='comment-reply-js' defer></script>
<script type="rocketlazyloadscript" data-minify="1" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/cache/min/1/npm/mathjax@3/es5/tex-chtml.js?ver=1668605941' id='mathjax-js' defer></script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' id='rocket-browser-checker-js-after'>
"use strict";var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){return protoProps&&defineProperties(Constructor.prototype,protoProps),staticProps&&defineProperties(Constructor,staticProps),Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}var RocketBrowserCompatibilityChecker=function(){function RocketBrowserCompatibilityChecker(options){_classCallCheck(this,RocketBrowserCompatibilityChecker),this.passiveSupported=!1,this._checkPassiveOption(this),this.options=!!this.passiveSupported&&options}return _createClass(RocketBrowserCompatibilityChecker,[{key:"_checkPassiveOption",value:function(self){try{var options={get passive(){return!(self.passiveSupported=!0)}};window.addEventListener("test",null,options),window.removeEventListener("test",null,options)}catch(err){self.passiveSupported=!1}}},{key:"initRequestIdleCallback",value:function(){!1 in window&&(window.requestIdleCallback=function(cb){var start=Date.now();return setTimeout(function(){cb({didTimeout:!1,timeRemaining:function(){return Math.max(0,50-(Date.now()-start))}})},1)}),!1 in window&&(window.cancelIdleCallback=function(id){return clearTimeout(id)})}},{key:"isDataSaverModeOn",value:function(){return"connection"in navigator&&!0===navigator.connection.saveData}},{key:"supportsLinkPrefetch",value:function(){var elem=document.createElement("link");return elem.relList&&elem.relList.supports&&elem.relList.supports("prefetch")&&window.IntersectionObserver&&"isIntersecting"in IntersectionObserverEntry.prototype}},{key:"isSlowConnection",value:function(){return"connection"in navigator&&"effectiveType"in navigator.connection&&("2g"===navigator.connection.effectiveType||"slow-2g"===navigator.connection.effectiveType)}}]),RocketBrowserCompatibilityChecker}();
</script>
<script type="e6851de2356a2aa710417145-text/javascript" id='rocket-preload-links-js-extra'>
/* <![CDATA[ */
var RocketPreloadLinksConfig = {"excludeUris":"\/register\/machine-learning-university\/|\/courses\/\/lessons\/holding-back-goals\/|\/courses\/course-get-started\/|\/courses\/course-get-started\/lessons\/holding-back-goals\/|\/courses\/course-get-started\/lessons\/why-machine-learning-does-not-have-to-be-so-hard\/|\/courses\/course-get-started\/lessons\/how-to-think-about-machine-learning\/|\/courses\/course-get-started\/lessons\/find-your-machine-learning-tribe\/|\/courses\/step-by-step-process\/|\/courses\/probability-for-machine-learning\/|\/account\/|\/register\/|\/courses\/|\/machine-learning-mastery-university-registration\/|\/register\/|\/newsletter\/|\/(?:.+\/)?feed(?:\/(?:.+\/?)?)?$|\/(?:.+\/)?embed\/|\/(index\\.php\/)?wp\\-json(\/.*|$)|\/refer\/|\/go\/|\/recommend\/|\/recommends\/","usesTrailingSlash":"1","imageExt":"jpg|jpeg|gif|png|tiff|bmp|webp|avif|pdf|doc|docx|xls|xlsx|php","fileExt":"jpg|jpeg|gif|png|tiff|bmp|webp|avif|pdf|doc|docx|xls|xlsx|php|html|htm","siteUrl":"https:\/\/machinelearningmastery.com","onHoverDelay":"100","rateThrottle":"3"};
/* ]]> */
</script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' id='rocket-preload-links-js-after'>
(function() {
"use strict";var r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e=function(){function i(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,"value"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(e,t,n){return t&&i(e.prototype,t),n&&i(e,n),e}}();function i(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var t=function(){function n(e,t){i(this,n),this.browser=e,this.config=t,this.options=this.browser.options,this.prefetched=new Set,this.eventTime=null,this.threshold=1111,this.numOnHover=0}return e(n,[{key:"init",value:function(){!this.browser.supportsLinkPrefetch()||this.browser.isDataSaverModeOn()||this.browser.isSlowConnection()||(this.regex={excludeUris:RegExp(this.config.excludeUris,"i"),images:RegExp(".("+this.config.imageExt+")$","i"),fileExt:RegExp(".("+this.config.fileExt+")$","i")},this._initListeners(this))}},{key:"_initListeners",value:function(e){-1<this.config.onHoverDelay&&document.addEventListener("mouseover",e.listener.bind(e),e.listenerOptions),document.addEventListener("mousedown",e.listener.bind(e),e.listenerOptions),document.addEventListener("touchstart",e.listener.bind(e),e.listenerOptions)}},{key:"listener",value:function(e){var t=e.target.closest("a"),n=this._prepareUrl(t);if(null!==n)switch(e.type){case"mousedown":case"touchstart":this._addPrefetchLink(n);break;case"mouseover":this._earlyPrefetch(t,n,"mouseout")}}},{key:"_earlyPrefetch",value:function(t,e,n){var i=this,r=setTimeout(function(){if(r=null,0===i.numOnHover)setTimeout(function(){return i.numOnHover=0},1e3);else if(i.numOnHover>i.config.rateThrottle)return;i.numOnHover++,i._addPrefetchLink(e)},this.config.onHoverDelay);t.addEventListener(n,function e(){t.removeEventListener(n,e,{passive:!0}),null!==r&&(clearTimeout(r),r=null)},{passive:!0})}},{key:"_addPrefetchLink",value:function(i){return this.prefetched.add(i.href),new Promise(function(e,t){var n=document.createElement("link");n.rel="prefetch",n.href=i.href,n.onload=e,n.onerror=t,document.head.appendChild(n)}).catch(function(){})}},{key:"_prepareUrl",value:function(e){if(null===e||"object"!==(void 0===e?"undefined":r(e))||!1 in e||-1===["http:","https:"].indexOf(e.protocol))return null;var t=e.href.substring(0,this.config.siteUrl.length),n=this._getPathname(e.href,t),i={original:e.href,protocol:e.protocol,origin:t,pathname:n,href:t+n};return this._isLinkOk(i)?i:null}},{key:"_getPathname",value:function(e,t){var n=t?e.substring(this.config.siteUrl.length):e;return n.startsWith("/")||(n="/"+n),this._shouldAddTrailingSlash(n)?n+"/":n}},{key:"_shouldAddTrailingSlash",value:function(e){return this.config.usesTrailingSlash&&!e.endsWith("/")&&!this.regex.fileExt.test(e)}},{key:"_isLinkOk",value:function(e){return null!==e&&"object"===(void 0===e?"undefined":r(e))&&(!this.prefetched.has(e.href)&&e.origin===this.config.siteUrl&&-1===e.href.indexOf("?")&&-1===e.href.indexOf("#")&&!this.regex.excludeUris.test(e.href)&&!this.regex.images.test(e.href))}}],[{key:"run",value:function(){"undefined"!=typeof RocketPreloadLinksConfig&&new n(new RocketBrowserCompatibilityChecker({capture:!0,passive:!0}),RocketPreloadLinksConfig).init()}}]),n}();t.run();
}());
</script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advanced-ads-pro/front-js-extra'>
/* <![CDATA[ */
var advadsCfpInfo = {"cfpExpHours":"3","cfpClickLimit":"3","cfpBan":"7","cfpPath":"","cfpDomain":""};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/337/assets/js/4.js?ver=1668605941' id='advanced-ads-pro/front-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='q2w3_fixed_widget-js-extra'>
/* <![CDATA[ */
var q2w3_sidebar_options = [{"sidebar":"primary","use_sticky_position":false,"margin_top":10,"margin_bottom":0,"stop_elements_selectors":"","screen_max_width":400,"screen_max_height":0,"widgets":["#custom_html-89","#custom_html-110","#custom_html-50","#custom_html-90","#custom_html-100","#custom_html-91","#custom_html-58","#custom_html-60","#custom_html-59","#custom_html-84","#custom_html-51","#custom_html-56","#custom_html-55","#custom_html-57","#custom_html-53","#custom_html-54","#custom_html-52","#custom_html-48","#custom_html-49","#custom_html-80","#custom_html-47","#custom_html-85","#custom_html-105","#custom_html-104","#custom_html-30","#custom_html-29","#custom_html-28","#custom_html-27","#custom_html-3","#custom_html-24","#custom_html-23","#custom_html-22","#custom_html-21","#custom_html-107","#custom_html-101","#custom_html-20","#custom_html-19","#custom_html-18","#custom_html-17","#custom_html-16","#custom_html-15","#custom_html-14","#custom_html-13","#custom_html-11","#custom_html-10","#custom_html-5","#custom_html-9","#custom_html-61","#custom_html-81","#custom_html-86","#custom_html-92","#custom_html-97","#custom_html-109"]}];
/* ]]> */
</script>
<script type="rocketlazyloadscript" data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/plugins/q2w3-fixed-widget/js/frontend.min.js?ver=6.2.0' id='q2w3_fixed_widget-js' defer></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advanced-ads-pro/cache_busting-js-extra'>
/* <![CDATA[ */
var advanced_ads_pro_ajax_object = {"ajax_url":"https:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php","lazy_load_module_enabled":"","lazy_load":{"default_offset":0,"offsets":[]},"moveintohidden":"","wp_timezone_offset":"39600"};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/337/assets/js/577.js?ver=1668605942' id='advanced-ads-pro/cache_busting-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advadsTrackingScript-js-extra'>
/* <![CDATA[ */
var advadsTracking = {"impressionActionName":"aatrack-records","clickActionName":"aatrack-click","targetClass":"machi-target","blogId":"1","frontendPrefix":"machi-"};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/779/public/assets/js/755/437.js?ver=1668605942' id='advadsTrackingScript-js'></script>
<script type="e6851de2356a2aa710417145-text/javascript" id='advadsTrackingGAFront-js-extra'>
/* <![CDATA[ */
var advadsGALocale = {"Impressions":"Impressions","Clicks":"Clicks"};
/* ]]> */
</script>
<script data-minify="1" type="e6851de2356a2aa710417145-text/javascript" src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/uploads/444/779/public/assets/js/755/512.js?ver=1668605942' id='advadsTrackingGAFront-js'></script>
<script type="rocketlazyloadscript" data-minify="1" defer data-rocket-type='text/javascript' src='https://machinelearningmastery.com/wp-content/cache/min/1/wp-content/plugins/akismet/_inc/akismet-frontend.js?ver=1668605942' id='akismet-frontend-js'></script>
<!--noptimize--><script type="rocketlazyloadscript">window.advads_admin_bar_items = [{"title":"Header","type":"placement"}];</script><!--/noptimize--><script type="rocketlazyloadscript" data-rocket-type='text/javascript'>function initTwitCount(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://static1.twitcount.com/js/twitcount.js';fjs.parentNode.insertBefore(js,fjs)}}
        var ssb_twit_count_init=!1;addEventListener('mouseover',function(event){if(!ssb_twit_count_init){initTwitCount(document,'script','twitcount_plugins')
        ssb_twit_count_init=!0}})</script><!--noptimize--><script type="e6851de2356a2aa710417145-text/javascript">!function(){window.advanced_ads_ready_queue=window.advanced_ads_ready_queue||[],advanced_ads_ready_queue.push=window.advanced_ads_ready;for(var d=0,a=advanced_ads_ready_queue.length;d<a;d++)advanced_ads_ready(advanced_ads_ready_queue[d])}();</script><!--/noptimize--><script type="e6851de2356a2aa710417145-text/javascript">!function(){"use strict";!function(e){if(-1===e.cookie.indexOf("__adblocker")){e.cookie="__adblocker=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/";var t=new XMLHttpRequest;t.open("GET","https://ads.adthrive.com/abd/abd.js",!0),t.onreadystatechange=function(){if(XMLHttpRequest.DONE===t.readyState)if(200===t.status){var a=e.createElement("script");a.innerHTML=t.responseText,e.getElementsByTagName("head")[0].appendChild(a)}else{var n=new Date;n.setTime(n.getTime()+3e5),e.cookie="__adblocker=true; expires="+n.toUTCString()+"; path=/"}},t.send()}}(document)}();
</script><script id="machi-tracking" type="e6851de2356a2aa710417145-text/javascript">var advads_tracking_ads = {};var advads_tracking_urls = {"1":"https:\/\/machinelearningmastery.com\/wp-admin\/admin-ajax.php"};var advads_tracking_methods = {"1":"ga"};var advads_tracking_parallel = {"1":false};var advads_tracking_linkbases = {"1":"https:\/\/machinelearningmastery.com\/linkout\/"};var advads_gatracking_uids = {"1":"UA-44039733-3"};var advads_gatracking_allads = {"1":{"13588":{"title":"Adsense 300 Backfill","target":"","impression":true,"click":true},"13572":{"title":"Test 300","target":"","impression":true,"click":true}}};var advads_gatracking_anonym = false;var advads_gatracking_transmitpageqs = {};</script><script type="rocketlazyloadscript">!function(){"use strict";var e;e=document,function(){var t,n;function r(){var t=e.createElement("script");t.src="https://cafemedia-com.videoplayerhub.com/galleryplayer.js",e.head.appendChild(t)}function a(){var t=e.cookie.match("(^|[^;]+)\\s*__adblocker\\s*=\\s*([^;]+)");return t&&t.pop()}function c(){clearInterval(n)}return{init:function(){var e;"true"===(t=a())?r():(e=0,n=setInterval((function(){100!==e&&"false"!==t||c(),"true"===t&&(r(),c()),t=a(),e++}),50))}}}().init()}();
</script><script type="e6851de2356a2aa710417145-text/javascript">window.lazyLoadOptions={elements_selector:"iframe[data-lazy-src]",data_src:"lazy-src",data_srcset:"lazy-srcset",data_sizes:"lazy-sizes",class_loading:"lazyloading",class_loaded:"lazyloaded",threshold:300,callback_loaded:function(element){if(element.tagName==="IFRAME"&&element.dataset.rocketLazyload=="fitvidscompatible"){if(element.classList.contains("lazyloaded")){if(typeof window.jQuery!="undefined"){if(jQuery.fn.fitVids){jQuery(element).parent().fitVids()}}}}}};window.addEventListener('LazyLoad::Initialized',function(e){var lazyLoadInstance=e.detail.instance;if(window.MutationObserver){var observer=new MutationObserver(function(mutations){var image_count=0;var iframe_count=0;var rocketlazy_count=0;mutations.forEach(function(mutation){for(var i=0;i<mutation.addedNodes.length;i++){if(typeof mutation.addedNodes[i].getElementsByTagName!=='function'){continue}
if(typeof mutation.addedNodes[i].getElementsByClassName!=='function'){continue}
images=mutation.addedNodes[i].getElementsByTagName('img');is_image=mutation.addedNodes[i].tagName=="IMG";iframes=mutation.addedNodes[i].getElementsByTagName('iframe');is_iframe=mutation.addedNodes[i].tagName=="IFRAME";rocket_lazy=mutation.addedNodes[i].getElementsByClassName('rocket-lazyload');image_count+=images.length;iframe_count+=iframes.length;rocketlazy_count+=rocket_lazy.length;if(is_image){image_count+=1}
if(is_iframe){iframe_count+=1}}});if(image_count>0||iframe_count>0||rocketlazy_count>0){lazyLoadInstance.update()}});var b=document.getElementsByTagName("body")[0];var config={childList:!0,subtree:!0};observer.observe(b,config)}},!1)</script><script data-no-minify="1" async src="https://machinelearningmastery.com/wp-content/plugins/wp-rocket/assets/js/lazyload/17.5/lazyload.min.js" type="e6851de2356a2aa710417145-text/javascript"></script><script src="/cdn-cgi/scripts/7d0fa10a/cloudflare-static/rocket-loader.min.js" data-cf-settings="e6851de2356a2aa710417145-|49" defer=""></script></body>
</html>
<!-- This website is like a Rocket, isn't it? Performance optimized by WP Rocket. Learn more: https://wp-rocket.me - Debug: cached@1668606074 -->